// Generated by gencpp from file adma_connect/Adma.msg
// DO NOT EDIT!


#ifndef ADMA_CONNECT_MESSAGE_ADMA_H
#define ADMA_CONNECT_MESSAGE_ADMA_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace adma_connect
{
template <class ContainerAllocator>
struct Adma_
{
  typedef Adma_<ContainerAllocator> Type;

  Adma_()
    : GeneSysID()
    , HeaderVersion()
    , FormatID(0)
    , FormatVersion()
    , SerialNo(0)
    , Alias(0)
    , ConfigID(0)
    , ConfigFormat(0)
    , ConfigVersion(0)
    , ConfigSize(0)
    , ByteOffset(0)
    , SliceSize(0)
    , StatusGPSMode(0)
    , StatusStandStill(0)
    , StatusSkidding(0)
    , StatusExternalVelOut(0)
    , StatusTrigGps(0)
    , StatusSignalIN3(0)
    , StatusSignalIn2(0)
    , StatusSignalIn1(0)
    , StatusAlignment(0)
    , StatusAHRSINS(0)
    , StatusDeadReckoning(0)
    , StatusSyncLock(0)
    , StatusEVKActiv(0)
    , StatusEVKEstimates(0)
    , StatusHeadingExecuted(0)
    , StatusConfigurationChanged(0)
    , StatusTilt(0)
    , StatusPos(0)
    , StatusCount(0)
    , StatusKalmanFilterSetteled(0)
    , StatusKFLatStimulated(0)
    , StatusKFLongStimulated(0)
    , StatusKFSteadyState(0)
    , StatusSpeed(0)
    , ErrorHardware()
    , Error_Misc1()
    , Error_Misc2()
    , Error_Misc3()
    , WarnGPS()
    , WarnMisc1()
    , ErrorHWSticky()
    , AccBodyHRX(0)
    , fAccBodyHRX(0.0)
    , RateBodyHRX(0)
    , fRateBodyHRX(0.0)
    , AccBodyHRY(0)
    , fAccBodyHRY(0.0)
    , RateBodyHRY(0)
    , fRateBodyHRY(0.0)
    , AccBodyHRZ(0)
    , fAccBodyHRZ(0.0)
    , RateBodyHRZ(0)
    , fRateBodyHRZ(0.0)
    , RateBodyX(0)
    , RateBodyY(0)
    , RateBodyZ(0)
    , fRateBodyX(0.0)
    , fRateBodyY(0.0)
    , fRateBodyZ(0.0)
    , RateHorX(0)
    , RateHorY(0)
    , RateHorZ(0)
    , fRateHorX(0.0)
    , fRateHorY(0.0)
    , fRateHorZ(0.0)
    , AccBodyX(0)
    , AccBodyY(0)
    , AccBodyZ(0)
    , fAccBodyX(0.0)
    , fAccBodyY(0.0)
    , fAccBodyZ(0.0)
    , AccHorX(0)
    , AccHorY(0)
    , AccHorZ(0)
    , fAccHorX(0.0)
    , fAccHorY(0.0)
    , fAccHorZ(0.0)
    , AccBodyX_1(0)
    , AccBodyY_1(0)
    , AccBodyZ_1(0)
    , fAccBodyX_1(0.0)
    , fAccBodyY_1(0.0)
    , fAccBodyZ_1(0.0)
    , AccBodyX_2(0)
    , AccBodyY_2(0)
    , AccBodyZ_2(0)
    , fAccBodyX_2(0.0)
    , fAccBodyY_2(0.0)
    , fAccBodyZ_2(0.0)
    , AccBodyX_3(0)
    , AccBodyY_3(0)
    , AccBodyZ_3(0)
    , fAccBodyX_3(0.0)
    , fAccBodyY_3(0.0)
    , fAccBodyZ_3(0.0)
    , AccBodyX_4(0)
    , AccBodyY_4(0)
    , AccBodyZ_4(0)
    , fAccBodyX_4(0.0)
    , fAccBodyY_4(0.0)
    , fAccBodyZ_4(0.0)
    , AccBodyX_5(0)
    , AccBodyY_5(0)
    , AccBodyZ_5(0)
    , fAccBodyX_5(0.0)
    , fAccBodyY_5(0.0)
    , fAccBodyZ_5(0.0)
    , AccBodyX_6(0)
    , AccBodyY_6(0)
    , AccBodyZ_6(0)
    , fAccBodyX_6(0.0)
    , fAccBodyY_6(0.0)
    , fAccBodyZ_6(0.0)
    , AccBodyX_7(0)
    , AccBodyY_7(0)
    , AccBodyZ_7(0)
    , fAccBodyX_7(0.0)
    , fAccBodyY_7(0.0)
    , fAccBodyZ_7(0.0)
    , AccBodyX_8(0)
    , AccBodyY_8(0)
    , AccBodyZ_8(0)
    , fAccBodyX_8(0.0)
    , fAccBodyY_8(0.0)
    , fAccBodyZ_8(0.0)
    , AccHorX_1(0)
    , AccHorY_1(0)
    , AccHorZ_1(0)
    , fAccHorX_1(0.0)
    , fAccHorY_1(0.0)
    , fAccHorZ_1(0.0)
    , AccHorX_2(0)
    , AccHorY_2(0)
    , AccHorZ_2(0)
    , fAccHorX_2(0.0)
    , fAccHorY_2(0.0)
    , fAccHorZ_2(0.0)
    , AccHorX_3(0)
    , AccHorY_3(0)
    , AccHorZ_3(0)
    , fAccHorX_3(0.0)
    , fAccHorY_3(0.0)
    , fAccHorZ_3(0.0)
    , AccHorX_4(0)
    , AccHorY_4(0)
    , AccHorZ_4(0)
    , fAccHorX_4(0.0)
    , fAccHorY_4(0.0)
    , fAccHorZ_4(0.0)
    , AccHorX_5(0)
    , AccHorY_5(0)
    , AccHorZ_5(0)
    , fAccHorX_5(0.0)
    , fAccHorY_5(0.0)
    , fAccHorZ_5(0.0)
    , AccHorX_6(0)
    , AccHorY_6(0)
    , AccHorZ_6(0)
    , fAccHorX_6(0.0)
    , fAccHorY_6(0.0)
    , fAccHorZ_6(0.0)
    , AccHorX_7(0)
    , AccHorY_7(0)
    , AccHorZ_7(0)
    , fAccHorX_7(0.0)
    , fAccHorY_7(0.0)
    , fAccHorZ_7(0.0)
    , AccHorX_8(0)
    , AccHorY_8(0)
    , AccHorZ_8(0)
    , fAccHorX_8(0.0)
    , fAccHorY_8(0.0)
    , fAccHorZ_8(0.0)
    , ExtVelAnX(0)
    , ExtVelAnY(0)
    , fExtVelAnX(0.0)
    , fExtVelAnY(0.0)
    , ExtVelDigX(0)
    , ExtVelDigY(0)
    , ExtVelDigPulsesX(0)
    , ExtVelDigPulsesY(0)
    , fExtVelDigX(0.0)
    , fExtVelDigY(0.0)
    , ExtVelXCorrected(0)
    , ExtVelYCorrected(0)
    , fExtVelXCorrected(0.0)
    , fExtVelYCorrected(0.0)
    , ExtBaroPressure(0)
    , fExtBaroPressure(0.0)
    , ExtBaroHeight(0)
    , ExtBaroHeightCorrected(0)
    , fExtBaroHeight(0.0)
    , fExtBaroHeightCorrected(0.0)
    , InvPathRadius(0)
    , fInvPathRadius(0.0)
    , SideSlipAngle(0)
    , fSideSlipAngle(0.0)
    , DistTrav(0)
    , fDistTrav(0.0)
    , InvPathRadius_1(0)
    , fInvPathRadius_1(0.0)
    , SideSlipAngle_1(0)
    , fSideSlipAngle_1(0.0)
    , DistTrav_1(0)
    , fDistTrav_1(0.0)
    , InvPathRadius_2(0)
    , fInvPathRadius_2(0.0)
    , SideSlipAngle_2(0)
    , fSideSlipAngle_2(0.0)
    , DistTrav_2(0)
    , fDistTrav_2(0.0)
    , InvPathRadius_3(0)
    , fInvPathRadius_3(0.0)
    , SideSlipAngle_3(0)
    , fSideSlipAngle_3(0.0)
    , DistTrav_3(0)
    , fDistTrav_3(0.0)
    , InvPathRadius_4(0)
    , fInvPathRadius_4(0.0)
    , SideSlipAngle_4(0)
    , fSideSlipAngle_4(0.0)
    , DistTrav_4(0)
    , fDistTrav_4(0.0)
    , InvPathRadius_5(0)
    , fInvPathRadius_5(0.0)
    , SideSlipAngle_5(0)
    , fSideSlipAngle_5(0.0)
    , DistTrav_5(0)
    , fDistTrav_5(0.0)
    , InvPathRadius_6(0)
    , fInvPathRadius_6(0.0)
    , SideSlipAngle_6(0)
    , fSideSlipAngle_6(0.0)
    , DistTrav_6(0)
    , fDistTrav_6(0.0)
    , InvPathRadius_7(0)
    , fInvPathRadius_7(0.0)
    , SideSlipAngle_7(0)
    , fSideSlipAngle_7(0.0)
    , DistTrav_7(0)
    , fDistTrav_7(0.0)
    , InvPathRadius_8(0)
    , fInvPathRadius_8(0.0)
    , SideSlipAngle_8(0)
    , fSideSlipAngle_8(0.0)
    , DistTrav_8(0)
    , fDistTrav_8(0.0)
    , TrigRising1(0)
    , TrigFalling1(0)
    , TrigRising2(0)
    , TrigFalling2(0)
    , TrigRising3(0)
    , TrigFalling3(0)
    , TrigRising4(0)
    , TrigFalling4(0)
    , SystemTa(0)
    , SystemTemp(0)
    , fSystemTemp(0.0)
    , SystemTimeSinceInit(0)
    , SystemDSPLoad(0)
    , fSystemDSPLoad(0.0)
    , GPSLatAbs(0)
    , GPSLonAbs(0)
    , fGPSLatAbs(0.0)
    , fGPSLonAbs(0.0)
    , GPSLatRel(0)
    , GPSLonRel(0)
    , fGPSLatRel(0.0)
    , fGPSLonRel(0.0)
    , GPSStddevLat(0)
    , GPSStddevLon(0)
    , GPSStddevHeight(0)
    , fGPSStddevLat(0.0)
    , fGPSStddevLon(0.0)
    , fGPSStddevHeight(0.0)
    , GPSVelFrameX(0)
    , GPSVelFrameY(0)
    , GPSVelFrameZ(0)
    , fGPSVelFrameX(0.0)
    , fGPSVelFrameY(0.0)
    , fGPSVelFrameZ(0.0)
    , GPSVelLatency(0)
    , fGPSVelLatency(0.0)
    , GPSStddevVelX(0)
    , GPSStddevVelY(0)
    , GPSStddevVelZ(0)
    , fGPSStddevVelX(0.0)
    , fGPSStddevVelY(0.0)
    , fGPSStddevVelZ(0.0)
    , GPSTimemsec(0)
    , GPSTimeWeek(0)
    , GPSTrigger(0)
    , GPSDiffAge(0)
    , fGPSDiffAge(0.0)
    , GPSStatsUsed(0)
    , GPSStatsVisible(0)
    , GPSLogDelay(0)
    , GPSReceiverLoad(0)
    , fGPSReceiverLoad(0.0)
    , GPSBaseNr(0)
    , INSRoll(0)
    , INSPitch(0)
    , INSYaw(0)
    , GPSCOG(0)
    , fINSRoll(0.0)
    , fINSPitch(0.0)
    , fINSYaw(0.0)
    , fGPSCOG(0.0)
    , GPSHeight(0)
    , Undulation(0)
    , fGPSHeight(0.0)
    , fUndulation(0.0)
    , GPSDualAntTimemsec(0)
    , GPSDualAntTimeWeek(0)
    , GPSDualAntHeading(0)
    , GPSDualAntPitch(0)
    , fGPSDualAntHeading(0.0)
    , fGPSDualAntPitch(0.0)
    , GPSDualAntStdDevHeading(0)
    , GPSDualAntStdDevPitch(0)
    , fGPSDualAntStdDevHeading(0.0)
    , fGPSDualAntStdDevPitch(0.0)
    , INSHeight(0)
    , fINSHeight(0.0)
    , INSHeight_1(0)
    , INSHeight_2(0)
    , fINSHeight_1(0.0)
    , fINSHeight_2(0.0)
    , INSHeight_3(0)
    , INSHeight_4(0)
    , fINSHeight_3(0.0)
    , fINSHeight_4(0.0)
    , INSHeight_5(0)
    , INSHeight_6(0)
    , fINSHeight_5(0.0)
    , fINSHeight_6(0.0)
    , INSHeight_7(0)
    , INSHeight_8(0)
    , fINSHeight_7(0.0)
    , fINSHeight_8(0.0)
    , INSTimemsec(0)
    , INSTimeWeek(0)
    , LeapSeconds(0)
    , INSLatAbs(0)
    , INSLonAbs(0)
    , fINSLatAbs(0.0)
    , fINSLonAbs(0.0)
    , INSLatRel(0)
    , INSLonRel(0)
    , fINSLatRel(0.0)
    , fINSLonRel(0.0)
    , INSLatAbs_1(0)
    , INSLonAbs_1(0)
    , fINSLatAbs_1(0.0)
    , fINSLonAbs_1(0.0)
    , INSLatRel_1(0)
    , INSLonRel_1(0)
    , fINSLatRel_1(0.0)
    , fINSLonRel_1(0.0)
    , INSLatAbs_2(0)
    , INSLonAbs_2(0)
    , fINSLatAbs_2(0.0)
    , fINSLonAbs_2(0.0)
    , INSLatRel_2(0)
    , INSLonRel_2(0)
    , fINSLatRel_2(0.0)
    , fINSLonRel_2(0.0)
    , INSLatAbs_3(0)
    , INSLonAbs_3(0)
    , fINSLatAbs_3(0.0)
    , fINSLonAbs_3(0.0)
    , INSLatRel_3(0)
    , INSLonRel_3(0)
    , fINSLatRel_3(0.0)
    , fINSLonRel_3(0.0)
    , INSLatAbs_4(0)
    , INSLonAbs_4(0)
    , fINSLatAbs_4(0.0)
    , fINSLonAbs_4(0.0)
    , INSLatRel_4(0)
    , INSLonRel_4(0)
    , fINSLatRel_4(0.0)
    , fINSLonRel_4(0.0)
    , INSLatAbs_5(0)
    , INSLonAbs_5(0)
    , fINSLatAbs_5(0.0)
    , fINSLonAbs_5(0.0)
    , INSLatRel_5(0)
    , INSLonRel_5(0)
    , fINSLatRel_5(0.0)
    , fINSLonRel_5(0.0)
    , INSLatAbs_6(0)
    , INSLonAbs_6(0)
    , fINSLatAbs_6(0.0)
    , fINSLonAbs_6(0.0)
    , INSLatRel_6(0)
    , INSLonRel_6(0)
    , fINSLatRel_6(0.0)
    , fINSLonRel_6(0.0)
    , INSLatAbs_7(0)
    , INSLonAbs_7(0)
    , fINSLatAbs_7(0.0)
    , fINSLonAbs_7(0.0)
    , INSLatRel_7(0)
    , INSLonRel_7(0)
    , fINSLatRel_7(0.0)
    , fINSLonRel_7(0.0)
    , INSLatAbs_8(0)
    , INSLonAbs_8(0)
    , fINSLatAbs_8(0.0)
    , fINSLonAbs_8(0.0)
    , INSLatRel_8(0)
    , INSLonRel_8(0)
    , fINSLatRel_8(0.0)
    , fINSLonRel_8(0.0)
    , INSVelHorX(0)
    , INSVelHorY(0)
    , INSVelHorZ(0)
    , fINSVelHorX(0.0)
    , fINSVelHorY(0.0)
    , fINSVelHorZ(0.0)
    , INSVelFrameX(0)
    , INSVelFrameY(0)
    , INSVelFrameZ(0)
    , fINSVelFrameX(0.0)
    , fINSVelFrameY(0.0)
    , fINSVelFrameZ(0.0)
    , INSVelHorX_1(0)
    , INSVelHorY_1(0)
    , INSVelHorZ_1(0)
    , fINSVelHorX_1(0.0)
    , fINSVelHorY_1(0.0)
    , fINSVelHorZ_1(0.0)
    , INSVelHorX_2(0)
    , INSVelHorY_2(0)
    , INSVelHorZ_2(0)
    , fINSVelHorX_2(0.0)
    , fINSVelHorY_2(0.0)
    , fINSVelHorZ_2(0.0)
    , INSVelHorX_3(0)
    , INSVelHorY_3(0)
    , INSVelHorZ_3(0)
    , fINSVelHorX_3(0.0)
    , fINSVelHorY_3(0.0)
    , fINSVelHorZ_3(0.0)
    , INSVelHorX_4(0)
    , INSVelHorY_4(0)
    , INSVelHorZ_4(0)
    , fINSVelHorX_4(0.0)
    , fINSVelHorY_4(0.0)
    , fINSVelHorZ_4(0.0)
    , INSVelHorX_5(0)
    , INSVelHorY_5(0)
    , INSVelHorZ_5(0)
    , fINSVelHorX_5(0.0)
    , fINSVelHorY_5(0.0)
    , fINSVelHorZ_5(0.0)
    , INSVelHorX_6(0)
    , INSVelHorY_6(0)
    , INSVelHorZ_6(0)
    , fINSVelHorX_6(0.0)
    , fINSVelHorY_6(0.0)
    , fINSVelHorZ_6(0.0)
    , INSVelHorX_7(0)
    , INSVelHorY_7(0)
    , INSVelHorZ_7(0)
    , fINSVelHorX_7(0.0)
    , fINSVelHorY_7(0.0)
    , fINSVelHorZ_7(0.0)
    , INSVelHorX_8(0)
    , INSVelHorY_8(0)
    , INSVelHorZ_8(0)
    , fINSVelHorX_8(0.0)
    , fINSVelHorY_8(0.0)
    , fINSVelHorZ_8(0.0)
    , INSStddevLat(0)
    , INSStddevLong(0)
    , INSStddevHeight(0)
    , fINSStddevLat(0.0)
    , fINSStddevLong(0.0)
    , fINSStddevHeight(0.0)
    , INSStddevVelX(0)
    , INSStddevVelY(0)
    , INSStddevVelZ(0)
    , fINSStddevVelX(0.0)
    , fINSStddevVelY(0.0)
    , fINSStddevVelZ(0.0)
    , INSStddevRoll(0)
    , INSStddevPitch(0)
    , INSStddevYaw(0)
    , fINSStddevRoll(0.0)
    , fINSStddevPitch(0.0)
    , fINSStddevYaw(0.0)
    , AN1(0)
    , AN2(0)
    , AN3(0)
    , AN4(0)
    , fAN1(0.0)
    , fAN2(0.0)
    , fAN3(0.0)
    , fAN4(0.0)
    , KFLatStimulated(0)
    , KFLongStimulated(0)
    , KFSteadyState(0)
    , GPSReceiverError(0)
    , GPSReceiverStatus(0)
    , TimeMsec(0.0)
    , TimeNsec(0.0)  {
    }
  Adma_(const ContainerAllocator& _alloc)
    : GeneSysID(_alloc)
    , HeaderVersion(_alloc)
    , FormatID(0)
    , FormatVersion(_alloc)
    , SerialNo(0)
    , Alias(0)
    , ConfigID(0)
    , ConfigFormat(0)
    , ConfigVersion(0)
    , ConfigSize(0)
    , ByteOffset(0)
    , SliceSize(0)
    , StatusGPSMode(0)
    , StatusStandStill(0)
    , StatusSkidding(0)
    , StatusExternalVelOut(0)
    , StatusTrigGps(0)
    , StatusSignalIN3(0)
    , StatusSignalIn2(0)
    , StatusSignalIn1(0)
    , StatusAlignment(0)
    , StatusAHRSINS(0)
    , StatusDeadReckoning(0)
    , StatusSyncLock(0)
    , StatusEVKActiv(0)
    , StatusEVKEstimates(0)
    , StatusHeadingExecuted(0)
    , StatusConfigurationChanged(0)
    , StatusTilt(0)
    , StatusPos(0)
    , StatusCount(0)
    , StatusKalmanFilterSetteled(0)
    , StatusKFLatStimulated(0)
    , StatusKFLongStimulated(0)
    , StatusKFSteadyState(0)
    , StatusSpeed(0)
    , ErrorHardware(_alloc)
    , Error_Misc1(_alloc)
    , Error_Misc2(_alloc)
    , Error_Misc3(_alloc)
    , WarnGPS(_alloc)
    , WarnMisc1(_alloc)
    , ErrorHWSticky(_alloc)
    , AccBodyHRX(0)
    , fAccBodyHRX(0.0)
    , RateBodyHRX(0)
    , fRateBodyHRX(0.0)
    , AccBodyHRY(0)
    , fAccBodyHRY(0.0)
    , RateBodyHRY(0)
    , fRateBodyHRY(0.0)
    , AccBodyHRZ(0)
    , fAccBodyHRZ(0.0)
    , RateBodyHRZ(0)
    , fRateBodyHRZ(0.0)
    , RateBodyX(0)
    , RateBodyY(0)
    , RateBodyZ(0)
    , fRateBodyX(0.0)
    , fRateBodyY(0.0)
    , fRateBodyZ(0.0)
    , RateHorX(0)
    , RateHorY(0)
    , RateHorZ(0)
    , fRateHorX(0.0)
    , fRateHorY(0.0)
    , fRateHorZ(0.0)
    , AccBodyX(0)
    , AccBodyY(0)
    , AccBodyZ(0)
    , fAccBodyX(0.0)
    , fAccBodyY(0.0)
    , fAccBodyZ(0.0)
    , AccHorX(0)
    , AccHorY(0)
    , AccHorZ(0)
    , fAccHorX(0.0)
    , fAccHorY(0.0)
    , fAccHorZ(0.0)
    , AccBodyX_1(0)
    , AccBodyY_1(0)
    , AccBodyZ_1(0)
    , fAccBodyX_1(0.0)
    , fAccBodyY_1(0.0)
    , fAccBodyZ_1(0.0)
    , AccBodyX_2(0)
    , AccBodyY_2(0)
    , AccBodyZ_2(0)
    , fAccBodyX_2(0.0)
    , fAccBodyY_2(0.0)
    , fAccBodyZ_2(0.0)
    , AccBodyX_3(0)
    , AccBodyY_3(0)
    , AccBodyZ_3(0)
    , fAccBodyX_3(0.0)
    , fAccBodyY_3(0.0)
    , fAccBodyZ_3(0.0)
    , AccBodyX_4(0)
    , AccBodyY_4(0)
    , AccBodyZ_4(0)
    , fAccBodyX_4(0.0)
    , fAccBodyY_4(0.0)
    , fAccBodyZ_4(0.0)
    , AccBodyX_5(0)
    , AccBodyY_5(0)
    , AccBodyZ_5(0)
    , fAccBodyX_5(0.0)
    , fAccBodyY_5(0.0)
    , fAccBodyZ_5(0.0)
    , AccBodyX_6(0)
    , AccBodyY_6(0)
    , AccBodyZ_6(0)
    , fAccBodyX_6(0.0)
    , fAccBodyY_6(0.0)
    , fAccBodyZ_6(0.0)
    , AccBodyX_7(0)
    , AccBodyY_7(0)
    , AccBodyZ_7(0)
    , fAccBodyX_7(0.0)
    , fAccBodyY_7(0.0)
    , fAccBodyZ_7(0.0)
    , AccBodyX_8(0)
    , AccBodyY_8(0)
    , AccBodyZ_8(0)
    , fAccBodyX_8(0.0)
    , fAccBodyY_8(0.0)
    , fAccBodyZ_8(0.0)
    , AccHorX_1(0)
    , AccHorY_1(0)
    , AccHorZ_1(0)
    , fAccHorX_1(0.0)
    , fAccHorY_1(0.0)
    , fAccHorZ_1(0.0)
    , AccHorX_2(0)
    , AccHorY_2(0)
    , AccHorZ_2(0)
    , fAccHorX_2(0.0)
    , fAccHorY_2(0.0)
    , fAccHorZ_2(0.0)
    , AccHorX_3(0)
    , AccHorY_3(0)
    , AccHorZ_3(0)
    , fAccHorX_3(0.0)
    , fAccHorY_3(0.0)
    , fAccHorZ_3(0.0)
    , AccHorX_4(0)
    , AccHorY_4(0)
    , AccHorZ_4(0)
    , fAccHorX_4(0.0)
    , fAccHorY_4(0.0)
    , fAccHorZ_4(0.0)
    , AccHorX_5(0)
    , AccHorY_5(0)
    , AccHorZ_5(0)
    , fAccHorX_5(0.0)
    , fAccHorY_5(0.0)
    , fAccHorZ_5(0.0)
    , AccHorX_6(0)
    , AccHorY_6(0)
    , AccHorZ_6(0)
    , fAccHorX_6(0.0)
    , fAccHorY_6(0.0)
    , fAccHorZ_6(0.0)
    , AccHorX_7(0)
    , AccHorY_7(0)
    , AccHorZ_7(0)
    , fAccHorX_7(0.0)
    , fAccHorY_7(0.0)
    , fAccHorZ_7(0.0)
    , AccHorX_8(0)
    , AccHorY_8(0)
    , AccHorZ_8(0)
    , fAccHorX_8(0.0)
    , fAccHorY_8(0.0)
    , fAccHorZ_8(0.0)
    , ExtVelAnX(0)
    , ExtVelAnY(0)
    , fExtVelAnX(0.0)
    , fExtVelAnY(0.0)
    , ExtVelDigX(0)
    , ExtVelDigY(0)
    , ExtVelDigPulsesX(0)
    , ExtVelDigPulsesY(0)
    , fExtVelDigX(0.0)
    , fExtVelDigY(0.0)
    , ExtVelXCorrected(0)
    , ExtVelYCorrected(0)
    , fExtVelXCorrected(0.0)
    , fExtVelYCorrected(0.0)
    , ExtBaroPressure(0)
    , fExtBaroPressure(0.0)
    , ExtBaroHeight(0)
    , ExtBaroHeightCorrected(0)
    , fExtBaroHeight(0.0)
    , fExtBaroHeightCorrected(0.0)
    , InvPathRadius(0)
    , fInvPathRadius(0.0)
    , SideSlipAngle(0)
    , fSideSlipAngle(0.0)
    , DistTrav(0)
    , fDistTrav(0.0)
    , InvPathRadius_1(0)
    , fInvPathRadius_1(0.0)
    , SideSlipAngle_1(0)
    , fSideSlipAngle_1(0.0)
    , DistTrav_1(0)
    , fDistTrav_1(0.0)
    , InvPathRadius_2(0)
    , fInvPathRadius_2(0.0)
    , SideSlipAngle_2(0)
    , fSideSlipAngle_2(0.0)
    , DistTrav_2(0)
    , fDistTrav_2(0.0)
    , InvPathRadius_3(0)
    , fInvPathRadius_3(0.0)
    , SideSlipAngle_3(0)
    , fSideSlipAngle_3(0.0)
    , DistTrav_3(0)
    , fDistTrav_3(0.0)
    , InvPathRadius_4(0)
    , fInvPathRadius_4(0.0)
    , SideSlipAngle_4(0)
    , fSideSlipAngle_4(0.0)
    , DistTrav_4(0)
    , fDistTrav_4(0.0)
    , InvPathRadius_5(0)
    , fInvPathRadius_5(0.0)
    , SideSlipAngle_5(0)
    , fSideSlipAngle_5(0.0)
    , DistTrav_5(0)
    , fDistTrav_5(0.0)
    , InvPathRadius_6(0)
    , fInvPathRadius_6(0.0)
    , SideSlipAngle_6(0)
    , fSideSlipAngle_6(0.0)
    , DistTrav_6(0)
    , fDistTrav_6(0.0)
    , InvPathRadius_7(0)
    , fInvPathRadius_7(0.0)
    , SideSlipAngle_7(0)
    , fSideSlipAngle_7(0.0)
    , DistTrav_7(0)
    , fDistTrav_7(0.0)
    , InvPathRadius_8(0)
    , fInvPathRadius_8(0.0)
    , SideSlipAngle_8(0)
    , fSideSlipAngle_8(0.0)
    , DistTrav_8(0)
    , fDistTrav_8(0.0)
    , TrigRising1(0)
    , TrigFalling1(0)
    , TrigRising2(0)
    , TrigFalling2(0)
    , TrigRising3(0)
    , TrigFalling3(0)
    , TrigRising4(0)
    , TrigFalling4(0)
    , SystemTa(0)
    , SystemTemp(0)
    , fSystemTemp(0.0)
    , SystemTimeSinceInit(0)
    , SystemDSPLoad(0)
    , fSystemDSPLoad(0.0)
    , GPSLatAbs(0)
    , GPSLonAbs(0)
    , fGPSLatAbs(0.0)
    , fGPSLonAbs(0.0)
    , GPSLatRel(0)
    , GPSLonRel(0)
    , fGPSLatRel(0.0)
    , fGPSLonRel(0.0)
    , GPSStddevLat(0)
    , GPSStddevLon(0)
    , GPSStddevHeight(0)
    , fGPSStddevLat(0.0)
    , fGPSStddevLon(0.0)
    , fGPSStddevHeight(0.0)
    , GPSVelFrameX(0)
    , GPSVelFrameY(0)
    , GPSVelFrameZ(0)
    , fGPSVelFrameX(0.0)
    , fGPSVelFrameY(0.0)
    , fGPSVelFrameZ(0.0)
    , GPSVelLatency(0)
    , fGPSVelLatency(0.0)
    , GPSStddevVelX(0)
    , GPSStddevVelY(0)
    , GPSStddevVelZ(0)
    , fGPSStddevVelX(0.0)
    , fGPSStddevVelY(0.0)
    , fGPSStddevVelZ(0.0)
    , GPSTimemsec(0)
    , GPSTimeWeek(0)
    , GPSTrigger(0)
    , GPSDiffAge(0)
    , fGPSDiffAge(0.0)
    , GPSStatsUsed(0)
    , GPSStatsVisible(0)
    , GPSLogDelay(0)
    , GPSReceiverLoad(0)
    , fGPSReceiverLoad(0.0)
    , GPSBaseNr(0)
    , INSRoll(0)
    , INSPitch(0)
    , INSYaw(0)
    , GPSCOG(0)
    , fINSRoll(0.0)
    , fINSPitch(0.0)
    , fINSYaw(0.0)
    , fGPSCOG(0.0)
    , GPSHeight(0)
    , Undulation(0)
    , fGPSHeight(0.0)
    , fUndulation(0.0)
    , GPSDualAntTimemsec(0)
    , GPSDualAntTimeWeek(0)
    , GPSDualAntHeading(0)
    , GPSDualAntPitch(0)
    , fGPSDualAntHeading(0.0)
    , fGPSDualAntPitch(0.0)
    , GPSDualAntStdDevHeading(0)
    , GPSDualAntStdDevPitch(0)
    , fGPSDualAntStdDevHeading(0.0)
    , fGPSDualAntStdDevPitch(0.0)
    , INSHeight(0)
    , fINSHeight(0.0)
    , INSHeight_1(0)
    , INSHeight_2(0)
    , fINSHeight_1(0.0)
    , fINSHeight_2(0.0)
    , INSHeight_3(0)
    , INSHeight_4(0)
    , fINSHeight_3(0.0)
    , fINSHeight_4(0.0)
    , INSHeight_5(0)
    , INSHeight_6(0)
    , fINSHeight_5(0.0)
    , fINSHeight_6(0.0)
    , INSHeight_7(0)
    , INSHeight_8(0)
    , fINSHeight_7(0.0)
    , fINSHeight_8(0.0)
    , INSTimemsec(0)
    , INSTimeWeek(0)
    , LeapSeconds(0)
    , INSLatAbs(0)
    , INSLonAbs(0)
    , fINSLatAbs(0.0)
    , fINSLonAbs(0.0)
    , INSLatRel(0)
    , INSLonRel(0)
    , fINSLatRel(0.0)
    , fINSLonRel(0.0)
    , INSLatAbs_1(0)
    , INSLonAbs_1(0)
    , fINSLatAbs_1(0.0)
    , fINSLonAbs_1(0.0)
    , INSLatRel_1(0)
    , INSLonRel_1(0)
    , fINSLatRel_1(0.0)
    , fINSLonRel_1(0.0)
    , INSLatAbs_2(0)
    , INSLonAbs_2(0)
    , fINSLatAbs_2(0.0)
    , fINSLonAbs_2(0.0)
    , INSLatRel_2(0)
    , INSLonRel_2(0)
    , fINSLatRel_2(0.0)
    , fINSLonRel_2(0.0)
    , INSLatAbs_3(0)
    , INSLonAbs_3(0)
    , fINSLatAbs_3(0.0)
    , fINSLonAbs_3(0.0)
    , INSLatRel_3(0)
    , INSLonRel_3(0)
    , fINSLatRel_3(0.0)
    , fINSLonRel_3(0.0)
    , INSLatAbs_4(0)
    , INSLonAbs_4(0)
    , fINSLatAbs_4(0.0)
    , fINSLonAbs_4(0.0)
    , INSLatRel_4(0)
    , INSLonRel_4(0)
    , fINSLatRel_4(0.0)
    , fINSLonRel_4(0.0)
    , INSLatAbs_5(0)
    , INSLonAbs_5(0)
    , fINSLatAbs_5(0.0)
    , fINSLonAbs_5(0.0)
    , INSLatRel_5(0)
    , INSLonRel_5(0)
    , fINSLatRel_5(0.0)
    , fINSLonRel_5(0.0)
    , INSLatAbs_6(0)
    , INSLonAbs_6(0)
    , fINSLatAbs_6(0.0)
    , fINSLonAbs_6(0.0)
    , INSLatRel_6(0)
    , INSLonRel_6(0)
    , fINSLatRel_6(0.0)
    , fINSLonRel_6(0.0)
    , INSLatAbs_7(0)
    , INSLonAbs_7(0)
    , fINSLatAbs_7(0.0)
    , fINSLonAbs_7(0.0)
    , INSLatRel_7(0)
    , INSLonRel_7(0)
    , fINSLatRel_7(0.0)
    , fINSLonRel_7(0.0)
    , INSLatAbs_8(0)
    , INSLonAbs_8(0)
    , fINSLatAbs_8(0.0)
    , fINSLonAbs_8(0.0)
    , INSLatRel_8(0)
    , INSLonRel_8(0)
    , fINSLatRel_8(0.0)
    , fINSLonRel_8(0.0)
    , INSVelHorX(0)
    , INSVelHorY(0)
    , INSVelHorZ(0)
    , fINSVelHorX(0.0)
    , fINSVelHorY(0.0)
    , fINSVelHorZ(0.0)
    , INSVelFrameX(0)
    , INSVelFrameY(0)
    , INSVelFrameZ(0)
    , fINSVelFrameX(0.0)
    , fINSVelFrameY(0.0)
    , fINSVelFrameZ(0.0)
    , INSVelHorX_1(0)
    , INSVelHorY_1(0)
    , INSVelHorZ_1(0)
    , fINSVelHorX_1(0.0)
    , fINSVelHorY_1(0.0)
    , fINSVelHorZ_1(0.0)
    , INSVelHorX_2(0)
    , INSVelHorY_2(0)
    , INSVelHorZ_2(0)
    , fINSVelHorX_2(0.0)
    , fINSVelHorY_2(0.0)
    , fINSVelHorZ_2(0.0)
    , INSVelHorX_3(0)
    , INSVelHorY_3(0)
    , INSVelHorZ_3(0)
    , fINSVelHorX_3(0.0)
    , fINSVelHorY_3(0.0)
    , fINSVelHorZ_3(0.0)
    , INSVelHorX_4(0)
    , INSVelHorY_4(0)
    , INSVelHorZ_4(0)
    , fINSVelHorX_4(0.0)
    , fINSVelHorY_4(0.0)
    , fINSVelHorZ_4(0.0)
    , INSVelHorX_5(0)
    , INSVelHorY_5(0)
    , INSVelHorZ_5(0)
    , fINSVelHorX_5(0.0)
    , fINSVelHorY_5(0.0)
    , fINSVelHorZ_5(0.0)
    , INSVelHorX_6(0)
    , INSVelHorY_6(0)
    , INSVelHorZ_6(0)
    , fINSVelHorX_6(0.0)
    , fINSVelHorY_6(0.0)
    , fINSVelHorZ_6(0.0)
    , INSVelHorX_7(0)
    , INSVelHorY_7(0)
    , INSVelHorZ_7(0)
    , fINSVelHorX_7(0.0)
    , fINSVelHorY_7(0.0)
    , fINSVelHorZ_7(0.0)
    , INSVelHorX_8(0)
    , INSVelHorY_8(0)
    , INSVelHorZ_8(0)
    , fINSVelHorX_8(0.0)
    , fINSVelHorY_8(0.0)
    , fINSVelHorZ_8(0.0)
    , INSStddevLat(0)
    , INSStddevLong(0)
    , INSStddevHeight(0)
    , fINSStddevLat(0.0)
    , fINSStddevLong(0.0)
    , fINSStddevHeight(0.0)
    , INSStddevVelX(0)
    , INSStddevVelY(0)
    , INSStddevVelZ(0)
    , fINSStddevVelX(0.0)
    , fINSStddevVelY(0.0)
    , fINSStddevVelZ(0.0)
    , INSStddevRoll(0)
    , INSStddevPitch(0)
    , INSStddevYaw(0)
    , fINSStddevRoll(0.0)
    , fINSStddevPitch(0.0)
    , fINSStddevYaw(0.0)
    , AN1(0)
    , AN2(0)
    , AN3(0)
    , AN4(0)
    , fAN1(0.0)
    , fAN2(0.0)
    , fAN3(0.0)
    , fAN4(0.0)
    , KFLatStimulated(0)
    , KFLongStimulated(0)
    , KFSteadyState(0)
    , GPSReceiverError(0)
    , GPSReceiverStatus(0)
    , TimeMsec(0.0)
    , TimeNsec(0.0)  {
  (void)_alloc;
    }



   typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _GeneSysID_type;
  _GeneSysID_type GeneSysID;

   typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _HeaderVersion_type;
  _HeaderVersion_type HeaderVersion;

   typedef uint32_t _FormatID_type;
  _FormatID_type FormatID;

   typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _FormatVersion_type;
  _FormatVersion_type FormatVersion;

   typedef uint32_t _SerialNo_type;
  _SerialNo_type SerialNo;

   typedef uint32_t _Alias_type;
  _Alias_type Alias;

   typedef uint32_t _ConfigID_type;
  _ConfigID_type ConfigID;

   typedef uint32_t _ConfigFormat_type;
  _ConfigFormat_type ConfigFormat;

   typedef uint32_t _ConfigVersion_type;
  _ConfigVersion_type ConfigVersion;

   typedef uint32_t _ConfigSize_type;
  _ConfigSize_type ConfigSize;

   typedef uint32_t _ByteOffset_type;
  _ByteOffset_type ByteOffset;

   typedef uint32_t _SliceSize_type;
  _SliceSize_type SliceSize;

   typedef int32_t _StatusGPSMode_type;
  _StatusGPSMode_type StatusGPSMode;

   typedef int32_t _StatusStandStill_type;
  _StatusStandStill_type StatusStandStill;

   typedef int32_t _StatusSkidding_type;
  _StatusSkidding_type StatusSkidding;

   typedef int32_t _StatusExternalVelOut_type;
  _StatusExternalVelOut_type StatusExternalVelOut;

   typedef int32_t _StatusTrigGps_type;
  _StatusTrigGps_type StatusTrigGps;

   typedef int32_t _StatusSignalIN3_type;
  _StatusSignalIN3_type StatusSignalIN3;

   typedef int32_t _StatusSignalIn2_type;
  _StatusSignalIn2_type StatusSignalIn2;

   typedef int32_t _StatusSignalIn1_type;
  _StatusSignalIn1_type StatusSignalIn1;

   typedef int32_t _StatusAlignment_type;
  _StatusAlignment_type StatusAlignment;

   typedef int32_t _StatusAHRSINS_type;
  _StatusAHRSINS_type StatusAHRSINS;

   typedef int32_t _StatusDeadReckoning_type;
  _StatusDeadReckoning_type StatusDeadReckoning;

   typedef int32_t _StatusSyncLock_type;
  _StatusSyncLock_type StatusSyncLock;

   typedef int32_t _StatusEVKActiv_type;
  _StatusEVKActiv_type StatusEVKActiv;

   typedef int32_t _StatusEVKEstimates_type;
  _StatusEVKEstimates_type StatusEVKEstimates;

   typedef int32_t _StatusHeadingExecuted_type;
  _StatusHeadingExecuted_type StatusHeadingExecuted;

   typedef int32_t _StatusConfigurationChanged_type;
  _StatusConfigurationChanged_type StatusConfigurationChanged;

   typedef int32_t _StatusTilt_type;
  _StatusTilt_type StatusTilt;

   typedef int32_t _StatusPos_type;
  _StatusPos_type StatusPos;

   typedef int8_t _StatusCount_type;
  _StatusCount_type StatusCount;

   typedef int32_t _StatusKalmanFilterSetteled_type;
  _StatusKalmanFilterSetteled_type StatusKalmanFilterSetteled;

   typedef int32_t _StatusKFLatStimulated_type;
  _StatusKFLatStimulated_type StatusKFLatStimulated;

   typedef int32_t _StatusKFLongStimulated_type;
  _StatusKFLongStimulated_type StatusKFLongStimulated;

   typedef int32_t _StatusKFSteadyState_type;
  _StatusKFSteadyState_type StatusKFSteadyState;

   typedef int32_t _StatusSpeed_type;
  _StatusSpeed_type StatusSpeed;

   typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _ErrorHardware_type;
  _ErrorHardware_type ErrorHardware;

   typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _Error_Misc1_type;
  _Error_Misc1_type Error_Misc1;

   typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _Error_Misc2_type;
  _Error_Misc2_type Error_Misc2;

   typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _Error_Misc3_type;
  _Error_Misc3_type Error_Misc3;

   typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _WarnGPS_type;
  _WarnGPS_type WarnGPS;

   typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _WarnMisc1_type;
  _WarnMisc1_type WarnMisc1;

   typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _ErrorHWSticky_type;
  _ErrorHWSticky_type ErrorHWSticky;

   typedef int32_t _AccBodyHRX_type;
  _AccBodyHRX_type AccBodyHRX;

   typedef float _fAccBodyHRX_type;
  _fAccBodyHRX_type fAccBodyHRX;

   typedef int32_t _RateBodyHRX_type;
  _RateBodyHRX_type RateBodyHRX;

   typedef float _fRateBodyHRX_type;
  _fRateBodyHRX_type fRateBodyHRX;

   typedef int32_t _AccBodyHRY_type;
  _AccBodyHRY_type AccBodyHRY;

   typedef float _fAccBodyHRY_type;
  _fAccBodyHRY_type fAccBodyHRY;

   typedef int32_t _RateBodyHRY_type;
  _RateBodyHRY_type RateBodyHRY;

   typedef float _fRateBodyHRY_type;
  _fRateBodyHRY_type fRateBodyHRY;

   typedef int32_t _AccBodyHRZ_type;
  _AccBodyHRZ_type AccBodyHRZ;

   typedef float _fAccBodyHRZ_type;
  _fAccBodyHRZ_type fAccBodyHRZ;

   typedef int32_t _RateBodyHRZ_type;
  _RateBodyHRZ_type RateBodyHRZ;

   typedef float _fRateBodyHRZ_type;
  _fRateBodyHRZ_type fRateBodyHRZ;

   typedef int16_t _RateBodyX_type;
  _RateBodyX_type RateBodyX;

   typedef int16_t _RateBodyY_type;
  _RateBodyY_type RateBodyY;

   typedef int16_t _RateBodyZ_type;
  _RateBodyZ_type RateBodyZ;

   typedef float _fRateBodyX_type;
  _fRateBodyX_type fRateBodyX;

   typedef float _fRateBodyY_type;
  _fRateBodyY_type fRateBodyY;

   typedef float _fRateBodyZ_type;
  _fRateBodyZ_type fRateBodyZ;

   typedef int16_t _RateHorX_type;
  _RateHorX_type RateHorX;

   typedef int16_t _RateHorY_type;
  _RateHorY_type RateHorY;

   typedef int16_t _RateHorZ_type;
  _RateHorZ_type RateHorZ;

   typedef float _fRateHorX_type;
  _fRateHorX_type fRateHorX;

   typedef float _fRateHorY_type;
  _fRateHorY_type fRateHorY;

   typedef float _fRateHorZ_type;
  _fRateHorZ_type fRateHorZ;

   typedef int16_t _AccBodyX_type;
  _AccBodyX_type AccBodyX;

   typedef int16_t _AccBodyY_type;
  _AccBodyY_type AccBodyY;

   typedef int16_t _AccBodyZ_type;
  _AccBodyZ_type AccBodyZ;

   typedef float _fAccBodyX_type;
  _fAccBodyX_type fAccBodyX;

   typedef float _fAccBodyY_type;
  _fAccBodyY_type fAccBodyY;

   typedef float _fAccBodyZ_type;
  _fAccBodyZ_type fAccBodyZ;

   typedef int16_t _AccHorX_type;
  _AccHorX_type AccHorX;

   typedef int16_t _AccHorY_type;
  _AccHorY_type AccHorY;

   typedef int16_t _AccHorZ_type;
  _AccHorZ_type AccHorZ;

   typedef float _fAccHorX_type;
  _fAccHorX_type fAccHorX;

   typedef float _fAccHorY_type;
  _fAccHorY_type fAccHorY;

   typedef float _fAccHorZ_type;
  _fAccHorZ_type fAccHorZ;

   typedef int16_t _AccBodyX_1_type;
  _AccBodyX_1_type AccBodyX_1;

   typedef int16_t _AccBodyY_1_type;
  _AccBodyY_1_type AccBodyY_1;

   typedef int16_t _AccBodyZ_1_type;
  _AccBodyZ_1_type AccBodyZ_1;

   typedef float _fAccBodyX_1_type;
  _fAccBodyX_1_type fAccBodyX_1;

   typedef float _fAccBodyY_1_type;
  _fAccBodyY_1_type fAccBodyY_1;

   typedef float _fAccBodyZ_1_type;
  _fAccBodyZ_1_type fAccBodyZ_1;

   typedef int16_t _AccBodyX_2_type;
  _AccBodyX_2_type AccBodyX_2;

   typedef int16_t _AccBodyY_2_type;
  _AccBodyY_2_type AccBodyY_2;

   typedef int16_t _AccBodyZ_2_type;
  _AccBodyZ_2_type AccBodyZ_2;

   typedef float _fAccBodyX_2_type;
  _fAccBodyX_2_type fAccBodyX_2;

   typedef float _fAccBodyY_2_type;
  _fAccBodyY_2_type fAccBodyY_2;

   typedef float _fAccBodyZ_2_type;
  _fAccBodyZ_2_type fAccBodyZ_2;

   typedef int16_t _AccBodyX_3_type;
  _AccBodyX_3_type AccBodyX_3;

   typedef int16_t _AccBodyY_3_type;
  _AccBodyY_3_type AccBodyY_3;

   typedef int16_t _AccBodyZ_3_type;
  _AccBodyZ_3_type AccBodyZ_3;

   typedef float _fAccBodyX_3_type;
  _fAccBodyX_3_type fAccBodyX_3;

   typedef float _fAccBodyY_3_type;
  _fAccBodyY_3_type fAccBodyY_3;

   typedef float _fAccBodyZ_3_type;
  _fAccBodyZ_3_type fAccBodyZ_3;

   typedef int16_t _AccBodyX_4_type;
  _AccBodyX_4_type AccBodyX_4;

   typedef int16_t _AccBodyY_4_type;
  _AccBodyY_4_type AccBodyY_4;

   typedef int16_t _AccBodyZ_4_type;
  _AccBodyZ_4_type AccBodyZ_4;

   typedef float _fAccBodyX_4_type;
  _fAccBodyX_4_type fAccBodyX_4;

   typedef float _fAccBodyY_4_type;
  _fAccBodyY_4_type fAccBodyY_4;

   typedef float _fAccBodyZ_4_type;
  _fAccBodyZ_4_type fAccBodyZ_4;

   typedef int16_t _AccBodyX_5_type;
  _AccBodyX_5_type AccBodyX_5;

   typedef int16_t _AccBodyY_5_type;
  _AccBodyY_5_type AccBodyY_5;

   typedef int16_t _AccBodyZ_5_type;
  _AccBodyZ_5_type AccBodyZ_5;

   typedef float _fAccBodyX_5_type;
  _fAccBodyX_5_type fAccBodyX_5;

   typedef float _fAccBodyY_5_type;
  _fAccBodyY_5_type fAccBodyY_5;

   typedef float _fAccBodyZ_5_type;
  _fAccBodyZ_5_type fAccBodyZ_5;

   typedef int16_t _AccBodyX_6_type;
  _AccBodyX_6_type AccBodyX_6;

   typedef int16_t _AccBodyY_6_type;
  _AccBodyY_6_type AccBodyY_6;

   typedef int16_t _AccBodyZ_6_type;
  _AccBodyZ_6_type AccBodyZ_6;

   typedef float _fAccBodyX_6_type;
  _fAccBodyX_6_type fAccBodyX_6;

   typedef float _fAccBodyY_6_type;
  _fAccBodyY_6_type fAccBodyY_6;

   typedef float _fAccBodyZ_6_type;
  _fAccBodyZ_6_type fAccBodyZ_6;

   typedef int16_t _AccBodyX_7_type;
  _AccBodyX_7_type AccBodyX_7;

   typedef int16_t _AccBodyY_7_type;
  _AccBodyY_7_type AccBodyY_7;

   typedef int16_t _AccBodyZ_7_type;
  _AccBodyZ_7_type AccBodyZ_7;

   typedef float _fAccBodyX_7_type;
  _fAccBodyX_7_type fAccBodyX_7;

   typedef float _fAccBodyY_7_type;
  _fAccBodyY_7_type fAccBodyY_7;

   typedef float _fAccBodyZ_7_type;
  _fAccBodyZ_7_type fAccBodyZ_7;

   typedef int16_t _AccBodyX_8_type;
  _AccBodyX_8_type AccBodyX_8;

   typedef int16_t _AccBodyY_8_type;
  _AccBodyY_8_type AccBodyY_8;

   typedef int16_t _AccBodyZ_8_type;
  _AccBodyZ_8_type AccBodyZ_8;

   typedef float _fAccBodyX_8_type;
  _fAccBodyX_8_type fAccBodyX_8;

   typedef float _fAccBodyY_8_type;
  _fAccBodyY_8_type fAccBodyY_8;

   typedef float _fAccBodyZ_8_type;
  _fAccBodyZ_8_type fAccBodyZ_8;

   typedef int16_t _AccHorX_1_type;
  _AccHorX_1_type AccHorX_1;

   typedef int16_t _AccHorY_1_type;
  _AccHorY_1_type AccHorY_1;

   typedef int16_t _AccHorZ_1_type;
  _AccHorZ_1_type AccHorZ_1;

   typedef float _fAccHorX_1_type;
  _fAccHorX_1_type fAccHorX_1;

   typedef float _fAccHorY_1_type;
  _fAccHorY_1_type fAccHorY_1;

   typedef float _fAccHorZ_1_type;
  _fAccHorZ_1_type fAccHorZ_1;

   typedef int16_t _AccHorX_2_type;
  _AccHorX_2_type AccHorX_2;

   typedef int16_t _AccHorY_2_type;
  _AccHorY_2_type AccHorY_2;

   typedef int16_t _AccHorZ_2_type;
  _AccHorZ_2_type AccHorZ_2;

   typedef float _fAccHorX_2_type;
  _fAccHorX_2_type fAccHorX_2;

   typedef float _fAccHorY_2_type;
  _fAccHorY_2_type fAccHorY_2;

   typedef float _fAccHorZ_2_type;
  _fAccHorZ_2_type fAccHorZ_2;

   typedef int16_t _AccHorX_3_type;
  _AccHorX_3_type AccHorX_3;

   typedef int16_t _AccHorY_3_type;
  _AccHorY_3_type AccHorY_3;

   typedef int16_t _AccHorZ_3_type;
  _AccHorZ_3_type AccHorZ_3;

   typedef float _fAccHorX_3_type;
  _fAccHorX_3_type fAccHorX_3;

   typedef float _fAccHorY_3_type;
  _fAccHorY_3_type fAccHorY_3;

   typedef float _fAccHorZ_3_type;
  _fAccHorZ_3_type fAccHorZ_3;

   typedef int16_t _AccHorX_4_type;
  _AccHorX_4_type AccHorX_4;

   typedef int16_t _AccHorY_4_type;
  _AccHorY_4_type AccHorY_4;

   typedef int16_t _AccHorZ_4_type;
  _AccHorZ_4_type AccHorZ_4;

   typedef float _fAccHorX_4_type;
  _fAccHorX_4_type fAccHorX_4;

   typedef float _fAccHorY_4_type;
  _fAccHorY_4_type fAccHorY_4;

   typedef float _fAccHorZ_4_type;
  _fAccHorZ_4_type fAccHorZ_4;

   typedef int16_t _AccHorX_5_type;
  _AccHorX_5_type AccHorX_5;

   typedef int16_t _AccHorY_5_type;
  _AccHorY_5_type AccHorY_5;

   typedef int16_t _AccHorZ_5_type;
  _AccHorZ_5_type AccHorZ_5;

   typedef float _fAccHorX_5_type;
  _fAccHorX_5_type fAccHorX_5;

   typedef float _fAccHorY_5_type;
  _fAccHorY_5_type fAccHorY_5;

   typedef float _fAccHorZ_5_type;
  _fAccHorZ_5_type fAccHorZ_5;

   typedef int16_t _AccHorX_6_type;
  _AccHorX_6_type AccHorX_6;

   typedef int16_t _AccHorY_6_type;
  _AccHorY_6_type AccHorY_6;

   typedef int16_t _AccHorZ_6_type;
  _AccHorZ_6_type AccHorZ_6;

   typedef float _fAccHorX_6_type;
  _fAccHorX_6_type fAccHorX_6;

   typedef float _fAccHorY_6_type;
  _fAccHorY_6_type fAccHorY_6;

   typedef float _fAccHorZ_6_type;
  _fAccHorZ_6_type fAccHorZ_6;

   typedef int16_t _AccHorX_7_type;
  _AccHorX_7_type AccHorX_7;

   typedef int16_t _AccHorY_7_type;
  _AccHorY_7_type AccHorY_7;

   typedef int16_t _AccHorZ_7_type;
  _AccHorZ_7_type AccHorZ_7;

   typedef float _fAccHorX_7_type;
  _fAccHorX_7_type fAccHorX_7;

   typedef float _fAccHorY_7_type;
  _fAccHorY_7_type fAccHorY_7;

   typedef float _fAccHorZ_7_type;
  _fAccHorZ_7_type fAccHorZ_7;

   typedef int16_t _AccHorX_8_type;
  _AccHorX_8_type AccHorX_8;

   typedef int16_t _AccHorY_8_type;
  _AccHorY_8_type AccHorY_8;

   typedef int16_t _AccHorZ_8_type;
  _AccHorZ_8_type AccHorZ_8;

   typedef float _fAccHorX_8_type;
  _fAccHorX_8_type fAccHorX_8;

   typedef float _fAccHorY_8_type;
  _fAccHorY_8_type fAccHorY_8;

   typedef float _fAccHorZ_8_type;
  _fAccHorZ_8_type fAccHorZ_8;

   typedef int16_t _ExtVelAnX_type;
  _ExtVelAnX_type ExtVelAnX;

   typedef int16_t _ExtVelAnY_type;
  _ExtVelAnY_type ExtVelAnY;

   typedef float _fExtVelAnX_type;
  _fExtVelAnX_type fExtVelAnX;

   typedef float _fExtVelAnY_type;
  _fExtVelAnY_type fExtVelAnY;

   typedef int16_t _ExtVelDigX_type;
  _ExtVelDigX_type ExtVelDigX;

   typedef int16_t _ExtVelDigY_type;
  _ExtVelDigY_type ExtVelDigY;

   typedef int16_t _ExtVelDigPulsesX_type;
  _ExtVelDigPulsesX_type ExtVelDigPulsesX;

   typedef int16_t _ExtVelDigPulsesY_type;
  _ExtVelDigPulsesY_type ExtVelDigPulsesY;

   typedef float _fExtVelDigX_type;
  _fExtVelDigX_type fExtVelDigX;

   typedef float _fExtVelDigY_type;
  _fExtVelDigY_type fExtVelDigY;

   typedef int16_t _ExtVelXCorrected_type;
  _ExtVelXCorrected_type ExtVelXCorrected;

   typedef int16_t _ExtVelYCorrected_type;
  _ExtVelYCorrected_type ExtVelYCorrected;

   typedef float _fExtVelXCorrected_type;
  _fExtVelXCorrected_type fExtVelXCorrected;

   typedef float _fExtVelYCorrected_type;
  _fExtVelYCorrected_type fExtVelYCorrected;

   typedef uint32_t _ExtBaroPressure_type;
  _ExtBaroPressure_type ExtBaroPressure;

   typedef float _fExtBaroPressure_type;
  _fExtBaroPressure_type fExtBaroPressure;

   typedef int32_t _ExtBaroHeight_type;
  _ExtBaroHeight_type ExtBaroHeight;

   typedef int32_t _ExtBaroHeightCorrected_type;
  _ExtBaroHeightCorrected_type ExtBaroHeightCorrected;

   typedef float _fExtBaroHeight_type;
  _fExtBaroHeight_type fExtBaroHeight;

   typedef float _fExtBaroHeightCorrected_type;
  _fExtBaroHeightCorrected_type fExtBaroHeightCorrected;

   typedef int16_t _InvPathRadius_type;
  _InvPathRadius_type InvPathRadius;

   typedef float _fInvPathRadius_type;
  _fInvPathRadius_type fInvPathRadius;

   typedef int16_t _SideSlipAngle_type;
  _SideSlipAngle_type SideSlipAngle;

   typedef float _fSideSlipAngle_type;
  _fSideSlipAngle_type fSideSlipAngle;

   typedef uint32_t _DistTrav_type;
  _DistTrav_type DistTrav;

   typedef float _fDistTrav_type;
  _fDistTrav_type fDistTrav;

   typedef int16_t _InvPathRadius_1_type;
  _InvPathRadius_1_type InvPathRadius_1;

   typedef float _fInvPathRadius_1_type;
  _fInvPathRadius_1_type fInvPathRadius_1;

   typedef int16_t _SideSlipAngle_1_type;
  _SideSlipAngle_1_type SideSlipAngle_1;

   typedef float _fSideSlipAngle_1_type;
  _fSideSlipAngle_1_type fSideSlipAngle_1;

   typedef uint32_t _DistTrav_1_type;
  _DistTrav_1_type DistTrav_1;

   typedef float _fDistTrav_1_type;
  _fDistTrav_1_type fDistTrav_1;

   typedef int16_t _InvPathRadius_2_type;
  _InvPathRadius_2_type InvPathRadius_2;

   typedef float _fInvPathRadius_2_type;
  _fInvPathRadius_2_type fInvPathRadius_2;

   typedef int16_t _SideSlipAngle_2_type;
  _SideSlipAngle_2_type SideSlipAngle_2;

   typedef float _fSideSlipAngle_2_type;
  _fSideSlipAngle_2_type fSideSlipAngle_2;

   typedef uint32_t _DistTrav_2_type;
  _DistTrav_2_type DistTrav_2;

   typedef float _fDistTrav_2_type;
  _fDistTrav_2_type fDistTrav_2;

   typedef int16_t _InvPathRadius_3_type;
  _InvPathRadius_3_type InvPathRadius_3;

   typedef float _fInvPathRadius_3_type;
  _fInvPathRadius_3_type fInvPathRadius_3;

   typedef int16_t _SideSlipAngle_3_type;
  _SideSlipAngle_3_type SideSlipAngle_3;

   typedef float _fSideSlipAngle_3_type;
  _fSideSlipAngle_3_type fSideSlipAngle_3;

   typedef uint32_t _DistTrav_3_type;
  _DistTrav_3_type DistTrav_3;

   typedef float _fDistTrav_3_type;
  _fDistTrav_3_type fDistTrav_3;

   typedef int16_t _InvPathRadius_4_type;
  _InvPathRadius_4_type InvPathRadius_4;

   typedef float _fInvPathRadius_4_type;
  _fInvPathRadius_4_type fInvPathRadius_4;

   typedef int16_t _SideSlipAngle_4_type;
  _SideSlipAngle_4_type SideSlipAngle_4;

   typedef float _fSideSlipAngle_4_type;
  _fSideSlipAngle_4_type fSideSlipAngle_4;

   typedef uint32_t _DistTrav_4_type;
  _DistTrav_4_type DistTrav_4;

   typedef float _fDistTrav_4_type;
  _fDistTrav_4_type fDistTrav_4;

   typedef int16_t _InvPathRadius_5_type;
  _InvPathRadius_5_type InvPathRadius_5;

   typedef float _fInvPathRadius_5_type;
  _fInvPathRadius_5_type fInvPathRadius_5;

   typedef int16_t _SideSlipAngle_5_type;
  _SideSlipAngle_5_type SideSlipAngle_5;

   typedef float _fSideSlipAngle_5_type;
  _fSideSlipAngle_5_type fSideSlipAngle_5;

   typedef uint32_t _DistTrav_5_type;
  _DistTrav_5_type DistTrav_5;

   typedef float _fDistTrav_5_type;
  _fDistTrav_5_type fDistTrav_5;

   typedef int16_t _InvPathRadius_6_type;
  _InvPathRadius_6_type InvPathRadius_6;

   typedef float _fInvPathRadius_6_type;
  _fInvPathRadius_6_type fInvPathRadius_6;

   typedef int16_t _SideSlipAngle_6_type;
  _SideSlipAngle_6_type SideSlipAngle_6;

   typedef float _fSideSlipAngle_6_type;
  _fSideSlipAngle_6_type fSideSlipAngle_6;

   typedef uint32_t _DistTrav_6_type;
  _DistTrav_6_type DistTrav_6;

   typedef float _fDistTrav_6_type;
  _fDistTrav_6_type fDistTrav_6;

   typedef int16_t _InvPathRadius_7_type;
  _InvPathRadius_7_type InvPathRadius_7;

   typedef float _fInvPathRadius_7_type;
  _fInvPathRadius_7_type fInvPathRadius_7;

   typedef int16_t _SideSlipAngle_7_type;
  _SideSlipAngle_7_type SideSlipAngle_7;

   typedef float _fSideSlipAngle_7_type;
  _fSideSlipAngle_7_type fSideSlipAngle_7;

   typedef uint32_t _DistTrav_7_type;
  _DistTrav_7_type DistTrav_7;

   typedef float _fDistTrav_7_type;
  _fDistTrav_7_type fDistTrav_7;

   typedef int16_t _InvPathRadius_8_type;
  _InvPathRadius_8_type InvPathRadius_8;

   typedef float _fInvPathRadius_8_type;
  _fInvPathRadius_8_type fInvPathRadius_8;

   typedef int16_t _SideSlipAngle_8_type;
  _SideSlipAngle_8_type SideSlipAngle_8;

   typedef float _fSideSlipAngle_8_type;
  _fSideSlipAngle_8_type fSideSlipAngle_8;

   typedef uint32_t _DistTrav_8_type;
  _DistTrav_8_type DistTrav_8;

   typedef float _fDistTrav_8_type;
  _fDistTrav_8_type fDistTrav_8;

   typedef uint16_t _TrigRising1_type;
  _TrigRising1_type TrigRising1;

   typedef uint16_t _TrigFalling1_type;
  _TrigFalling1_type TrigFalling1;

   typedef uint16_t _TrigRising2_type;
  _TrigRising2_type TrigRising2;

   typedef uint16_t _TrigFalling2_type;
  _TrigFalling2_type TrigFalling2;

   typedef uint16_t _TrigRising3_type;
  _TrigRising3_type TrigRising3;

   typedef uint16_t _TrigFalling3_type;
  _TrigFalling3_type TrigFalling3;

   typedef uint16_t _TrigRising4_type;
  _TrigRising4_type TrigRising4;

   typedef uint16_t _TrigFalling4_type;
  _TrigFalling4_type TrigFalling4;

   typedef uint16_t _SystemTa_type;
  _SystemTa_type SystemTa;

   typedef int16_t _SystemTemp_type;
  _SystemTemp_type SystemTemp;

   typedef float _fSystemTemp_type;
  _fSystemTemp_type fSystemTemp;

   typedef uint16_t _SystemTimeSinceInit_type;
  _SystemTimeSinceInit_type SystemTimeSinceInit;

   typedef uint16_t _SystemDSPLoad_type;
  _SystemDSPLoad_type SystemDSPLoad;

   typedef float _fSystemDSPLoad_type;
  _fSystemDSPLoad_type fSystemDSPLoad;

   typedef int32_t _GPSLatAbs_type;
  _GPSLatAbs_type GPSLatAbs;

   typedef int32_t _GPSLonAbs_type;
  _GPSLonAbs_type GPSLonAbs;

   typedef float _fGPSLatAbs_type;
  _fGPSLatAbs_type fGPSLatAbs;

   typedef float _fGPSLonAbs_type;
  _fGPSLonAbs_type fGPSLonAbs;

   typedef int32_t _GPSLatRel_type;
  _GPSLatRel_type GPSLatRel;

   typedef int32_t _GPSLonRel_type;
  _GPSLonRel_type GPSLonRel;

   typedef float _fGPSLatRel_type;
  _fGPSLatRel_type fGPSLatRel;

   typedef float _fGPSLonRel_type;
  _fGPSLonRel_type fGPSLonRel;

   typedef uint16_t _GPSStddevLat_type;
  _GPSStddevLat_type GPSStddevLat;

   typedef uint16_t _GPSStddevLon_type;
  _GPSStddevLon_type GPSStddevLon;

   typedef uint16_t _GPSStddevHeight_type;
  _GPSStddevHeight_type GPSStddevHeight;

   typedef float _fGPSStddevLat_type;
  _fGPSStddevLat_type fGPSStddevLat;

   typedef float _fGPSStddevLon_type;
  _fGPSStddevLon_type fGPSStddevLon;

   typedef float _fGPSStddevHeight_type;
  _fGPSStddevHeight_type fGPSStddevHeight;

   typedef int16_t _GPSVelFrameX_type;
  _GPSVelFrameX_type GPSVelFrameX;

   typedef int16_t _GPSVelFrameY_type;
  _GPSVelFrameY_type GPSVelFrameY;

   typedef int16_t _GPSVelFrameZ_type;
  _GPSVelFrameZ_type GPSVelFrameZ;

   typedef float _fGPSVelFrameX_type;
  _fGPSVelFrameX_type fGPSVelFrameX;

   typedef float _fGPSVelFrameY_type;
  _fGPSVelFrameY_type fGPSVelFrameY;

   typedef float _fGPSVelFrameZ_type;
  _fGPSVelFrameZ_type fGPSVelFrameZ;

   typedef uint16_t _GPSVelLatency_type;
  _GPSVelLatency_type GPSVelLatency;

   typedef float _fGPSVelLatency_type;
  _fGPSVelLatency_type fGPSVelLatency;

   typedef uint16_t _GPSStddevVelX_type;
  _GPSStddevVelX_type GPSStddevVelX;

   typedef uint16_t _GPSStddevVelY_type;
  _GPSStddevVelY_type GPSStddevVelY;

   typedef uint16_t _GPSStddevVelZ_type;
  _GPSStddevVelZ_type GPSStddevVelZ;

   typedef float _fGPSStddevVelX_type;
  _fGPSStddevVelX_type fGPSStddevVelX;

   typedef float _fGPSStddevVelY_type;
  _fGPSStddevVelY_type fGPSStddevVelY;

   typedef float _fGPSStddevVelZ_type;
  _fGPSStddevVelZ_type fGPSStddevVelZ;

   typedef uint32_t _GPSTimemsec_type;
  _GPSTimemsec_type GPSTimemsec;

   typedef uint16_t _GPSTimeWeek_type;
  _GPSTimeWeek_type GPSTimeWeek;

   typedef uint16_t _GPSTrigger_type;
  _GPSTrigger_type GPSTrigger;

   typedef uint16_t _GPSDiffAge_type;
  _GPSDiffAge_type GPSDiffAge;

   typedef float _fGPSDiffAge_type;
  _fGPSDiffAge_type fGPSDiffAge;

   typedef int8_t _GPSStatsUsed_type;
  _GPSStatsUsed_type GPSStatsUsed;

   typedef int8_t _GPSStatsVisible_type;
  _GPSStatsVisible_type GPSStatsVisible;

   typedef int8_t _GPSLogDelay_type;
  _GPSLogDelay_type GPSLogDelay;

   typedef int8_t _GPSReceiverLoad_type;
  _GPSReceiverLoad_type GPSReceiverLoad;

   typedef float _fGPSReceiverLoad_type;
  _fGPSReceiverLoad_type fGPSReceiverLoad;

   typedef int32_t _GPSBaseNr_type;
  _GPSBaseNr_type GPSBaseNr;

   typedef int16_t _INSRoll_type;
  _INSRoll_type INSRoll;

   typedef int16_t _INSPitch_type;
  _INSPitch_type INSPitch;

   typedef uint16_t _INSYaw_type;
  _INSYaw_type INSYaw;

   typedef uint16_t _GPSCOG_type;
  _GPSCOG_type GPSCOG;

   typedef float _fINSRoll_type;
  _fINSRoll_type fINSRoll;

   typedef float _fINSPitch_type;
  _fINSPitch_type fINSPitch;

   typedef float _fINSYaw_type;
  _fINSYaw_type fINSYaw;

   typedef float _fGPSCOG_type;
  _fGPSCOG_type fGPSCOG;

   typedef int32_t _GPSHeight_type;
  _GPSHeight_type GPSHeight;

   typedef int16_t _Undulation_type;
  _Undulation_type Undulation;

   typedef float _fGPSHeight_type;
  _fGPSHeight_type fGPSHeight;

   typedef float _fUndulation_type;
  _fUndulation_type fUndulation;

   typedef uint32_t _GPSDualAntTimemsec_type;
  _GPSDualAntTimemsec_type GPSDualAntTimemsec;

   typedef uint16_t _GPSDualAntTimeWeek_type;
  _GPSDualAntTimeWeek_type GPSDualAntTimeWeek;

   typedef uint16_t _GPSDualAntHeading_type;
  _GPSDualAntHeading_type GPSDualAntHeading;

   typedef int16_t _GPSDualAntPitch_type;
  _GPSDualAntPitch_type GPSDualAntPitch;

   typedef float _fGPSDualAntHeading_type;
  _fGPSDualAntHeading_type fGPSDualAntHeading;

   typedef float _fGPSDualAntPitch_type;
  _fGPSDualAntPitch_type fGPSDualAntPitch;

   typedef int8_t _GPSDualAntStdDevHeading_type;
  _GPSDualAntStdDevHeading_type GPSDualAntStdDevHeading;

   typedef int8_t _GPSDualAntStdDevPitch_type;
  _GPSDualAntStdDevPitch_type GPSDualAntStdDevPitch;

   typedef float _fGPSDualAntStdDevHeading_type;
  _fGPSDualAntStdDevHeading_type fGPSDualAntStdDevHeading;

   typedef float _fGPSDualAntStdDevPitch_type;
  _fGPSDualAntStdDevPitch_type fGPSDualAntStdDevPitch;

   typedef int32_t _INSHeight_type;
  _INSHeight_type INSHeight;

   typedef float _fINSHeight_type;
  _fINSHeight_type fINSHeight;

   typedef int32_t _INSHeight_1_type;
  _INSHeight_1_type INSHeight_1;

   typedef int32_t _INSHeight_2_type;
  _INSHeight_2_type INSHeight_2;

   typedef float _fINSHeight_1_type;
  _fINSHeight_1_type fINSHeight_1;

   typedef float _fINSHeight_2_type;
  _fINSHeight_2_type fINSHeight_2;

   typedef int32_t _INSHeight_3_type;
  _INSHeight_3_type INSHeight_3;

   typedef int32_t _INSHeight_4_type;
  _INSHeight_4_type INSHeight_4;

   typedef float _fINSHeight_3_type;
  _fINSHeight_3_type fINSHeight_3;

   typedef float _fINSHeight_4_type;
  _fINSHeight_4_type fINSHeight_4;

   typedef int32_t _INSHeight_5_type;
  _INSHeight_5_type INSHeight_5;

   typedef int32_t _INSHeight_6_type;
  _INSHeight_6_type INSHeight_6;

   typedef float _fINSHeight_5_type;
  _fINSHeight_5_type fINSHeight_5;

   typedef float _fINSHeight_6_type;
  _fINSHeight_6_type fINSHeight_6;

   typedef int32_t _INSHeight_7_type;
  _INSHeight_7_type INSHeight_7;

   typedef int32_t _INSHeight_8_type;
  _INSHeight_8_type INSHeight_8;

   typedef float _fINSHeight_7_type;
  _fINSHeight_7_type fINSHeight_7;

   typedef float _fINSHeight_8_type;
  _fINSHeight_8_type fINSHeight_8;

   typedef uint32_t _INSTimemsec_type;
  _INSTimemsec_type INSTimemsec;

   typedef uint16_t _INSTimeWeek_type;
  _INSTimeWeek_type INSTimeWeek;

   typedef int16_t _LeapSeconds_type;
  _LeapSeconds_type LeapSeconds;

   typedef int32_t _INSLatAbs_type;
  _INSLatAbs_type INSLatAbs;

   typedef int32_t _INSLonAbs_type;
  _INSLonAbs_type INSLonAbs;

   typedef float _fINSLatAbs_type;
  _fINSLatAbs_type fINSLatAbs;

   typedef float _fINSLonAbs_type;
  _fINSLonAbs_type fINSLonAbs;

   typedef int32_t _INSLatRel_type;
  _INSLatRel_type INSLatRel;

   typedef int32_t _INSLonRel_type;
  _INSLonRel_type INSLonRel;

   typedef float _fINSLatRel_type;
  _fINSLatRel_type fINSLatRel;

   typedef float _fINSLonRel_type;
  _fINSLonRel_type fINSLonRel;

   typedef int32_t _INSLatAbs_1_type;
  _INSLatAbs_1_type INSLatAbs_1;

   typedef int32_t _INSLonAbs_1_type;
  _INSLonAbs_1_type INSLonAbs_1;

   typedef float _fINSLatAbs_1_type;
  _fINSLatAbs_1_type fINSLatAbs_1;

   typedef float _fINSLonAbs_1_type;
  _fINSLonAbs_1_type fINSLonAbs_1;

   typedef int32_t _INSLatRel_1_type;
  _INSLatRel_1_type INSLatRel_1;

   typedef int32_t _INSLonRel_1_type;
  _INSLonRel_1_type INSLonRel_1;

   typedef float _fINSLatRel_1_type;
  _fINSLatRel_1_type fINSLatRel_1;

   typedef float _fINSLonRel_1_type;
  _fINSLonRel_1_type fINSLonRel_1;

   typedef int32_t _INSLatAbs_2_type;
  _INSLatAbs_2_type INSLatAbs_2;

   typedef int32_t _INSLonAbs_2_type;
  _INSLonAbs_2_type INSLonAbs_2;

   typedef float _fINSLatAbs_2_type;
  _fINSLatAbs_2_type fINSLatAbs_2;

   typedef float _fINSLonAbs_2_type;
  _fINSLonAbs_2_type fINSLonAbs_2;

   typedef int32_t _INSLatRel_2_type;
  _INSLatRel_2_type INSLatRel_2;

   typedef int32_t _INSLonRel_2_type;
  _INSLonRel_2_type INSLonRel_2;

   typedef float _fINSLatRel_2_type;
  _fINSLatRel_2_type fINSLatRel_2;

   typedef float _fINSLonRel_2_type;
  _fINSLonRel_2_type fINSLonRel_2;

   typedef int32_t _INSLatAbs_3_type;
  _INSLatAbs_3_type INSLatAbs_3;

   typedef int32_t _INSLonAbs_3_type;
  _INSLonAbs_3_type INSLonAbs_3;

   typedef float _fINSLatAbs_3_type;
  _fINSLatAbs_3_type fINSLatAbs_3;

   typedef float _fINSLonAbs_3_type;
  _fINSLonAbs_3_type fINSLonAbs_3;

   typedef int32_t _INSLatRel_3_type;
  _INSLatRel_3_type INSLatRel_3;

   typedef int32_t _INSLonRel_3_type;
  _INSLonRel_3_type INSLonRel_3;

   typedef float _fINSLatRel_3_type;
  _fINSLatRel_3_type fINSLatRel_3;

   typedef float _fINSLonRel_3_type;
  _fINSLonRel_3_type fINSLonRel_3;

   typedef int32_t _INSLatAbs_4_type;
  _INSLatAbs_4_type INSLatAbs_4;

   typedef int32_t _INSLonAbs_4_type;
  _INSLonAbs_4_type INSLonAbs_4;

   typedef float _fINSLatAbs_4_type;
  _fINSLatAbs_4_type fINSLatAbs_4;

   typedef float _fINSLonAbs_4_type;
  _fINSLonAbs_4_type fINSLonAbs_4;

   typedef int32_t _INSLatRel_4_type;
  _INSLatRel_4_type INSLatRel_4;

   typedef int32_t _INSLonRel_4_type;
  _INSLonRel_4_type INSLonRel_4;

   typedef float _fINSLatRel_4_type;
  _fINSLatRel_4_type fINSLatRel_4;

   typedef float _fINSLonRel_4_type;
  _fINSLonRel_4_type fINSLonRel_4;

   typedef int32_t _INSLatAbs_5_type;
  _INSLatAbs_5_type INSLatAbs_5;

   typedef int32_t _INSLonAbs_5_type;
  _INSLonAbs_5_type INSLonAbs_5;

   typedef float _fINSLatAbs_5_type;
  _fINSLatAbs_5_type fINSLatAbs_5;

   typedef float _fINSLonAbs_5_type;
  _fINSLonAbs_5_type fINSLonAbs_5;

   typedef int32_t _INSLatRel_5_type;
  _INSLatRel_5_type INSLatRel_5;

   typedef int32_t _INSLonRel_5_type;
  _INSLonRel_5_type INSLonRel_5;

   typedef float _fINSLatRel_5_type;
  _fINSLatRel_5_type fINSLatRel_5;

   typedef float _fINSLonRel_5_type;
  _fINSLonRel_5_type fINSLonRel_5;

   typedef int32_t _INSLatAbs_6_type;
  _INSLatAbs_6_type INSLatAbs_6;

   typedef int32_t _INSLonAbs_6_type;
  _INSLonAbs_6_type INSLonAbs_6;

   typedef float _fINSLatAbs_6_type;
  _fINSLatAbs_6_type fINSLatAbs_6;

   typedef float _fINSLonAbs_6_type;
  _fINSLonAbs_6_type fINSLonAbs_6;

   typedef int32_t _INSLatRel_6_type;
  _INSLatRel_6_type INSLatRel_6;

   typedef int32_t _INSLonRel_6_type;
  _INSLonRel_6_type INSLonRel_6;

   typedef float _fINSLatRel_6_type;
  _fINSLatRel_6_type fINSLatRel_6;

   typedef float _fINSLonRel_6_type;
  _fINSLonRel_6_type fINSLonRel_6;

   typedef int32_t _INSLatAbs_7_type;
  _INSLatAbs_7_type INSLatAbs_7;

   typedef int32_t _INSLonAbs_7_type;
  _INSLonAbs_7_type INSLonAbs_7;

   typedef float _fINSLatAbs_7_type;
  _fINSLatAbs_7_type fINSLatAbs_7;

   typedef float _fINSLonAbs_7_type;
  _fINSLonAbs_7_type fINSLonAbs_7;

   typedef int32_t _INSLatRel_7_type;
  _INSLatRel_7_type INSLatRel_7;

   typedef int32_t _INSLonRel_7_type;
  _INSLonRel_7_type INSLonRel_7;

   typedef float _fINSLatRel_7_type;
  _fINSLatRel_7_type fINSLatRel_7;

   typedef float _fINSLonRel_7_type;
  _fINSLonRel_7_type fINSLonRel_7;

   typedef int32_t _INSLatAbs_8_type;
  _INSLatAbs_8_type INSLatAbs_8;

   typedef int32_t _INSLonAbs_8_type;
  _INSLonAbs_8_type INSLonAbs_8;

   typedef float _fINSLatAbs_8_type;
  _fINSLatAbs_8_type fINSLatAbs_8;

   typedef float _fINSLonAbs_8_type;
  _fINSLonAbs_8_type fINSLonAbs_8;

   typedef int32_t _INSLatRel_8_type;
  _INSLatRel_8_type INSLatRel_8;

   typedef int32_t _INSLonRel_8_type;
  _INSLonRel_8_type INSLonRel_8;

   typedef float _fINSLatRel_8_type;
  _fINSLatRel_8_type fINSLatRel_8;

   typedef float _fINSLonRel_8_type;
  _fINSLonRel_8_type fINSLonRel_8;

   typedef int16_t _INSVelHorX_type;
  _INSVelHorX_type INSVelHorX;

   typedef int16_t _INSVelHorY_type;
  _INSVelHorY_type INSVelHorY;

   typedef int16_t _INSVelHorZ_type;
  _INSVelHorZ_type INSVelHorZ;

   typedef float _fINSVelHorX_type;
  _fINSVelHorX_type fINSVelHorX;

   typedef float _fINSVelHorY_type;
  _fINSVelHorY_type fINSVelHorY;

   typedef float _fINSVelHorZ_type;
  _fINSVelHorZ_type fINSVelHorZ;

   typedef int16_t _INSVelFrameX_type;
  _INSVelFrameX_type INSVelFrameX;

   typedef int16_t _INSVelFrameY_type;
  _INSVelFrameY_type INSVelFrameY;

   typedef int16_t _INSVelFrameZ_type;
  _INSVelFrameZ_type INSVelFrameZ;

   typedef float _fINSVelFrameX_type;
  _fINSVelFrameX_type fINSVelFrameX;

   typedef float _fINSVelFrameY_type;
  _fINSVelFrameY_type fINSVelFrameY;

   typedef float _fINSVelFrameZ_type;
  _fINSVelFrameZ_type fINSVelFrameZ;

   typedef int16_t _INSVelHorX_1_type;
  _INSVelHorX_1_type INSVelHorX_1;

   typedef int16_t _INSVelHorY_1_type;
  _INSVelHorY_1_type INSVelHorY_1;

   typedef int16_t _INSVelHorZ_1_type;
  _INSVelHorZ_1_type INSVelHorZ_1;

   typedef float _fINSVelHorX_1_type;
  _fINSVelHorX_1_type fINSVelHorX_1;

   typedef float _fINSVelHorY_1_type;
  _fINSVelHorY_1_type fINSVelHorY_1;

   typedef float _fINSVelHorZ_1_type;
  _fINSVelHorZ_1_type fINSVelHorZ_1;

   typedef int16_t _INSVelHorX_2_type;
  _INSVelHorX_2_type INSVelHorX_2;

   typedef int16_t _INSVelHorY_2_type;
  _INSVelHorY_2_type INSVelHorY_2;

   typedef int16_t _INSVelHorZ_2_type;
  _INSVelHorZ_2_type INSVelHorZ_2;

   typedef float _fINSVelHorX_2_type;
  _fINSVelHorX_2_type fINSVelHorX_2;

   typedef float _fINSVelHorY_2_type;
  _fINSVelHorY_2_type fINSVelHorY_2;

   typedef float _fINSVelHorZ_2_type;
  _fINSVelHorZ_2_type fINSVelHorZ_2;

   typedef int16_t _INSVelHorX_3_type;
  _INSVelHorX_3_type INSVelHorX_3;

   typedef int16_t _INSVelHorY_3_type;
  _INSVelHorY_3_type INSVelHorY_3;

   typedef int16_t _INSVelHorZ_3_type;
  _INSVelHorZ_3_type INSVelHorZ_3;

   typedef float _fINSVelHorX_3_type;
  _fINSVelHorX_3_type fINSVelHorX_3;

   typedef float _fINSVelHorY_3_type;
  _fINSVelHorY_3_type fINSVelHorY_3;

   typedef float _fINSVelHorZ_3_type;
  _fINSVelHorZ_3_type fINSVelHorZ_3;

   typedef int16_t _INSVelHorX_4_type;
  _INSVelHorX_4_type INSVelHorX_4;

   typedef int16_t _INSVelHorY_4_type;
  _INSVelHorY_4_type INSVelHorY_4;

   typedef int16_t _INSVelHorZ_4_type;
  _INSVelHorZ_4_type INSVelHorZ_4;

   typedef float _fINSVelHorX_4_type;
  _fINSVelHorX_4_type fINSVelHorX_4;

   typedef float _fINSVelHorY_4_type;
  _fINSVelHorY_4_type fINSVelHorY_4;

   typedef float _fINSVelHorZ_4_type;
  _fINSVelHorZ_4_type fINSVelHorZ_4;

   typedef int16_t _INSVelHorX_5_type;
  _INSVelHorX_5_type INSVelHorX_5;

   typedef int16_t _INSVelHorY_5_type;
  _INSVelHorY_5_type INSVelHorY_5;

   typedef int16_t _INSVelHorZ_5_type;
  _INSVelHorZ_5_type INSVelHorZ_5;

   typedef float _fINSVelHorX_5_type;
  _fINSVelHorX_5_type fINSVelHorX_5;

   typedef float _fINSVelHorY_5_type;
  _fINSVelHorY_5_type fINSVelHorY_5;

   typedef float _fINSVelHorZ_5_type;
  _fINSVelHorZ_5_type fINSVelHorZ_5;

   typedef int16_t _INSVelHorX_6_type;
  _INSVelHorX_6_type INSVelHorX_6;

   typedef int16_t _INSVelHorY_6_type;
  _INSVelHorY_6_type INSVelHorY_6;

   typedef int16_t _INSVelHorZ_6_type;
  _INSVelHorZ_6_type INSVelHorZ_6;

   typedef float _fINSVelHorX_6_type;
  _fINSVelHorX_6_type fINSVelHorX_6;

   typedef float _fINSVelHorY_6_type;
  _fINSVelHorY_6_type fINSVelHorY_6;

   typedef float _fINSVelHorZ_6_type;
  _fINSVelHorZ_6_type fINSVelHorZ_6;

   typedef int16_t _INSVelHorX_7_type;
  _INSVelHorX_7_type INSVelHorX_7;

   typedef int16_t _INSVelHorY_7_type;
  _INSVelHorY_7_type INSVelHorY_7;

   typedef int16_t _INSVelHorZ_7_type;
  _INSVelHorZ_7_type INSVelHorZ_7;

   typedef float _fINSVelHorX_7_type;
  _fINSVelHorX_7_type fINSVelHorX_7;

   typedef float _fINSVelHorY_7_type;
  _fINSVelHorY_7_type fINSVelHorY_7;

   typedef float _fINSVelHorZ_7_type;
  _fINSVelHorZ_7_type fINSVelHorZ_7;

   typedef int16_t _INSVelHorX_8_type;
  _INSVelHorX_8_type INSVelHorX_8;

   typedef int16_t _INSVelHorY_8_type;
  _INSVelHorY_8_type INSVelHorY_8;

   typedef int16_t _INSVelHorZ_8_type;
  _INSVelHorZ_8_type INSVelHorZ_8;

   typedef float _fINSVelHorX_8_type;
  _fINSVelHorX_8_type fINSVelHorX_8;

   typedef float _fINSVelHorY_8_type;
  _fINSVelHorY_8_type fINSVelHorY_8;

   typedef float _fINSVelHorZ_8_type;
  _fINSVelHorZ_8_type fINSVelHorZ_8;

   typedef uint16_t _INSStddevLat_type;
  _INSStddevLat_type INSStddevLat;

   typedef uint16_t _INSStddevLong_type;
  _INSStddevLong_type INSStddevLong;

   typedef uint16_t _INSStddevHeight_type;
  _INSStddevHeight_type INSStddevHeight;

   typedef float _fINSStddevLat_type;
  _fINSStddevLat_type fINSStddevLat;

   typedef float _fINSStddevLong_type;
  _fINSStddevLong_type fINSStddevLong;

   typedef float _fINSStddevHeight_type;
  _fINSStddevHeight_type fINSStddevHeight;

   typedef int8_t _INSStddevVelX_type;
  _INSStddevVelX_type INSStddevVelX;

   typedef int8_t _INSStddevVelY_type;
  _INSStddevVelY_type INSStddevVelY;

   typedef int8_t _INSStddevVelZ_type;
  _INSStddevVelZ_type INSStddevVelZ;

   typedef float _fINSStddevVelX_type;
  _fINSStddevVelX_type fINSStddevVelX;

   typedef float _fINSStddevVelY_type;
  _fINSStddevVelY_type fINSStddevVelY;

   typedef float _fINSStddevVelZ_type;
  _fINSStddevVelZ_type fINSStddevVelZ;

   typedef int8_t _INSStddevRoll_type;
  _INSStddevRoll_type INSStddevRoll;

   typedef int8_t _INSStddevPitch_type;
  _INSStddevPitch_type INSStddevPitch;

   typedef int8_t _INSStddevYaw_type;
  _INSStddevYaw_type INSStddevYaw;

   typedef float _fINSStddevRoll_type;
  _fINSStddevRoll_type fINSStddevRoll;

   typedef float _fINSStddevPitch_type;
  _fINSStddevPitch_type fINSStddevPitch;

   typedef float _fINSStddevYaw_type;
  _fINSStddevYaw_type fINSStddevYaw;

   typedef int16_t _AN1_type;
  _AN1_type AN1;

   typedef int16_t _AN2_type;
  _AN2_type AN2;

   typedef int16_t _AN3_type;
  _AN3_type AN3;

   typedef int16_t _AN4_type;
  _AN4_type AN4;

   typedef float _fAN1_type;
  _fAN1_type fAN1;

   typedef float _fAN2_type;
  _fAN2_type fAN2;

   typedef float _fAN3_type;
  _fAN3_type fAN3;

   typedef float _fAN4_type;
  _fAN4_type fAN4;

   typedef uint8_t _KFLatStimulated_type;
  _KFLatStimulated_type KFLatStimulated;

   typedef uint8_t _KFLongStimulated_type;
  _KFLongStimulated_type KFLongStimulated;

   typedef uint8_t _KFSteadyState_type;
  _KFSteadyState_type KFSteadyState;

   typedef uint32_t _GPSReceiverError_type;
  _GPSReceiverError_type GPSReceiverError;

   typedef uint32_t _GPSReceiverStatus_type;
  _GPSReceiverStatus_type GPSReceiverStatus;

   typedef float _TimeMsec_type;
  _TimeMsec_type TimeMsec;

   typedef float _TimeNsec_type;
  _TimeNsec_type TimeNsec;





  typedef boost::shared_ptr< ::adma_connect::Adma_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::adma_connect::Adma_<ContainerAllocator> const> ConstPtr;

}; // struct Adma_

typedef ::adma_connect::Adma_<std::allocator<void> > Adma;

typedef boost::shared_ptr< ::adma_connect::Adma > AdmaPtr;
typedef boost::shared_ptr< ::adma_connect::Adma const> AdmaConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::adma_connect::Adma_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::adma_connect::Adma_<ContainerAllocator> >::stream(s, "", v);
return s;
}


template<typename ContainerAllocator1, typename ContainerAllocator2>
bool operator==(const ::adma_connect::Adma_<ContainerAllocator1> & lhs, const ::adma_connect::Adma_<ContainerAllocator2> & rhs)
{
  return lhs.GeneSysID == rhs.GeneSysID &&
    lhs.HeaderVersion == rhs.HeaderVersion &&
    lhs.FormatID == rhs.FormatID &&
    lhs.FormatVersion == rhs.FormatVersion &&
    lhs.SerialNo == rhs.SerialNo &&
    lhs.Alias == rhs.Alias &&
    lhs.ConfigID == rhs.ConfigID &&
    lhs.ConfigFormat == rhs.ConfigFormat &&
    lhs.ConfigVersion == rhs.ConfigVersion &&
    lhs.ConfigSize == rhs.ConfigSize &&
    lhs.ByteOffset == rhs.ByteOffset &&
    lhs.SliceSize == rhs.SliceSize &&
    lhs.StatusGPSMode == rhs.StatusGPSMode &&
    lhs.StatusStandStill == rhs.StatusStandStill &&
    lhs.StatusSkidding == rhs.StatusSkidding &&
    lhs.StatusExternalVelOut == rhs.StatusExternalVelOut &&
    lhs.StatusTrigGps == rhs.StatusTrigGps &&
    lhs.StatusSignalIN3 == rhs.StatusSignalIN3 &&
    lhs.StatusSignalIn2 == rhs.StatusSignalIn2 &&
    lhs.StatusSignalIn1 == rhs.StatusSignalIn1 &&
    lhs.StatusAlignment == rhs.StatusAlignment &&
    lhs.StatusAHRSINS == rhs.StatusAHRSINS &&
    lhs.StatusDeadReckoning == rhs.StatusDeadReckoning &&
    lhs.StatusSyncLock == rhs.StatusSyncLock &&
    lhs.StatusEVKActiv == rhs.StatusEVKActiv &&
    lhs.StatusEVKEstimates == rhs.StatusEVKEstimates &&
    lhs.StatusHeadingExecuted == rhs.StatusHeadingExecuted &&
    lhs.StatusConfigurationChanged == rhs.StatusConfigurationChanged &&
    lhs.StatusTilt == rhs.StatusTilt &&
    lhs.StatusPos == rhs.StatusPos &&
    lhs.StatusCount == rhs.StatusCount &&
    lhs.StatusKalmanFilterSetteled == rhs.StatusKalmanFilterSetteled &&
    lhs.StatusKFLatStimulated == rhs.StatusKFLatStimulated &&
    lhs.StatusKFLongStimulated == rhs.StatusKFLongStimulated &&
    lhs.StatusKFSteadyState == rhs.StatusKFSteadyState &&
    lhs.StatusSpeed == rhs.StatusSpeed &&
    lhs.ErrorHardware == rhs.ErrorHardware &&
    lhs.Error_Misc1 == rhs.Error_Misc1 &&
    lhs.Error_Misc2 == rhs.Error_Misc2 &&
    lhs.Error_Misc3 == rhs.Error_Misc3 &&
    lhs.WarnGPS == rhs.WarnGPS &&
    lhs.WarnMisc1 == rhs.WarnMisc1 &&
    lhs.ErrorHWSticky == rhs.ErrorHWSticky &&
    lhs.AccBodyHRX == rhs.AccBodyHRX &&
    lhs.fAccBodyHRX == rhs.fAccBodyHRX &&
    lhs.RateBodyHRX == rhs.RateBodyHRX &&
    lhs.fRateBodyHRX == rhs.fRateBodyHRX &&
    lhs.AccBodyHRY == rhs.AccBodyHRY &&
    lhs.fAccBodyHRY == rhs.fAccBodyHRY &&
    lhs.RateBodyHRY == rhs.RateBodyHRY &&
    lhs.fRateBodyHRY == rhs.fRateBodyHRY &&
    lhs.AccBodyHRZ == rhs.AccBodyHRZ &&
    lhs.fAccBodyHRZ == rhs.fAccBodyHRZ &&
    lhs.RateBodyHRZ == rhs.RateBodyHRZ &&
    lhs.fRateBodyHRZ == rhs.fRateBodyHRZ &&
    lhs.RateBodyX == rhs.RateBodyX &&
    lhs.RateBodyY == rhs.RateBodyY &&
    lhs.RateBodyZ == rhs.RateBodyZ &&
    lhs.fRateBodyX == rhs.fRateBodyX &&
    lhs.fRateBodyY == rhs.fRateBodyY &&
    lhs.fRateBodyZ == rhs.fRateBodyZ &&
    lhs.RateHorX == rhs.RateHorX &&
    lhs.RateHorY == rhs.RateHorY &&
    lhs.RateHorZ == rhs.RateHorZ &&
    lhs.fRateHorX == rhs.fRateHorX &&
    lhs.fRateHorY == rhs.fRateHorY &&
    lhs.fRateHorZ == rhs.fRateHorZ &&
    lhs.AccBodyX == rhs.AccBodyX &&
    lhs.AccBodyY == rhs.AccBodyY &&
    lhs.AccBodyZ == rhs.AccBodyZ &&
    lhs.fAccBodyX == rhs.fAccBodyX &&
    lhs.fAccBodyY == rhs.fAccBodyY &&
    lhs.fAccBodyZ == rhs.fAccBodyZ &&
    lhs.AccHorX == rhs.AccHorX &&
    lhs.AccHorY == rhs.AccHorY &&
    lhs.AccHorZ == rhs.AccHorZ &&
    lhs.fAccHorX == rhs.fAccHorX &&
    lhs.fAccHorY == rhs.fAccHorY &&
    lhs.fAccHorZ == rhs.fAccHorZ &&
    lhs.AccBodyX_1 == rhs.AccBodyX_1 &&
    lhs.AccBodyY_1 == rhs.AccBodyY_1 &&
    lhs.AccBodyZ_1 == rhs.AccBodyZ_1 &&
    lhs.fAccBodyX_1 == rhs.fAccBodyX_1 &&
    lhs.fAccBodyY_1 == rhs.fAccBodyY_1 &&
    lhs.fAccBodyZ_1 == rhs.fAccBodyZ_1 &&
    lhs.AccBodyX_2 == rhs.AccBodyX_2 &&
    lhs.AccBodyY_2 == rhs.AccBodyY_2 &&
    lhs.AccBodyZ_2 == rhs.AccBodyZ_2 &&
    lhs.fAccBodyX_2 == rhs.fAccBodyX_2 &&
    lhs.fAccBodyY_2 == rhs.fAccBodyY_2 &&
    lhs.fAccBodyZ_2 == rhs.fAccBodyZ_2 &&
    lhs.AccBodyX_3 == rhs.AccBodyX_3 &&
    lhs.AccBodyY_3 == rhs.AccBodyY_3 &&
    lhs.AccBodyZ_3 == rhs.AccBodyZ_3 &&
    lhs.fAccBodyX_3 == rhs.fAccBodyX_3 &&
    lhs.fAccBodyY_3 == rhs.fAccBodyY_3 &&
    lhs.fAccBodyZ_3 == rhs.fAccBodyZ_3 &&
    lhs.AccBodyX_4 == rhs.AccBodyX_4 &&
    lhs.AccBodyY_4 == rhs.AccBodyY_4 &&
    lhs.AccBodyZ_4 == rhs.AccBodyZ_4 &&
    lhs.fAccBodyX_4 == rhs.fAccBodyX_4 &&
    lhs.fAccBodyY_4 == rhs.fAccBodyY_4 &&
    lhs.fAccBodyZ_4 == rhs.fAccBodyZ_4 &&
    lhs.AccBodyX_5 == rhs.AccBodyX_5 &&
    lhs.AccBodyY_5 == rhs.AccBodyY_5 &&
    lhs.AccBodyZ_5 == rhs.AccBodyZ_5 &&
    lhs.fAccBodyX_5 == rhs.fAccBodyX_5 &&
    lhs.fAccBodyY_5 == rhs.fAccBodyY_5 &&
    lhs.fAccBodyZ_5 == rhs.fAccBodyZ_5 &&
    lhs.AccBodyX_6 == rhs.AccBodyX_6 &&
    lhs.AccBodyY_6 == rhs.AccBodyY_6 &&
    lhs.AccBodyZ_6 == rhs.AccBodyZ_6 &&
    lhs.fAccBodyX_6 == rhs.fAccBodyX_6 &&
    lhs.fAccBodyY_6 == rhs.fAccBodyY_6 &&
    lhs.fAccBodyZ_6 == rhs.fAccBodyZ_6 &&
    lhs.AccBodyX_7 == rhs.AccBodyX_7 &&
    lhs.AccBodyY_7 == rhs.AccBodyY_7 &&
    lhs.AccBodyZ_7 == rhs.AccBodyZ_7 &&
    lhs.fAccBodyX_7 == rhs.fAccBodyX_7 &&
    lhs.fAccBodyY_7 == rhs.fAccBodyY_7 &&
    lhs.fAccBodyZ_7 == rhs.fAccBodyZ_7 &&
    lhs.AccBodyX_8 == rhs.AccBodyX_8 &&
    lhs.AccBodyY_8 == rhs.AccBodyY_8 &&
    lhs.AccBodyZ_8 == rhs.AccBodyZ_8 &&
    lhs.fAccBodyX_8 == rhs.fAccBodyX_8 &&
    lhs.fAccBodyY_8 == rhs.fAccBodyY_8 &&
    lhs.fAccBodyZ_8 == rhs.fAccBodyZ_8 &&
    lhs.AccHorX_1 == rhs.AccHorX_1 &&
    lhs.AccHorY_1 == rhs.AccHorY_1 &&
    lhs.AccHorZ_1 == rhs.AccHorZ_1 &&
    lhs.fAccHorX_1 == rhs.fAccHorX_1 &&
    lhs.fAccHorY_1 == rhs.fAccHorY_1 &&
    lhs.fAccHorZ_1 == rhs.fAccHorZ_1 &&
    lhs.AccHorX_2 == rhs.AccHorX_2 &&
    lhs.AccHorY_2 == rhs.AccHorY_2 &&
    lhs.AccHorZ_2 == rhs.AccHorZ_2 &&
    lhs.fAccHorX_2 == rhs.fAccHorX_2 &&
    lhs.fAccHorY_2 == rhs.fAccHorY_2 &&
    lhs.fAccHorZ_2 == rhs.fAccHorZ_2 &&
    lhs.AccHorX_3 == rhs.AccHorX_3 &&
    lhs.AccHorY_3 == rhs.AccHorY_3 &&
    lhs.AccHorZ_3 == rhs.AccHorZ_3 &&
    lhs.fAccHorX_3 == rhs.fAccHorX_3 &&
    lhs.fAccHorY_3 == rhs.fAccHorY_3 &&
    lhs.fAccHorZ_3 == rhs.fAccHorZ_3 &&
    lhs.AccHorX_4 == rhs.AccHorX_4 &&
    lhs.AccHorY_4 == rhs.AccHorY_4 &&
    lhs.AccHorZ_4 == rhs.AccHorZ_4 &&
    lhs.fAccHorX_4 == rhs.fAccHorX_4 &&
    lhs.fAccHorY_4 == rhs.fAccHorY_4 &&
    lhs.fAccHorZ_4 == rhs.fAccHorZ_4 &&
    lhs.AccHorX_5 == rhs.AccHorX_5 &&
    lhs.AccHorY_5 == rhs.AccHorY_5 &&
    lhs.AccHorZ_5 == rhs.AccHorZ_5 &&
    lhs.fAccHorX_5 == rhs.fAccHorX_5 &&
    lhs.fAccHorY_5 == rhs.fAccHorY_5 &&
    lhs.fAccHorZ_5 == rhs.fAccHorZ_5 &&
    lhs.AccHorX_6 == rhs.AccHorX_6 &&
    lhs.AccHorY_6 == rhs.AccHorY_6 &&
    lhs.AccHorZ_6 == rhs.AccHorZ_6 &&
    lhs.fAccHorX_6 == rhs.fAccHorX_6 &&
    lhs.fAccHorY_6 == rhs.fAccHorY_6 &&
    lhs.fAccHorZ_6 == rhs.fAccHorZ_6 &&
    lhs.AccHorX_7 == rhs.AccHorX_7 &&
    lhs.AccHorY_7 == rhs.AccHorY_7 &&
    lhs.AccHorZ_7 == rhs.AccHorZ_7 &&
    lhs.fAccHorX_7 == rhs.fAccHorX_7 &&
    lhs.fAccHorY_7 == rhs.fAccHorY_7 &&
    lhs.fAccHorZ_7 == rhs.fAccHorZ_7 &&
    lhs.AccHorX_8 == rhs.AccHorX_8 &&
    lhs.AccHorY_8 == rhs.AccHorY_8 &&
    lhs.AccHorZ_8 == rhs.AccHorZ_8 &&
    lhs.fAccHorX_8 == rhs.fAccHorX_8 &&
    lhs.fAccHorY_8 == rhs.fAccHorY_8 &&
    lhs.fAccHorZ_8 == rhs.fAccHorZ_8 &&
    lhs.ExtVelAnX == rhs.ExtVelAnX &&
    lhs.ExtVelAnY == rhs.ExtVelAnY &&
    lhs.fExtVelAnX == rhs.fExtVelAnX &&
    lhs.fExtVelAnY == rhs.fExtVelAnY &&
    lhs.ExtVelDigX == rhs.ExtVelDigX &&
    lhs.ExtVelDigY == rhs.ExtVelDigY &&
    lhs.ExtVelDigPulsesX == rhs.ExtVelDigPulsesX &&
    lhs.ExtVelDigPulsesY == rhs.ExtVelDigPulsesY &&
    lhs.fExtVelDigX == rhs.fExtVelDigX &&
    lhs.fExtVelDigY == rhs.fExtVelDigY &&
    lhs.ExtVelXCorrected == rhs.ExtVelXCorrected &&
    lhs.ExtVelYCorrected == rhs.ExtVelYCorrected &&
    lhs.fExtVelXCorrected == rhs.fExtVelXCorrected &&
    lhs.fExtVelYCorrected == rhs.fExtVelYCorrected &&
    lhs.ExtBaroPressure == rhs.ExtBaroPressure &&
    lhs.fExtBaroPressure == rhs.fExtBaroPressure &&
    lhs.ExtBaroHeight == rhs.ExtBaroHeight &&
    lhs.ExtBaroHeightCorrected == rhs.ExtBaroHeightCorrected &&
    lhs.fExtBaroHeight == rhs.fExtBaroHeight &&
    lhs.fExtBaroHeightCorrected == rhs.fExtBaroHeightCorrected &&
    lhs.InvPathRadius == rhs.InvPathRadius &&
    lhs.fInvPathRadius == rhs.fInvPathRadius &&
    lhs.SideSlipAngle == rhs.SideSlipAngle &&
    lhs.fSideSlipAngle == rhs.fSideSlipAngle &&
    lhs.DistTrav == rhs.DistTrav &&
    lhs.fDistTrav == rhs.fDistTrav &&
    lhs.InvPathRadius_1 == rhs.InvPathRadius_1 &&
    lhs.fInvPathRadius_1 == rhs.fInvPathRadius_1 &&
    lhs.SideSlipAngle_1 == rhs.SideSlipAngle_1 &&
    lhs.fSideSlipAngle_1 == rhs.fSideSlipAngle_1 &&
    lhs.DistTrav_1 == rhs.DistTrav_1 &&
    lhs.fDistTrav_1 == rhs.fDistTrav_1 &&
    lhs.InvPathRadius_2 == rhs.InvPathRadius_2 &&
    lhs.fInvPathRadius_2 == rhs.fInvPathRadius_2 &&
    lhs.SideSlipAngle_2 == rhs.SideSlipAngle_2 &&
    lhs.fSideSlipAngle_2 == rhs.fSideSlipAngle_2 &&
    lhs.DistTrav_2 == rhs.DistTrav_2 &&
    lhs.fDistTrav_2 == rhs.fDistTrav_2 &&
    lhs.InvPathRadius_3 == rhs.InvPathRadius_3 &&
    lhs.fInvPathRadius_3 == rhs.fInvPathRadius_3 &&
    lhs.SideSlipAngle_3 == rhs.SideSlipAngle_3 &&
    lhs.fSideSlipAngle_3 == rhs.fSideSlipAngle_3 &&
    lhs.DistTrav_3 == rhs.DistTrav_3 &&
    lhs.fDistTrav_3 == rhs.fDistTrav_3 &&
    lhs.InvPathRadius_4 == rhs.InvPathRadius_4 &&
    lhs.fInvPathRadius_4 == rhs.fInvPathRadius_4 &&
    lhs.SideSlipAngle_4 == rhs.SideSlipAngle_4 &&
    lhs.fSideSlipAngle_4 == rhs.fSideSlipAngle_4 &&
    lhs.DistTrav_4 == rhs.DistTrav_4 &&
    lhs.fDistTrav_4 == rhs.fDistTrav_4 &&
    lhs.InvPathRadius_5 == rhs.InvPathRadius_5 &&
    lhs.fInvPathRadius_5 == rhs.fInvPathRadius_5 &&
    lhs.SideSlipAngle_5 == rhs.SideSlipAngle_5 &&
    lhs.fSideSlipAngle_5 == rhs.fSideSlipAngle_5 &&
    lhs.DistTrav_5 == rhs.DistTrav_5 &&
    lhs.fDistTrav_5 == rhs.fDistTrav_5 &&
    lhs.InvPathRadius_6 == rhs.InvPathRadius_6 &&
    lhs.fInvPathRadius_6 == rhs.fInvPathRadius_6 &&
    lhs.SideSlipAngle_6 == rhs.SideSlipAngle_6 &&
    lhs.fSideSlipAngle_6 == rhs.fSideSlipAngle_6 &&
    lhs.DistTrav_6 == rhs.DistTrav_6 &&
    lhs.fDistTrav_6 == rhs.fDistTrav_6 &&
    lhs.InvPathRadius_7 == rhs.InvPathRadius_7 &&
    lhs.fInvPathRadius_7 == rhs.fInvPathRadius_7 &&
    lhs.SideSlipAngle_7 == rhs.SideSlipAngle_7 &&
    lhs.fSideSlipAngle_7 == rhs.fSideSlipAngle_7 &&
    lhs.DistTrav_7 == rhs.DistTrav_7 &&
    lhs.fDistTrav_7 == rhs.fDistTrav_7 &&
    lhs.InvPathRadius_8 == rhs.InvPathRadius_8 &&
    lhs.fInvPathRadius_8 == rhs.fInvPathRadius_8 &&
    lhs.SideSlipAngle_8 == rhs.SideSlipAngle_8 &&
    lhs.fSideSlipAngle_8 == rhs.fSideSlipAngle_8 &&
    lhs.DistTrav_8 == rhs.DistTrav_8 &&
    lhs.fDistTrav_8 == rhs.fDistTrav_8 &&
    lhs.TrigRising1 == rhs.TrigRising1 &&
    lhs.TrigFalling1 == rhs.TrigFalling1 &&
    lhs.TrigRising2 == rhs.TrigRising2 &&
    lhs.TrigFalling2 == rhs.TrigFalling2 &&
    lhs.TrigRising3 == rhs.TrigRising3 &&
    lhs.TrigFalling3 == rhs.TrigFalling3 &&
    lhs.TrigRising4 == rhs.TrigRising4 &&
    lhs.TrigFalling4 == rhs.TrigFalling4 &&
    lhs.SystemTa == rhs.SystemTa &&
    lhs.SystemTemp == rhs.SystemTemp &&
    lhs.fSystemTemp == rhs.fSystemTemp &&
    lhs.SystemTimeSinceInit == rhs.SystemTimeSinceInit &&
    lhs.SystemDSPLoad == rhs.SystemDSPLoad &&
    lhs.fSystemDSPLoad == rhs.fSystemDSPLoad &&
    lhs.GPSLatAbs == rhs.GPSLatAbs &&
    lhs.GPSLonAbs == rhs.GPSLonAbs &&
    lhs.fGPSLatAbs == rhs.fGPSLatAbs &&
    lhs.fGPSLonAbs == rhs.fGPSLonAbs &&
    lhs.GPSLatRel == rhs.GPSLatRel &&
    lhs.GPSLonRel == rhs.GPSLonRel &&
    lhs.fGPSLatRel == rhs.fGPSLatRel &&
    lhs.fGPSLonRel == rhs.fGPSLonRel &&
    lhs.GPSStddevLat == rhs.GPSStddevLat &&
    lhs.GPSStddevLon == rhs.GPSStddevLon &&
    lhs.GPSStddevHeight == rhs.GPSStddevHeight &&
    lhs.fGPSStddevLat == rhs.fGPSStddevLat &&
    lhs.fGPSStddevLon == rhs.fGPSStddevLon &&
    lhs.fGPSStddevHeight == rhs.fGPSStddevHeight &&
    lhs.GPSVelFrameX == rhs.GPSVelFrameX &&
    lhs.GPSVelFrameY == rhs.GPSVelFrameY &&
    lhs.GPSVelFrameZ == rhs.GPSVelFrameZ &&
    lhs.fGPSVelFrameX == rhs.fGPSVelFrameX &&
    lhs.fGPSVelFrameY == rhs.fGPSVelFrameY &&
    lhs.fGPSVelFrameZ == rhs.fGPSVelFrameZ &&
    lhs.GPSVelLatency == rhs.GPSVelLatency &&
    lhs.fGPSVelLatency == rhs.fGPSVelLatency &&
    lhs.GPSStddevVelX == rhs.GPSStddevVelX &&
    lhs.GPSStddevVelY == rhs.GPSStddevVelY &&
    lhs.GPSStddevVelZ == rhs.GPSStddevVelZ &&
    lhs.fGPSStddevVelX == rhs.fGPSStddevVelX &&
    lhs.fGPSStddevVelY == rhs.fGPSStddevVelY &&
    lhs.fGPSStddevVelZ == rhs.fGPSStddevVelZ &&
    lhs.GPSTimemsec == rhs.GPSTimemsec &&
    lhs.GPSTimeWeek == rhs.GPSTimeWeek &&
    lhs.GPSTrigger == rhs.GPSTrigger &&
    lhs.GPSDiffAge == rhs.GPSDiffAge &&
    lhs.fGPSDiffAge == rhs.fGPSDiffAge &&
    lhs.GPSStatsUsed == rhs.GPSStatsUsed &&
    lhs.GPSStatsVisible == rhs.GPSStatsVisible &&
    lhs.GPSLogDelay == rhs.GPSLogDelay &&
    lhs.GPSReceiverLoad == rhs.GPSReceiverLoad &&
    lhs.fGPSReceiverLoad == rhs.fGPSReceiverLoad &&
    lhs.GPSBaseNr == rhs.GPSBaseNr &&
    lhs.INSRoll == rhs.INSRoll &&
    lhs.INSPitch == rhs.INSPitch &&
    lhs.INSYaw == rhs.INSYaw &&
    lhs.GPSCOG == rhs.GPSCOG &&
    lhs.fINSRoll == rhs.fINSRoll &&
    lhs.fINSPitch == rhs.fINSPitch &&
    lhs.fINSYaw == rhs.fINSYaw &&
    lhs.fGPSCOG == rhs.fGPSCOG &&
    lhs.GPSHeight == rhs.GPSHeight &&
    lhs.Undulation == rhs.Undulation &&
    lhs.fGPSHeight == rhs.fGPSHeight &&
    lhs.fUndulation == rhs.fUndulation &&
    lhs.GPSDualAntTimemsec == rhs.GPSDualAntTimemsec &&
    lhs.GPSDualAntTimeWeek == rhs.GPSDualAntTimeWeek &&
    lhs.GPSDualAntHeading == rhs.GPSDualAntHeading &&
    lhs.GPSDualAntPitch == rhs.GPSDualAntPitch &&
    lhs.fGPSDualAntHeading == rhs.fGPSDualAntHeading &&
    lhs.fGPSDualAntPitch == rhs.fGPSDualAntPitch &&
    lhs.GPSDualAntStdDevHeading == rhs.GPSDualAntStdDevHeading &&
    lhs.GPSDualAntStdDevPitch == rhs.GPSDualAntStdDevPitch &&
    lhs.fGPSDualAntStdDevHeading == rhs.fGPSDualAntStdDevHeading &&
    lhs.fGPSDualAntStdDevPitch == rhs.fGPSDualAntStdDevPitch &&
    lhs.INSHeight == rhs.INSHeight &&
    lhs.fINSHeight == rhs.fINSHeight &&
    lhs.INSHeight_1 == rhs.INSHeight_1 &&
    lhs.INSHeight_2 == rhs.INSHeight_2 &&
    lhs.fINSHeight_1 == rhs.fINSHeight_1 &&
    lhs.fINSHeight_2 == rhs.fINSHeight_2 &&
    lhs.INSHeight_3 == rhs.INSHeight_3 &&
    lhs.INSHeight_4 == rhs.INSHeight_4 &&
    lhs.fINSHeight_3 == rhs.fINSHeight_3 &&
    lhs.fINSHeight_4 == rhs.fINSHeight_4 &&
    lhs.INSHeight_5 == rhs.INSHeight_5 &&
    lhs.INSHeight_6 == rhs.INSHeight_6 &&
    lhs.fINSHeight_5 == rhs.fINSHeight_5 &&
    lhs.fINSHeight_6 == rhs.fINSHeight_6 &&
    lhs.INSHeight_7 == rhs.INSHeight_7 &&
    lhs.INSHeight_8 == rhs.INSHeight_8 &&
    lhs.fINSHeight_7 == rhs.fINSHeight_7 &&
    lhs.fINSHeight_8 == rhs.fINSHeight_8 &&
    lhs.INSTimemsec == rhs.INSTimemsec &&
    lhs.INSTimeWeek == rhs.INSTimeWeek &&
    lhs.LeapSeconds == rhs.LeapSeconds &&
    lhs.INSLatAbs == rhs.INSLatAbs &&
    lhs.INSLonAbs == rhs.INSLonAbs &&
    lhs.fINSLatAbs == rhs.fINSLatAbs &&
    lhs.fINSLonAbs == rhs.fINSLonAbs &&
    lhs.INSLatRel == rhs.INSLatRel &&
    lhs.INSLonRel == rhs.INSLonRel &&
    lhs.fINSLatRel == rhs.fINSLatRel &&
    lhs.fINSLonRel == rhs.fINSLonRel &&
    lhs.INSLatAbs_1 == rhs.INSLatAbs_1 &&
    lhs.INSLonAbs_1 == rhs.INSLonAbs_1 &&
    lhs.fINSLatAbs_1 == rhs.fINSLatAbs_1 &&
    lhs.fINSLonAbs_1 == rhs.fINSLonAbs_1 &&
    lhs.INSLatRel_1 == rhs.INSLatRel_1 &&
    lhs.INSLonRel_1 == rhs.INSLonRel_1 &&
    lhs.fINSLatRel_1 == rhs.fINSLatRel_1 &&
    lhs.fINSLonRel_1 == rhs.fINSLonRel_1 &&
    lhs.INSLatAbs_2 == rhs.INSLatAbs_2 &&
    lhs.INSLonAbs_2 == rhs.INSLonAbs_2 &&
    lhs.fINSLatAbs_2 == rhs.fINSLatAbs_2 &&
    lhs.fINSLonAbs_2 == rhs.fINSLonAbs_2 &&
    lhs.INSLatRel_2 == rhs.INSLatRel_2 &&
    lhs.INSLonRel_2 == rhs.INSLonRel_2 &&
    lhs.fINSLatRel_2 == rhs.fINSLatRel_2 &&
    lhs.fINSLonRel_2 == rhs.fINSLonRel_2 &&
    lhs.INSLatAbs_3 == rhs.INSLatAbs_3 &&
    lhs.INSLonAbs_3 == rhs.INSLonAbs_3 &&
    lhs.fINSLatAbs_3 == rhs.fINSLatAbs_3 &&
    lhs.fINSLonAbs_3 == rhs.fINSLonAbs_3 &&
    lhs.INSLatRel_3 == rhs.INSLatRel_3 &&
    lhs.INSLonRel_3 == rhs.INSLonRel_3 &&
    lhs.fINSLatRel_3 == rhs.fINSLatRel_3 &&
    lhs.fINSLonRel_3 == rhs.fINSLonRel_3 &&
    lhs.INSLatAbs_4 == rhs.INSLatAbs_4 &&
    lhs.INSLonAbs_4 == rhs.INSLonAbs_4 &&
    lhs.fINSLatAbs_4 == rhs.fINSLatAbs_4 &&
    lhs.fINSLonAbs_4 == rhs.fINSLonAbs_4 &&
    lhs.INSLatRel_4 == rhs.INSLatRel_4 &&
    lhs.INSLonRel_4 == rhs.INSLonRel_4 &&
    lhs.fINSLatRel_4 == rhs.fINSLatRel_4 &&
    lhs.fINSLonRel_4 == rhs.fINSLonRel_4 &&
    lhs.INSLatAbs_5 == rhs.INSLatAbs_5 &&
    lhs.INSLonAbs_5 == rhs.INSLonAbs_5 &&
    lhs.fINSLatAbs_5 == rhs.fINSLatAbs_5 &&
    lhs.fINSLonAbs_5 == rhs.fINSLonAbs_5 &&
    lhs.INSLatRel_5 == rhs.INSLatRel_5 &&
    lhs.INSLonRel_5 == rhs.INSLonRel_5 &&
    lhs.fINSLatRel_5 == rhs.fINSLatRel_5 &&
    lhs.fINSLonRel_5 == rhs.fINSLonRel_5 &&
    lhs.INSLatAbs_6 == rhs.INSLatAbs_6 &&
    lhs.INSLonAbs_6 == rhs.INSLonAbs_6 &&
    lhs.fINSLatAbs_6 == rhs.fINSLatAbs_6 &&
    lhs.fINSLonAbs_6 == rhs.fINSLonAbs_6 &&
    lhs.INSLatRel_6 == rhs.INSLatRel_6 &&
    lhs.INSLonRel_6 == rhs.INSLonRel_6 &&
    lhs.fINSLatRel_6 == rhs.fINSLatRel_6 &&
    lhs.fINSLonRel_6 == rhs.fINSLonRel_6 &&
    lhs.INSLatAbs_7 == rhs.INSLatAbs_7 &&
    lhs.INSLonAbs_7 == rhs.INSLonAbs_7 &&
    lhs.fINSLatAbs_7 == rhs.fINSLatAbs_7 &&
    lhs.fINSLonAbs_7 == rhs.fINSLonAbs_7 &&
    lhs.INSLatRel_7 == rhs.INSLatRel_7 &&
    lhs.INSLonRel_7 == rhs.INSLonRel_7 &&
    lhs.fINSLatRel_7 == rhs.fINSLatRel_7 &&
    lhs.fINSLonRel_7 == rhs.fINSLonRel_7 &&
    lhs.INSLatAbs_8 == rhs.INSLatAbs_8 &&
    lhs.INSLonAbs_8 == rhs.INSLonAbs_8 &&
    lhs.fINSLatAbs_8 == rhs.fINSLatAbs_8 &&
    lhs.fINSLonAbs_8 == rhs.fINSLonAbs_8 &&
    lhs.INSLatRel_8 == rhs.INSLatRel_8 &&
    lhs.INSLonRel_8 == rhs.INSLonRel_8 &&
    lhs.fINSLatRel_8 == rhs.fINSLatRel_8 &&
    lhs.fINSLonRel_8 == rhs.fINSLonRel_8 &&
    lhs.INSVelHorX == rhs.INSVelHorX &&
    lhs.INSVelHorY == rhs.INSVelHorY &&
    lhs.INSVelHorZ == rhs.INSVelHorZ &&
    lhs.fINSVelHorX == rhs.fINSVelHorX &&
    lhs.fINSVelHorY == rhs.fINSVelHorY &&
    lhs.fINSVelHorZ == rhs.fINSVelHorZ &&
    lhs.INSVelFrameX == rhs.INSVelFrameX &&
    lhs.INSVelFrameY == rhs.INSVelFrameY &&
    lhs.INSVelFrameZ == rhs.INSVelFrameZ &&
    lhs.fINSVelFrameX == rhs.fINSVelFrameX &&
    lhs.fINSVelFrameY == rhs.fINSVelFrameY &&
    lhs.fINSVelFrameZ == rhs.fINSVelFrameZ &&
    lhs.INSVelHorX_1 == rhs.INSVelHorX_1 &&
    lhs.INSVelHorY_1 == rhs.INSVelHorY_1 &&
    lhs.INSVelHorZ_1 == rhs.INSVelHorZ_1 &&
    lhs.fINSVelHorX_1 == rhs.fINSVelHorX_1 &&
    lhs.fINSVelHorY_1 == rhs.fINSVelHorY_1 &&
    lhs.fINSVelHorZ_1 == rhs.fINSVelHorZ_1 &&
    lhs.INSVelHorX_2 == rhs.INSVelHorX_2 &&
    lhs.INSVelHorY_2 == rhs.INSVelHorY_2 &&
    lhs.INSVelHorZ_2 == rhs.INSVelHorZ_2 &&
    lhs.fINSVelHorX_2 == rhs.fINSVelHorX_2 &&
    lhs.fINSVelHorY_2 == rhs.fINSVelHorY_2 &&
    lhs.fINSVelHorZ_2 == rhs.fINSVelHorZ_2 &&
    lhs.INSVelHorX_3 == rhs.INSVelHorX_3 &&
    lhs.INSVelHorY_3 == rhs.INSVelHorY_3 &&
    lhs.INSVelHorZ_3 == rhs.INSVelHorZ_3 &&
    lhs.fINSVelHorX_3 == rhs.fINSVelHorX_3 &&
    lhs.fINSVelHorY_3 == rhs.fINSVelHorY_3 &&
    lhs.fINSVelHorZ_3 == rhs.fINSVelHorZ_3 &&
    lhs.INSVelHorX_4 == rhs.INSVelHorX_4 &&
    lhs.INSVelHorY_4 == rhs.INSVelHorY_4 &&
    lhs.INSVelHorZ_4 == rhs.INSVelHorZ_4 &&
    lhs.fINSVelHorX_4 == rhs.fINSVelHorX_4 &&
    lhs.fINSVelHorY_4 == rhs.fINSVelHorY_4 &&
    lhs.fINSVelHorZ_4 == rhs.fINSVelHorZ_4 &&
    lhs.INSVelHorX_5 == rhs.INSVelHorX_5 &&
    lhs.INSVelHorY_5 == rhs.INSVelHorY_5 &&
    lhs.INSVelHorZ_5 == rhs.INSVelHorZ_5 &&
    lhs.fINSVelHorX_5 == rhs.fINSVelHorX_5 &&
    lhs.fINSVelHorY_5 == rhs.fINSVelHorY_5 &&
    lhs.fINSVelHorZ_5 == rhs.fINSVelHorZ_5 &&
    lhs.INSVelHorX_6 == rhs.INSVelHorX_6 &&
    lhs.INSVelHorY_6 == rhs.INSVelHorY_6 &&
    lhs.INSVelHorZ_6 == rhs.INSVelHorZ_6 &&
    lhs.fINSVelHorX_6 == rhs.fINSVelHorX_6 &&
    lhs.fINSVelHorY_6 == rhs.fINSVelHorY_6 &&
    lhs.fINSVelHorZ_6 == rhs.fINSVelHorZ_6 &&
    lhs.INSVelHorX_7 == rhs.INSVelHorX_7 &&
    lhs.INSVelHorY_7 == rhs.INSVelHorY_7 &&
    lhs.INSVelHorZ_7 == rhs.INSVelHorZ_7 &&
    lhs.fINSVelHorX_7 == rhs.fINSVelHorX_7 &&
    lhs.fINSVelHorY_7 == rhs.fINSVelHorY_7 &&
    lhs.fINSVelHorZ_7 == rhs.fINSVelHorZ_7 &&
    lhs.INSVelHorX_8 == rhs.INSVelHorX_8 &&
    lhs.INSVelHorY_8 == rhs.INSVelHorY_8 &&
    lhs.INSVelHorZ_8 == rhs.INSVelHorZ_8 &&
    lhs.fINSVelHorX_8 == rhs.fINSVelHorX_8 &&
    lhs.fINSVelHorY_8 == rhs.fINSVelHorY_8 &&
    lhs.fINSVelHorZ_8 == rhs.fINSVelHorZ_8 &&
    lhs.INSStddevLat == rhs.INSStddevLat &&
    lhs.INSStddevLong == rhs.INSStddevLong &&
    lhs.INSStddevHeight == rhs.INSStddevHeight &&
    lhs.fINSStddevLat == rhs.fINSStddevLat &&
    lhs.fINSStddevLong == rhs.fINSStddevLong &&
    lhs.fINSStddevHeight == rhs.fINSStddevHeight &&
    lhs.INSStddevVelX == rhs.INSStddevVelX &&
    lhs.INSStddevVelY == rhs.INSStddevVelY &&
    lhs.INSStddevVelZ == rhs.INSStddevVelZ &&
    lhs.fINSStddevVelX == rhs.fINSStddevVelX &&
    lhs.fINSStddevVelY == rhs.fINSStddevVelY &&
    lhs.fINSStddevVelZ == rhs.fINSStddevVelZ &&
    lhs.INSStddevRoll == rhs.INSStddevRoll &&
    lhs.INSStddevPitch == rhs.INSStddevPitch &&
    lhs.INSStddevYaw == rhs.INSStddevYaw &&
    lhs.fINSStddevRoll == rhs.fINSStddevRoll &&
    lhs.fINSStddevPitch == rhs.fINSStddevPitch &&
    lhs.fINSStddevYaw == rhs.fINSStddevYaw &&
    lhs.AN1 == rhs.AN1 &&
    lhs.AN2 == rhs.AN2 &&
    lhs.AN3 == rhs.AN3 &&
    lhs.AN4 == rhs.AN4 &&
    lhs.fAN1 == rhs.fAN1 &&
    lhs.fAN2 == rhs.fAN2 &&
    lhs.fAN3 == rhs.fAN3 &&
    lhs.fAN4 == rhs.fAN4 &&
    lhs.KFLatStimulated == rhs.KFLatStimulated &&
    lhs.KFLongStimulated == rhs.KFLongStimulated &&
    lhs.KFSteadyState == rhs.KFSteadyState &&
    lhs.GPSReceiverError == rhs.GPSReceiverError &&
    lhs.GPSReceiverStatus == rhs.GPSReceiverStatus &&
    lhs.TimeMsec == rhs.TimeMsec &&
    lhs.TimeNsec == rhs.TimeNsec;
}

template<typename ContainerAllocator1, typename ContainerAllocator2>
bool operator!=(const ::adma_connect::Adma_<ContainerAllocator1> & lhs, const ::adma_connect::Adma_<ContainerAllocator2> & rhs)
{
  return !(lhs == rhs);
}


} // namespace adma_connect

namespace ros
{
namespace message_traits
{





template <class ContainerAllocator>
struct IsMessage< ::adma_connect::Adma_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::adma_connect::Adma_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::adma_connect::Adma_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::adma_connect::Adma_<ContainerAllocator> const>
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::adma_connect::Adma_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::adma_connect::Adma_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::adma_connect::Adma_<ContainerAllocator> >
{
  static const char* value()
  {
    return "f73b59ab23201ef01fdb531e7b8c8829";
  }

  static const char* value(const ::adma_connect::Adma_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xf73b59ab23201ef0ULL;
  static const uint64_t static_value2 = 0x1fdb531e7b8c8829ULL;
};

template<class ContainerAllocator>
struct DataType< ::adma_connect::Adma_<ContainerAllocator> >
{
  static const char* value()
  {
    return "adma_connect/Adma";
  }

  static const char* value(const ::adma_connect::Adma_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::adma_connect::Adma_<ContainerAllocator> >
{
  static const char* value()
  {
    return "# ADMA Static Header\n"
"string GeneSysID\n"
"string HeaderVersion\n"
"uint32 FormatID\n"
"string FormatVersion\n"
"uint32 SerialNo\n"
"uint32 Alias\n"
"\n"
"# ADMA Dynamic Header\n"
"uint32 ConfigID\n"
"uint32 ConfigFormat\n"
"uint32 ConfigVersion\n"
"uint32 ConfigSize\n"
"uint32 ByteOffset\n"
"uint32 SliceSize\n"
"#byte SliceData\n"
"\n"
"# Status\n"
"int32 StatusGPSMode\n"
"int32 StatusStandStill\n"
"int32 StatusSkidding\n"
"int32 StatusExternalVelOut\n"
"int32 StatusTrigGps\n"
"int32 StatusSignalIN3\n"
"int32 StatusSignalIn2\n"
"int32 StatusSignalIn1\n"
"int32 StatusAlignment\n"
"int32 StatusAHRSINS\n"
"int32 StatusDeadReckoning\n"
"int32 StatusSyncLock\n"
"int32 StatusEVKActiv\n"
"int32 StatusEVKEstimates\n"
"int32 StatusHeadingExecuted\n"
"int32 StatusConfigurationChanged\n"
"int32 StatusTilt\n"
"int32 StatusPos\n"
"int8 StatusCount\n"
"int32 StatusKalmanFilterSetteled\n"
"int32 StatusKFLatStimulated\n"
"int32 StatusKFLongStimulated\n"
"int32 StatusKFSteadyState\n"
"int32 StatusSpeed\n"
"\n"
"# Error and Warning\n"
"string ErrorHardware\n"
"string Error_Misc1\n"
"string Error_Misc2\n"
"string Error_Misc3\n"
"string WarnGPS\n"
"string WarnMisc1\n"
"string ErrorHWSticky\n"
"\n"
"# Sensors body X\n"
"# Acc in g\n"
"int32 AccBodyHRX\n"
"float32 fAccBodyHRX\n"
"# Rate in deg/s\n"
"int32 RateBodyHRX\n"
"float32 fRateBodyHRX\n"
"\n"
"# Sensors body Y\n"
"# Acc in g\n"
"int32 AccBodyHRY\n"
"float32 fAccBodyHRY\n"
"\n"
"# Rate in deg/s\n"
"int32 RateBodyHRY\n"
"float32 fRateBodyHRY\n"
"\n"
"\n"
"# Sensors body Z\n"
"# Acc in g\n"
"int32 AccBodyHRZ\n"
"float32 fAccBodyHRZ\n"
"\n"
"# Rate in deg/s\n"
"int32 RateBodyHRZ\n"
"float32 fRateBodyHRZ\n"
"\n"
"\n"
"# Rates body\n"
"# Rates in deg/s\n"
"int16 RateBodyX\n"
"int16 RateBodyY\n"
"int16 RateBodyZ\n"
"float32 fRateBodyX\n"
"float32 fRateBodyY\n"
"float32 fRateBodyZ\n"
"\n"
"\n"
"# Rates Horz\n"
"# Rates in deg/s\n"
"int16 RateHorX\n"
"int16 RateHorY\n"
"int16 RateHorZ\n"
"float32 fRateHorX\n"
"float32 fRateHorY\n"
"float32 fRateHorZ\n"
"\n"
"# Accelerations Body\n"
"# Acc in g\n"
"int16 AccBodyX\n"
"int16 AccBodyY\n"
"int16 AccBodyZ\n"
"float32 fAccBodyX\n"
"float32 fAccBodyY\n"
"float32 fAccBodyZ\n"
"\n"
"# Acceleration Horizontal\n"
"# Acc in g\n"
"int16 AccHorX\n"
"int16 AccHorY\n"
"int16 AccHorZ\n"
"float32 fAccHorX\n"
"float32 fAccHorY\n"
"float32 fAccHorZ\n"
"\n"
"# Accelerations Body POI1\n"
"# Acc in g\n"
"int16 AccBodyX_1\n"
"int16 AccBodyY_1\n"
"int16 AccBodyZ_1\n"
"float32 fAccBodyX_1\n"
"float32 fAccBodyY_1\n"
"float32 fAccBodyZ_1\n"
"\n"
"# Accelerations Body POI2\n"
"# Acc in g\n"
"int16 AccBodyX_2\n"
"int16 AccBodyY_2\n"
"int16 AccBodyZ_2\n"
"float32 fAccBodyX_2\n"
"float32 fAccBodyY_2\n"
"float32 fAccBodyZ_2\n"
"\n"
"# Accelerations Body POI3\n"
"# Acc in g\n"
"int16 AccBodyX_3\n"
"int16 AccBodyY_3\n"
"int16 AccBodyZ_3\n"
"float32 fAccBodyX_3\n"
"float32 fAccBodyY_3\n"
"float32 fAccBodyZ_3\n"
"\n"
"# Accelerations Body POI4\n"
"# Acc in g\n"
"int16 AccBodyX_4\n"
"int16 AccBodyY_4\n"
"int16 AccBodyZ_4\n"
"float32 fAccBodyX_4\n"
"float32 fAccBodyY_4\n"
"float32 fAccBodyZ_4\n"
"\n"
"# Accelerations Body POI5\n"
"# Acc in g\n"
"int16 AccBodyX_5\n"
"int16 AccBodyY_5\n"
"int16 AccBodyZ_5\n"
"float32 fAccBodyX_5\n"
"float32 fAccBodyY_5\n"
"float32 fAccBodyZ_5\n"
"\n"
"# Accelerations Body POI6\n"
"# Acc in g\n"
"int16 AccBodyX_6\n"
"int16 AccBodyY_6\n"
"int16 AccBodyZ_6\n"
"float32 fAccBodyX_6\n"
"float32 fAccBodyY_6\n"
"float32 fAccBodyZ_6\n"
"\n"
"# Accelerations Body POI7\n"
"# Acc in g\n"
"int16 AccBodyX_7\n"
"int16 AccBodyY_7\n"
"int16 AccBodyZ_7\n"
"float32 fAccBodyX_7\n"
"float32 fAccBodyY_7\n"
"float32 fAccBodyZ_7\n"
"\n"
"# Accelerations Body POI8\n"
"# Acc in g\n"
"int16 AccBodyX_8\n"
"int16 AccBodyY_8\n"
"int16 AccBodyZ_8\n"
"float32 fAccBodyX_8\n"
"float32 fAccBodyY_8\n"
"float32 fAccBodyZ_8\n"
"\n"
"# Acceleration Horizontal POI1\n"
"# Acc in g\n"
"int16 AccHorX_1\n"
"int16 AccHorY_1\n"
"int16 AccHorZ_1\n"
"float32 fAccHorX_1\n"
"float32 fAccHorY_1\n"
"float32 fAccHorZ_1\n"
"\n"
"# Acceleration Horizontal POI2\n"
"# Acc in g\n"
"int16 AccHorX_2\n"
"int16 AccHorY_2\n"
"int16 AccHorZ_2\n"
"float32 fAccHorX_2\n"
"float32 fAccHorY_2\n"
"float32 fAccHorZ_2\n"
"\n"
"# Acceleration Horizontal POI3\n"
"# Acc in g\n"
"int16 AccHorX_3\n"
"int16 AccHorY_3\n"
"int16 AccHorZ_3\n"
"float32 fAccHorX_3\n"
"float32 fAccHorY_3\n"
"float32 fAccHorZ_3\n"
"\n"
"# Acceleration Horizontal POI4\n"
"# Acc in g\n"
"int16 AccHorX_4\n"
"int16 AccHorY_4\n"
"int16 AccHorZ_4\n"
"float32 fAccHorX_4\n"
"float32 fAccHorY_4\n"
"float32 fAccHorZ_4\n"
"\n"
"# Acceleration Horizontal POI5\n"
"# Acc in g\n"
"int16 AccHorX_5\n"
"int16 AccHorY_5\n"
"int16 AccHorZ_5\n"
"float32 fAccHorX_5\n"
"float32 fAccHorY_5\n"
"float32 fAccHorZ_5\n"
"\n"
"# Acceleration Horizontal POI6\n"
"# Acc in g\n"
"int16 AccHorX_6\n"
"int16 AccHorY_6\n"
"int16 AccHorZ_6\n"
"float32 fAccHorX_6\n"
"float32 fAccHorY_6\n"
"float32 fAccHorZ_6\n"
"\n"
"# Acceleration Horizontal POI7\n"
"# Acc in g\n"
"int16 AccHorX_7\n"
"int16 AccHorY_7\n"
"int16 AccHorZ_7\n"
"float32 fAccHorX_7\n"
"float32 fAccHorY_7\n"
"float32 fAccHorZ_7\n"
"\n"
"# Acceleration Horizontal POI8\n"
"# Acc in g\n"
"int16 AccHorX_8\n"
"int16 AccHorY_8\n"
"int16 AccHorZ_8\n"
"float32 fAccHorX_8\n"
"float32 fAccHorY_8\n"
"float32 fAccHorZ_8\n"
"\n"
"# External Velocity Analog\n"
"#  Vel in m/s\n"
"int16 ExtVelAnX\n"
"int16 ExtVelAnY\n"
"float32 fExtVelAnX\n"
"float32 fExtVelAnY\n"
"\n"
"# External Velocity Digital Pulses\n"
"#  Vel in m/s\n"
"int16 ExtVelDigX\n"
"int16 ExtVelDigY\n"
"int16 ExtVelDigPulsesX\n"
"int16 ExtVelDigPulsesY\n"
"float32 fExtVelDigX\n"
"float32 fExtVelDigY\n"
"\n"
"\n"
"# Externaal Velocity Corrected\n"
"#  Vel in m/s\n"
"int16 ExtVelXCorrected\n"
"int16 ExtVelYCorrected\n"
"float32 fExtVelXCorrected\n"
"float32 fExtVelYCorrected\n"
"\n"
"# Barometer Pressure\n"
"# Pressure in mBar\n"
"uint32 ExtBaroPressure\n"
"float32 fExtBaroPressure\n"
"\n"
"# Barometer Height\n"
"# Height in m\n"
"int32 ExtBaroHeight\n"
"int32 ExtBaroHeightCorrected\n"
"float32 fExtBaroHeight\n"
"float32 fExtBaroHeightCorrected\n"
"\n"
"# Miscellaneous\n"
"# InvPath Radius in 1/m\n"
"int16 InvPathRadius\n"
"float32 fInvPathRadius\n"
"# Side Slip in degrees\n"
"int16 SideSlipAngle\n"
"float32 fSideSlipAngle\n"
"# Dis_trav in m\n"
"uint32 DistTrav\n"
"float32 fDistTrav\n"
"\n"
"# Miscellaneous_POI1\n"
"# InvPath Radius in 1/m\n"
"int16 InvPathRadius_1\n"
"float32 fInvPathRadius_1\n"
"# Side Slip in degrees\n"
"int16 SideSlipAngle_1\n"
"float32 fSideSlipAngle_1\n"
"# Dis_trav in m\n"
"uint32 DistTrav_1\n"
"float32 fDistTrav_1\n"
"\n"
"# Miscellaneous_POI2\n"
"# InvPath Radius in 1/m\n"
"int16 InvPathRadius_2\n"
"float32 fInvPathRadius_2\n"
"# Side Slip in degrees\n"
"int16 SideSlipAngle_2\n"
"float32 fSideSlipAngle_2\n"
"# Dis_trav in m\n"
"uint32 DistTrav_2\n"
"float32 fDistTrav_2\n"
"\n"
"# Miscellaneous_POI3\n"
"# InvPath Radius in 1/m\n"
"int16 InvPathRadius_3\n"
"float32 fInvPathRadius_3\n"
"# Side Slip in degrees\n"
"int16 SideSlipAngle_3\n"
"float32 fSideSlipAngle_3\n"
"# Dis_trav in m\n"
"uint32 DistTrav_3\n"
"float32 fDistTrav_3\n"
"\n"
"# Miscellaneous_POI4\n"
"# InvPath Radius in 1/m\n"
"int16 InvPathRadius_4\n"
"float32 fInvPathRadius_4\n"
"# Side Slip in degrees\n"
"int16 SideSlipAngle_4\n"
"float32 fSideSlipAngle_4\n"
"# Dis_trav in m\n"
"uint32 DistTrav_4\n"
"float32 fDistTrav_4\n"
"\n"
"# Miscellaneous_POI5\n"
"# InvPath Radius in 1/m\n"
"int16 InvPathRadius_5\n"
"float32 fInvPathRadius_5\n"
"# Side Slip in degrees\n"
"int16 SideSlipAngle_5\n"
"float32 fSideSlipAngle_5\n"
"# Dis_trav in m\n"
"uint32 DistTrav_5\n"
"float32 fDistTrav_5\n"
"\n"
"# Miscellaneous_POI6\n"
"# InvPath Radius in 1/m\n"
"int16 InvPathRadius_6\n"
"float32 fInvPathRadius_6\n"
"# Side Slip in degrees\n"
"int16 SideSlipAngle_6\n"
"float32 fSideSlipAngle_6\n"
"# Dis_trav in m\n"
"uint32 DistTrav_6\n"
"float32 fDistTrav_6\n"
"\n"
"# Miscellaneous_POI7\n"
"# InvPath Radius in 1/m\n"
"int16 InvPathRadius_7\n"
"float32 fInvPathRadius_7\n"
"# Side Slip in degrees\n"
"int16 SideSlipAngle_7\n"
"float32 fSideSlipAngle_7\n"
"# Dis_trav in m\n"
"uint32 DistTrav_7\n"
"float32 fDistTrav_7\n"
"\n"
"# Miscellaneous_POI8\n"
"# InvPath Radius in 1/m\n"
"int16 InvPathRadius_8\n"
"float32 fInvPathRadius_8\n"
"# Side Slip in degrees\n"
"int16 SideSlipAngle_8\n"
"float32 fSideSlipAngle_8\n"
"# Dis_trav in m\n"
"uint32 DistTrav_8\n"
"float32 fDistTrav_8\n"
"\n"
"\n"
"# Triggers 1 and 2\n"
"# Triggers in mu.s\n"
"uint16 TrigRising1\n"
"uint16 TrigFalling1\n"
"uint16 TrigRising2\n"
"uint16 TrigFalling2\n"
"\n"
"\n"
"# Triggers 3 and 4\n"
"# Triggers in mu.s\n"
"uint16 TrigRising3\n"
"uint16 TrigFalling3\n"
"uint16 TrigRising4\n"
"uint16 TrigFalling4\n"
"\n"
"# System Data\n"
"# SystemTa in mu.s\n"
"uint16 SystemTa\n"
"# SystemTemp in deg. C\n"
"int16 SystemTemp\n"
"float32 fSystemTemp\n"
"# SystemTimeSinceInit in s\n"
"uint16 SystemTimeSinceInit\n"
"# System DSP load in %\n"
"uint16 SystemDSPLoad\n"
"float32 fSystemDSPLoad\n"
"\n"
"\n"
"# GPS Position Absolute\n"
"# Position in deg\n"
"int32 GPSLatAbs\n"
"int32 GPSLonAbs\n"
"float32 fGPSLatAbs\n"
"float32 fGPSLonAbs\n"
"\n"
"# GPS Position Relative\n"
"# Position in m\n"
"int32 GPSLatRel\n"
"int32 GPSLonRel\n"
"float32 fGPSLatRel\n"
"float32 fGPSLonRel\n"
"\n"
"# GPS EPE\n"
"#  Error in m\n"
"uint16 GPSStddevLat\n"
"uint16 GPSStddevLon\n"
"uint16 GPSStddevHeight\n"
"float32 fGPSStddevLat\n"
"float32 fGPSStddevLon\n"
"float32 fGPSStddevHeight\n"
"\n"
"\n"
"# GPS Velocity Frame\n"
"# Vel in m/s\n"
"int16 GPSVelFrameX\n"
"int16 GPSVelFrameY\n"
"int16 GPSVelFrameZ\n"
"float32 fGPSVelFrameX\n"
"float32 fGPSVelFrameY\n"
"float32 fGPSVelFrameZ\n"
"# Latency in s\n"
"uint16 GPSVelLatency\n"
"float32 fGPSVelLatency\n"
"\n"
"\n"
"# GPS EVE\n"
"# Error in m/s\n"
"uint16 GPSStddevVelX\n"
"uint16 GPSStddevVelY\n"
"uint16 GPSStddevVelZ\n"
"float32 fGPSStddevVelX\n"
"float32 fGPSStddevVelY\n"
"float32 fGPSStddevVelZ\n"
"\n"
"# GPS Time UTC\n"
"# GPSTimemsec in ms\n"
"uint32 GPSTimemsec\n"
"# GPSTimeWeek in week\n"
"uint16 GPSTimeWeek\n"
"# GPSTrigger in mu.s\n"
"uint16 GPSTrigger\n"
"\n"
"# GPS AuxData 1\n"
"# GPSDiffAge in s\n"
"uint16 GPSDiffAge\n"
"float32 fGPSDiffAge\n"
"int8 GPSStatsUsed\n"
"int8 GPSStatsVisible\n"
"\n"
"# GPS AuxData 2\n"
"# GPSLogDelay in Ta\n"
"int8 GPSLogDelay\n"
"# GPSReceiverLoad in %\n"
"int8 GPSReceiverLoad\n"
"float32 fGPSReceiverLoad\n"
"\n"
"int32 GPSBaseNr\n"
"\n"
"# INS Angle and GPS COG\n"
"# All units in deg\n"
"int16 INSRoll\n"
"int16 INSPitch\n"
"uint16 INSYaw\n"
"uint16 GPSCOG\n"
"float32 fINSRoll\n"
"float32 fINSPitch\n"
"float32 fINSYaw\n"
"float32 fGPSCOG\n"
"\n"
"# GPS Height(MSL)\n"
"int32 GPSHeight\n"
"int16 Undulation\n"
"float32 fGPSHeight\n"
"float32 fUndulation\n"
"\n"
"# GPS DualAnt Time UTC\n"
"# GPSDualAntTimemsec in ms\n"
"uint32 GPSDualAntTimemsec\n"
"# GPSDualAntTimeWeek in week\n"
"uint16 GPSDualAntTimeWeek\n"
"\n"
"# GPS DualAnt Angle\n"
"# All units in deg\n"
"uint16 GPSDualAntHeading\n"
"int16 GPSDualAntPitch\n"
"float32 fGPSDualAntHeading\n"
"float32 fGPSDualAntPitch\n"
"\n"
"# GPS DualAnt Angle ETE\n"
"# All units in deg\n"
"int8 GPSDualAntStdDevHeading\n"
"int8 GPSDualAntStdDevPitch\n"
"float32 fGPSDualAntStdDevHeading\n"
"float32 fGPSDualAntStdDevPitch\n"
"\n"
"# INS Position Height (MSL)\n"
"int32 INSHeight\n"
"float32 fINSHeight\n"
"\n"
"\n"
"# INS Position Height POI1 and POI2 (MSL)\n"
"int32 INSHeight_1\n"
"int32 INSHeight_2\n"
"float32 fINSHeight_1\n"
"float32 fINSHeight_2\n"
"\n"
"# INS Position Height POI3 and POI4 (MSL)\n"
"int32 INSHeight_3\n"
"int32 INSHeight_4\n"
"float32 fINSHeight_3\n"
"float32 fINSHeight_4\n"
"\n"
"# INS Position Height POI5 and POI6 (MSL)\n"
"int32 INSHeight_5\n"
"int32 INSHeight_6\n"
"float32 fINSHeight_5\n"
"float32 fINSHeight_6\n"
"\n"
"# INS Position Height POI7 and POI8 (MSL)\n"
"int32 INSHeight_7\n"
"int32 INSHeight_8\n"
"float32 fINSHeight_7\n"
"float32 fINSHeight_8\n"
"\n"
"# INS Time UTC\n"
"# INSTimemsec in ms\n"
"uint32 INSTimemsec\n"
"# INSTimeWeek in week\n"
"uint16 INSTimeWeek\n"
"# LeapSeconds in s\n"
"int16 LeapSeconds\n"
"\n"
"# INS Position Absolute\n"
"# Position in deg\n"
"int32 INSLatAbs\n"
"int32 INSLonAbs\n"
"float32 fINSLatAbs\n"
"float32 fINSLonAbs\n"
"\n"
"# INS Position Relative\n"
"# Position in m\n"
"int32 INSLatRel\n"
"int32 INSLonRel\n"
"float32 fINSLatRel\n"
"float32 fINSLonRel\n"
"\n"
"# INS Position Absolute POS1\n"
"# Position in deg\n"
"int32 INSLatAbs_1\n"
"int32 INSLonAbs_1\n"
"float32 fINSLatAbs_1\n"
"float32 fINSLonAbs_1\n"
"\n"
"# INS Position Relative POS1\n"
"# Position in m\n"
"int32 INSLatRel_1\n"
"int32 INSLonRel_1\n"
"float32 fINSLatRel_1\n"
"float32 fINSLonRel_1\n"
"\n"
"# INS Position Absolute POS2\n"
"# Position in deg\n"
"int32 INSLatAbs_2\n"
"int32 INSLonAbs_2\n"
"float32 fINSLatAbs_2\n"
"float32 fINSLonAbs_2\n"
"\n"
"# INS Position Relative POS2\n"
"# Position in m\n"
"int32 INSLatRel_2\n"
"int32 INSLonRel_2\n"
"float32 fINSLatRel_2\n"
"float32 fINSLonRel_2\n"
"\n"
"# INS Position Absolute POS3\n"
"# Position in deg\n"
"int32 INSLatAbs_3\n"
"int32 INSLonAbs_3\n"
"float32 fINSLatAbs_3\n"
"float32 fINSLonAbs_3\n"
"\n"
"# INS Position Relative POS3\n"
"# Position in m\n"
"int32 INSLatRel_3\n"
"int32 INSLonRel_3\n"
"float32 fINSLatRel_3\n"
"float32 fINSLonRel_3\n"
"\n"
"# INS Position Absolute POS4\n"
"# Position in deg\n"
"int32 INSLatAbs_4\n"
"int32 INSLonAbs_4\n"
"float32 fINSLatAbs_4\n"
"float32 fINSLonAbs_4\n"
"\n"
"# INS Position Relative POS4\n"
"# Position in m\n"
"int32 INSLatRel_4\n"
"int32 INSLonRel_4\n"
"float32 fINSLatRel_4\n"
"float32 fINSLonRel_4\n"
"\n"
"# INS Position Absolute POS5\n"
"# Position in deg\n"
"int32 INSLatAbs_5\n"
"int32 INSLonAbs_5\n"
"float32 fINSLatAbs_5\n"
"float32 fINSLonAbs_5\n"
"\n"
"# INS Position Relative POS5\n"
"# Position in m\n"
"int32 INSLatRel_5\n"
"int32 INSLonRel_5\n"
"float32 fINSLatRel_5\n"
"float32 fINSLonRel_5\n"
"\n"
"# INS Position Absolute POS6\n"
"# Position in deg\n"
"int32 INSLatAbs_6\n"
"int32 INSLonAbs_6\n"
"float32 fINSLatAbs_6\n"
"float32 fINSLonAbs_6\n"
"\n"
"# INS Position Relative POS6\n"
"# Position in m\n"
"int32 INSLatRel_6\n"
"int32 INSLonRel_6\n"
"float32 fINSLatRel_6\n"
"float32 fINSLonRel_6\n"
"\n"
"# INS Position Absolute POS7\n"
"# Position in deg\n"
"int32 INSLatAbs_7\n"
"int32 INSLonAbs_7\n"
"float32 fINSLatAbs_7\n"
"float32 fINSLonAbs_7\n"
"\n"
"# INS Position Relative POS7\n"
"# Position in m\n"
"int32 INSLatRel_7\n"
"int32 INSLonRel_7\n"
"float32 fINSLatRel_7\n"
"float32 fINSLonRel_7\n"
"\n"
"# INS Position Absolute POS8\n"
"# Position in deg\n"
"int32 INSLatAbs_8\n"
"int32 INSLonAbs_8\n"
"float32 fINSLatAbs_8\n"
"float32 fINSLonAbs_8\n"
"\n"
"# INS Position Relative POS8\n"
"# Position in m\n"
"int32 INSLatRel_8\n"
"int32 INSLonRel_8\n"
"float32 fINSLatRel_8\n"
"float32 fINSLonRel_8\n"
"\n"
"# INS Velocity Horizontal\n"
"# Velocity in m/s\n"
"int16 INSVelHorX\n"
"int16 INSVelHorY\n"
"int16 INSVelHorZ\n"
"float32 fINSVelHorX\n"
"float32 fINSVelHorY\n"
"float32 fINSVelHorZ\n"
"\n"
"# INS Velocity Frame\n"
"# Velocity in m/s\n"
"int16 INSVelFrameX\n"
"int16 INSVelFrameY\n"
"int16 INSVelFrameZ\n"
"float32 fINSVelFrameX\n"
"float32 fINSVelFrameY\n"
"float32 fINSVelFrameZ\n"
"\n"
"\n"
"# INS Velocity Horizontal POI1\n"
"# Velocity in m/s\n"
"int16 INSVelHorX_1\n"
"int16 INSVelHorY_1\n"
"int16 INSVelHorZ_1\n"
"float32 fINSVelHorX_1\n"
"float32 fINSVelHorY_1\n"
"float32 fINSVelHorZ_1\n"
"\n"
"# INS Velocity Horizontal POI2\n"
"# Velocity in m/s\n"
"int16 INSVelHorX_2\n"
"int16 INSVelHorY_2\n"
"int16 INSVelHorZ_2\n"
"float32 fINSVelHorX_2\n"
"float32 fINSVelHorY_2\n"
"float32 fINSVelHorZ_2\n"
"\n"
"# INS Velocity Horizontal POI3\n"
"# Velocity in m/s\n"
"int16 INSVelHorX_3\n"
"int16 INSVelHorY_3\n"
"int16 INSVelHorZ_3\n"
"float32 fINSVelHorX_3\n"
"float32 fINSVelHorY_3\n"
"float32 fINSVelHorZ_3\n"
"\n"
"# INS Velocity Horizontal POI4\n"
"# Velocity in m/s\n"
"int16 INSVelHorX_4\n"
"int16 INSVelHorY_4\n"
"int16 INSVelHorZ_4\n"
"float32 fINSVelHorX_4\n"
"float32 fINSVelHorY_4\n"
"float32 fINSVelHorZ_4\n"
"\n"
"# INS Velocity Horizontal POI5\n"
"# Velocity in m/s\n"
"int16 INSVelHorX_5\n"
"int16 INSVelHorY_5\n"
"int16 INSVelHorZ_5\n"
"float32 fINSVelHorX_5\n"
"float32 fINSVelHorY_5\n"
"float32 fINSVelHorZ_5\n"
"\n"
"# INS Velocity Horizontal POI6\n"
"# Velocity in m/s\n"
"int16 INSVelHorX_6\n"
"int16 INSVelHorY_6\n"
"int16 INSVelHorZ_6\n"
"float32 fINSVelHorX_6\n"
"float32 fINSVelHorY_6\n"
"float32 fINSVelHorZ_6\n"
"\n"
"# INS Velocity Horizontal POI7\n"
"# Velocity in m/s\n"
"int16 INSVelHorX_7\n"
"int16 INSVelHorY_7\n"
"int16 INSVelHorZ_7\n"
"float32 fINSVelHorX_7\n"
"float32 fINSVelHorY_7\n"
"float32 fINSVelHorZ_7\n"
"\n"
"# INS Velocity Horizontal POI8\n"
"# Velocity in m/s\n"
"int16 INSVelHorX_8\n"
"int16 INSVelHorY_8\n"
"int16 INSVelHorZ_8\n"
"float32 fINSVelHorX_8\n"
"float32 fINSVelHorY_8\n"
"float32 fINSVelHorZ_8\n"
"\n"
"# INS EPE\n"
"# Error in m\n"
"uint16 INSStddevLat\n"
"uint16 INSStddevLong\n"
"uint16 INSStddevHeight\n"
"float32 fINSStddevLat\n"
"float32 fINSStddevLong\n"
"float32 fINSStddevHeight\n"
"\n"
"# INS EVE and INS ETE\n"
"#  Std vel in m/s\n"
"int8 INSStddevVelX\n"
"int8 INSStddevVelY\n"
"int8 INSStddevVelZ\n"
"float32 fINSStddevVelX\n"
"float32 fINSStddevVelY\n"
"float32 fINSStddevVelZ\n"
"# Std ETE in deg\n"
"int8 INSStddevRoll\n"
"int8 INSStddevPitch\n"
"int8 INSStddevYaw\n"
"float32 fINSStddevRoll\n"
"float32 fINSStddevPitch\n"
"float32 fINSStddevYaw\n"
"\n"
"# Analog In1\n"
"# Analog in V\n"
"int16 AN1\n"
"int16 AN2\n"
"int16 AN3\n"
"int16 AN4\n"
"float32 fAN1\n"
"float32 fAN2\n"
"float32 fAN3\n"
"float32 fAN4\n"
"\n"
"# Kalman Filter Status\n"
"# All uints in %\n"
"uint8 KFLatStimulated\n"
"uint8 KFLongStimulated\n"
"uint8 KFSteadyState\n"
"\n"
"# GNSS Receiver Status\n"
"uint32 GPSReceiverError\n"
"uint32 GPSReceiverStatus\n"
"\n"
"\n"
"# MobileEye Time Comparison\n"
"float32 TimeMsec\n"
"float32 TimeNsec\n"
;
  }

  static const char* value(const ::adma_connect::Adma_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::adma_connect::Adma_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.GeneSysID);
      stream.next(m.HeaderVersion);
      stream.next(m.FormatID);
      stream.next(m.FormatVersion);
      stream.next(m.SerialNo);
      stream.next(m.Alias);
      stream.next(m.ConfigID);
      stream.next(m.ConfigFormat);
      stream.next(m.ConfigVersion);
      stream.next(m.ConfigSize);
      stream.next(m.ByteOffset);
      stream.next(m.SliceSize);
      stream.next(m.StatusGPSMode);
      stream.next(m.StatusStandStill);
      stream.next(m.StatusSkidding);
      stream.next(m.StatusExternalVelOut);
      stream.next(m.StatusTrigGps);
      stream.next(m.StatusSignalIN3);
      stream.next(m.StatusSignalIn2);
      stream.next(m.StatusSignalIn1);
      stream.next(m.StatusAlignment);
      stream.next(m.StatusAHRSINS);
      stream.next(m.StatusDeadReckoning);
      stream.next(m.StatusSyncLock);
      stream.next(m.StatusEVKActiv);
      stream.next(m.StatusEVKEstimates);
      stream.next(m.StatusHeadingExecuted);
      stream.next(m.StatusConfigurationChanged);
      stream.next(m.StatusTilt);
      stream.next(m.StatusPos);
      stream.next(m.StatusCount);
      stream.next(m.StatusKalmanFilterSetteled);
      stream.next(m.StatusKFLatStimulated);
      stream.next(m.StatusKFLongStimulated);
      stream.next(m.StatusKFSteadyState);
      stream.next(m.StatusSpeed);
      stream.next(m.ErrorHardware);
      stream.next(m.Error_Misc1);
      stream.next(m.Error_Misc2);
      stream.next(m.Error_Misc3);
      stream.next(m.WarnGPS);
      stream.next(m.WarnMisc1);
      stream.next(m.ErrorHWSticky);
      stream.next(m.AccBodyHRX);
      stream.next(m.fAccBodyHRX);
      stream.next(m.RateBodyHRX);
      stream.next(m.fRateBodyHRX);
      stream.next(m.AccBodyHRY);
      stream.next(m.fAccBodyHRY);
      stream.next(m.RateBodyHRY);
      stream.next(m.fRateBodyHRY);
      stream.next(m.AccBodyHRZ);
      stream.next(m.fAccBodyHRZ);
      stream.next(m.RateBodyHRZ);
      stream.next(m.fRateBodyHRZ);
      stream.next(m.RateBodyX);
      stream.next(m.RateBodyY);
      stream.next(m.RateBodyZ);
      stream.next(m.fRateBodyX);
      stream.next(m.fRateBodyY);
      stream.next(m.fRateBodyZ);
      stream.next(m.RateHorX);
      stream.next(m.RateHorY);
      stream.next(m.RateHorZ);
      stream.next(m.fRateHorX);
      stream.next(m.fRateHorY);
      stream.next(m.fRateHorZ);
      stream.next(m.AccBodyX);
      stream.next(m.AccBodyY);
      stream.next(m.AccBodyZ);
      stream.next(m.fAccBodyX);
      stream.next(m.fAccBodyY);
      stream.next(m.fAccBodyZ);
      stream.next(m.AccHorX);
      stream.next(m.AccHorY);
      stream.next(m.AccHorZ);
      stream.next(m.fAccHorX);
      stream.next(m.fAccHorY);
      stream.next(m.fAccHorZ);
      stream.next(m.AccBodyX_1);
      stream.next(m.AccBodyY_1);
      stream.next(m.AccBodyZ_1);
      stream.next(m.fAccBodyX_1);
      stream.next(m.fAccBodyY_1);
      stream.next(m.fAccBodyZ_1);
      stream.next(m.AccBodyX_2);
      stream.next(m.AccBodyY_2);
      stream.next(m.AccBodyZ_2);
      stream.next(m.fAccBodyX_2);
      stream.next(m.fAccBodyY_2);
      stream.next(m.fAccBodyZ_2);
      stream.next(m.AccBodyX_3);
      stream.next(m.AccBodyY_3);
      stream.next(m.AccBodyZ_3);
      stream.next(m.fAccBodyX_3);
      stream.next(m.fAccBodyY_3);
      stream.next(m.fAccBodyZ_3);
      stream.next(m.AccBodyX_4);
      stream.next(m.AccBodyY_4);
      stream.next(m.AccBodyZ_4);
      stream.next(m.fAccBodyX_4);
      stream.next(m.fAccBodyY_4);
      stream.next(m.fAccBodyZ_4);
      stream.next(m.AccBodyX_5);
      stream.next(m.AccBodyY_5);
      stream.next(m.AccBodyZ_5);
      stream.next(m.fAccBodyX_5);
      stream.next(m.fAccBodyY_5);
      stream.next(m.fAccBodyZ_5);
      stream.next(m.AccBodyX_6);
      stream.next(m.AccBodyY_6);
      stream.next(m.AccBodyZ_6);
      stream.next(m.fAccBodyX_6);
      stream.next(m.fAccBodyY_6);
      stream.next(m.fAccBodyZ_6);
      stream.next(m.AccBodyX_7);
      stream.next(m.AccBodyY_7);
      stream.next(m.AccBodyZ_7);
      stream.next(m.fAccBodyX_7);
      stream.next(m.fAccBodyY_7);
      stream.next(m.fAccBodyZ_7);
      stream.next(m.AccBodyX_8);
      stream.next(m.AccBodyY_8);
      stream.next(m.AccBodyZ_8);
      stream.next(m.fAccBodyX_8);
      stream.next(m.fAccBodyY_8);
      stream.next(m.fAccBodyZ_8);
      stream.next(m.AccHorX_1);
      stream.next(m.AccHorY_1);
      stream.next(m.AccHorZ_1);
      stream.next(m.fAccHorX_1);
      stream.next(m.fAccHorY_1);
      stream.next(m.fAccHorZ_1);
      stream.next(m.AccHorX_2);
      stream.next(m.AccHorY_2);
      stream.next(m.AccHorZ_2);
      stream.next(m.fAccHorX_2);
      stream.next(m.fAccHorY_2);
      stream.next(m.fAccHorZ_2);
      stream.next(m.AccHorX_3);
      stream.next(m.AccHorY_3);
      stream.next(m.AccHorZ_3);
      stream.next(m.fAccHorX_3);
      stream.next(m.fAccHorY_3);
      stream.next(m.fAccHorZ_3);
      stream.next(m.AccHorX_4);
      stream.next(m.AccHorY_4);
      stream.next(m.AccHorZ_4);
      stream.next(m.fAccHorX_4);
      stream.next(m.fAccHorY_4);
      stream.next(m.fAccHorZ_4);
      stream.next(m.AccHorX_5);
      stream.next(m.AccHorY_5);
      stream.next(m.AccHorZ_5);
      stream.next(m.fAccHorX_5);
      stream.next(m.fAccHorY_5);
      stream.next(m.fAccHorZ_5);
      stream.next(m.AccHorX_6);
      stream.next(m.AccHorY_6);
      stream.next(m.AccHorZ_6);
      stream.next(m.fAccHorX_6);
      stream.next(m.fAccHorY_6);
      stream.next(m.fAccHorZ_6);
      stream.next(m.AccHorX_7);
      stream.next(m.AccHorY_7);
      stream.next(m.AccHorZ_7);
      stream.next(m.fAccHorX_7);
      stream.next(m.fAccHorY_7);
      stream.next(m.fAccHorZ_7);
      stream.next(m.AccHorX_8);
      stream.next(m.AccHorY_8);
      stream.next(m.AccHorZ_8);
      stream.next(m.fAccHorX_8);
      stream.next(m.fAccHorY_8);
      stream.next(m.fAccHorZ_8);
      stream.next(m.ExtVelAnX);
      stream.next(m.ExtVelAnY);
      stream.next(m.fExtVelAnX);
      stream.next(m.fExtVelAnY);
      stream.next(m.ExtVelDigX);
      stream.next(m.ExtVelDigY);
      stream.next(m.ExtVelDigPulsesX);
      stream.next(m.ExtVelDigPulsesY);
      stream.next(m.fExtVelDigX);
      stream.next(m.fExtVelDigY);
      stream.next(m.ExtVelXCorrected);
      stream.next(m.ExtVelYCorrected);
      stream.next(m.fExtVelXCorrected);
      stream.next(m.fExtVelYCorrected);
      stream.next(m.ExtBaroPressure);
      stream.next(m.fExtBaroPressure);
      stream.next(m.ExtBaroHeight);
      stream.next(m.ExtBaroHeightCorrected);
      stream.next(m.fExtBaroHeight);
      stream.next(m.fExtBaroHeightCorrected);
      stream.next(m.InvPathRadius);
      stream.next(m.fInvPathRadius);
      stream.next(m.SideSlipAngle);
      stream.next(m.fSideSlipAngle);
      stream.next(m.DistTrav);
      stream.next(m.fDistTrav);
      stream.next(m.InvPathRadius_1);
      stream.next(m.fInvPathRadius_1);
      stream.next(m.SideSlipAngle_1);
      stream.next(m.fSideSlipAngle_1);
      stream.next(m.DistTrav_1);
      stream.next(m.fDistTrav_1);
      stream.next(m.InvPathRadius_2);
      stream.next(m.fInvPathRadius_2);
      stream.next(m.SideSlipAngle_2);
      stream.next(m.fSideSlipAngle_2);
      stream.next(m.DistTrav_2);
      stream.next(m.fDistTrav_2);
      stream.next(m.InvPathRadius_3);
      stream.next(m.fInvPathRadius_3);
      stream.next(m.SideSlipAngle_3);
      stream.next(m.fSideSlipAngle_3);
      stream.next(m.DistTrav_3);
      stream.next(m.fDistTrav_3);
      stream.next(m.InvPathRadius_4);
      stream.next(m.fInvPathRadius_4);
      stream.next(m.SideSlipAngle_4);
      stream.next(m.fSideSlipAngle_4);
      stream.next(m.DistTrav_4);
      stream.next(m.fDistTrav_4);
      stream.next(m.InvPathRadius_5);
      stream.next(m.fInvPathRadius_5);
      stream.next(m.SideSlipAngle_5);
      stream.next(m.fSideSlipAngle_5);
      stream.next(m.DistTrav_5);
      stream.next(m.fDistTrav_5);
      stream.next(m.InvPathRadius_6);
      stream.next(m.fInvPathRadius_6);
      stream.next(m.SideSlipAngle_6);
      stream.next(m.fSideSlipAngle_6);
      stream.next(m.DistTrav_6);
      stream.next(m.fDistTrav_6);
      stream.next(m.InvPathRadius_7);
      stream.next(m.fInvPathRadius_7);
      stream.next(m.SideSlipAngle_7);
      stream.next(m.fSideSlipAngle_7);
      stream.next(m.DistTrav_7);
      stream.next(m.fDistTrav_7);
      stream.next(m.InvPathRadius_8);
      stream.next(m.fInvPathRadius_8);
      stream.next(m.SideSlipAngle_8);
      stream.next(m.fSideSlipAngle_8);
      stream.next(m.DistTrav_8);
      stream.next(m.fDistTrav_8);
      stream.next(m.TrigRising1);
      stream.next(m.TrigFalling1);
      stream.next(m.TrigRising2);
      stream.next(m.TrigFalling2);
      stream.next(m.TrigRising3);
      stream.next(m.TrigFalling3);
      stream.next(m.TrigRising4);
      stream.next(m.TrigFalling4);
      stream.next(m.SystemTa);
      stream.next(m.SystemTemp);
      stream.next(m.fSystemTemp);
      stream.next(m.SystemTimeSinceInit);
      stream.next(m.SystemDSPLoad);
      stream.next(m.fSystemDSPLoad);
      stream.next(m.GPSLatAbs);
      stream.next(m.GPSLonAbs);
      stream.next(m.fGPSLatAbs);
      stream.next(m.fGPSLonAbs);
      stream.next(m.GPSLatRel);
      stream.next(m.GPSLonRel);
      stream.next(m.fGPSLatRel);
      stream.next(m.fGPSLonRel);
      stream.next(m.GPSStddevLat);
      stream.next(m.GPSStddevLon);
      stream.next(m.GPSStddevHeight);
      stream.next(m.fGPSStddevLat);
      stream.next(m.fGPSStddevLon);
      stream.next(m.fGPSStddevHeight);
      stream.next(m.GPSVelFrameX);
      stream.next(m.GPSVelFrameY);
      stream.next(m.GPSVelFrameZ);
      stream.next(m.fGPSVelFrameX);
      stream.next(m.fGPSVelFrameY);
      stream.next(m.fGPSVelFrameZ);
      stream.next(m.GPSVelLatency);
      stream.next(m.fGPSVelLatency);
      stream.next(m.GPSStddevVelX);
      stream.next(m.GPSStddevVelY);
      stream.next(m.GPSStddevVelZ);
      stream.next(m.fGPSStddevVelX);
      stream.next(m.fGPSStddevVelY);
      stream.next(m.fGPSStddevVelZ);
      stream.next(m.GPSTimemsec);
      stream.next(m.GPSTimeWeek);
      stream.next(m.GPSTrigger);
      stream.next(m.GPSDiffAge);
      stream.next(m.fGPSDiffAge);
      stream.next(m.GPSStatsUsed);
      stream.next(m.GPSStatsVisible);
      stream.next(m.GPSLogDelay);
      stream.next(m.GPSReceiverLoad);
      stream.next(m.fGPSReceiverLoad);
      stream.next(m.GPSBaseNr);
      stream.next(m.INSRoll);
      stream.next(m.INSPitch);
      stream.next(m.INSYaw);
      stream.next(m.GPSCOG);
      stream.next(m.fINSRoll);
      stream.next(m.fINSPitch);
      stream.next(m.fINSYaw);
      stream.next(m.fGPSCOG);
      stream.next(m.GPSHeight);
      stream.next(m.Undulation);
      stream.next(m.fGPSHeight);
      stream.next(m.fUndulation);
      stream.next(m.GPSDualAntTimemsec);
      stream.next(m.GPSDualAntTimeWeek);
      stream.next(m.GPSDualAntHeading);
      stream.next(m.GPSDualAntPitch);
      stream.next(m.fGPSDualAntHeading);
      stream.next(m.fGPSDualAntPitch);
      stream.next(m.GPSDualAntStdDevHeading);
      stream.next(m.GPSDualAntStdDevPitch);
      stream.next(m.fGPSDualAntStdDevHeading);
      stream.next(m.fGPSDualAntStdDevPitch);
      stream.next(m.INSHeight);
      stream.next(m.fINSHeight);
      stream.next(m.INSHeight_1);
      stream.next(m.INSHeight_2);
      stream.next(m.fINSHeight_1);
      stream.next(m.fINSHeight_2);
      stream.next(m.INSHeight_3);
      stream.next(m.INSHeight_4);
      stream.next(m.fINSHeight_3);
      stream.next(m.fINSHeight_4);
      stream.next(m.INSHeight_5);
      stream.next(m.INSHeight_6);
      stream.next(m.fINSHeight_5);
      stream.next(m.fINSHeight_6);
      stream.next(m.INSHeight_7);
      stream.next(m.INSHeight_8);
      stream.next(m.fINSHeight_7);
      stream.next(m.fINSHeight_8);
      stream.next(m.INSTimemsec);
      stream.next(m.INSTimeWeek);
      stream.next(m.LeapSeconds);
      stream.next(m.INSLatAbs);
      stream.next(m.INSLonAbs);
      stream.next(m.fINSLatAbs);
      stream.next(m.fINSLonAbs);
      stream.next(m.INSLatRel);
      stream.next(m.INSLonRel);
      stream.next(m.fINSLatRel);
      stream.next(m.fINSLonRel);
      stream.next(m.INSLatAbs_1);
      stream.next(m.INSLonAbs_1);
      stream.next(m.fINSLatAbs_1);
      stream.next(m.fINSLonAbs_1);
      stream.next(m.INSLatRel_1);
      stream.next(m.INSLonRel_1);
      stream.next(m.fINSLatRel_1);
      stream.next(m.fINSLonRel_1);
      stream.next(m.INSLatAbs_2);
      stream.next(m.INSLonAbs_2);
      stream.next(m.fINSLatAbs_2);
      stream.next(m.fINSLonAbs_2);
      stream.next(m.INSLatRel_2);
      stream.next(m.INSLonRel_2);
      stream.next(m.fINSLatRel_2);
      stream.next(m.fINSLonRel_2);
      stream.next(m.INSLatAbs_3);
      stream.next(m.INSLonAbs_3);
      stream.next(m.fINSLatAbs_3);
      stream.next(m.fINSLonAbs_3);
      stream.next(m.INSLatRel_3);
      stream.next(m.INSLonRel_3);
      stream.next(m.fINSLatRel_3);
      stream.next(m.fINSLonRel_3);
      stream.next(m.INSLatAbs_4);
      stream.next(m.INSLonAbs_4);
      stream.next(m.fINSLatAbs_4);
      stream.next(m.fINSLonAbs_4);
      stream.next(m.INSLatRel_4);
      stream.next(m.INSLonRel_4);
      stream.next(m.fINSLatRel_4);
      stream.next(m.fINSLonRel_4);
      stream.next(m.INSLatAbs_5);
      stream.next(m.INSLonAbs_5);
      stream.next(m.fINSLatAbs_5);
      stream.next(m.fINSLonAbs_5);
      stream.next(m.INSLatRel_5);
      stream.next(m.INSLonRel_5);
      stream.next(m.fINSLatRel_5);
      stream.next(m.fINSLonRel_5);
      stream.next(m.INSLatAbs_6);
      stream.next(m.INSLonAbs_6);
      stream.next(m.fINSLatAbs_6);
      stream.next(m.fINSLonAbs_6);
      stream.next(m.INSLatRel_6);
      stream.next(m.INSLonRel_6);
      stream.next(m.fINSLatRel_6);
      stream.next(m.fINSLonRel_6);
      stream.next(m.INSLatAbs_7);
      stream.next(m.INSLonAbs_7);
      stream.next(m.fINSLatAbs_7);
      stream.next(m.fINSLonAbs_7);
      stream.next(m.INSLatRel_7);
      stream.next(m.INSLonRel_7);
      stream.next(m.fINSLatRel_7);
      stream.next(m.fINSLonRel_7);
      stream.next(m.INSLatAbs_8);
      stream.next(m.INSLonAbs_8);
      stream.next(m.fINSLatAbs_8);
      stream.next(m.fINSLonAbs_8);
      stream.next(m.INSLatRel_8);
      stream.next(m.INSLonRel_8);
      stream.next(m.fINSLatRel_8);
      stream.next(m.fINSLonRel_8);
      stream.next(m.INSVelHorX);
      stream.next(m.INSVelHorY);
      stream.next(m.INSVelHorZ);
      stream.next(m.fINSVelHorX);
      stream.next(m.fINSVelHorY);
      stream.next(m.fINSVelHorZ);
      stream.next(m.INSVelFrameX);
      stream.next(m.INSVelFrameY);
      stream.next(m.INSVelFrameZ);
      stream.next(m.fINSVelFrameX);
      stream.next(m.fINSVelFrameY);
      stream.next(m.fINSVelFrameZ);
      stream.next(m.INSVelHorX_1);
      stream.next(m.INSVelHorY_1);
      stream.next(m.INSVelHorZ_1);
      stream.next(m.fINSVelHorX_1);
      stream.next(m.fINSVelHorY_1);
      stream.next(m.fINSVelHorZ_1);
      stream.next(m.INSVelHorX_2);
      stream.next(m.INSVelHorY_2);
      stream.next(m.INSVelHorZ_2);
      stream.next(m.fINSVelHorX_2);
      stream.next(m.fINSVelHorY_2);
      stream.next(m.fINSVelHorZ_2);
      stream.next(m.INSVelHorX_3);
      stream.next(m.INSVelHorY_3);
      stream.next(m.INSVelHorZ_3);
      stream.next(m.fINSVelHorX_3);
      stream.next(m.fINSVelHorY_3);
      stream.next(m.fINSVelHorZ_3);
      stream.next(m.INSVelHorX_4);
      stream.next(m.INSVelHorY_4);
      stream.next(m.INSVelHorZ_4);
      stream.next(m.fINSVelHorX_4);
      stream.next(m.fINSVelHorY_4);
      stream.next(m.fINSVelHorZ_4);
      stream.next(m.INSVelHorX_5);
      stream.next(m.INSVelHorY_5);
      stream.next(m.INSVelHorZ_5);
      stream.next(m.fINSVelHorX_5);
      stream.next(m.fINSVelHorY_5);
      stream.next(m.fINSVelHorZ_5);
      stream.next(m.INSVelHorX_6);
      stream.next(m.INSVelHorY_6);
      stream.next(m.INSVelHorZ_6);
      stream.next(m.fINSVelHorX_6);
      stream.next(m.fINSVelHorY_6);
      stream.next(m.fINSVelHorZ_6);
      stream.next(m.INSVelHorX_7);
      stream.next(m.INSVelHorY_7);
      stream.next(m.INSVelHorZ_7);
      stream.next(m.fINSVelHorX_7);
      stream.next(m.fINSVelHorY_7);
      stream.next(m.fINSVelHorZ_7);
      stream.next(m.INSVelHorX_8);
      stream.next(m.INSVelHorY_8);
      stream.next(m.INSVelHorZ_8);
      stream.next(m.fINSVelHorX_8);
      stream.next(m.fINSVelHorY_8);
      stream.next(m.fINSVelHorZ_8);
      stream.next(m.INSStddevLat);
      stream.next(m.INSStddevLong);
      stream.next(m.INSStddevHeight);
      stream.next(m.fINSStddevLat);
      stream.next(m.fINSStddevLong);
      stream.next(m.fINSStddevHeight);
      stream.next(m.INSStddevVelX);
      stream.next(m.INSStddevVelY);
      stream.next(m.INSStddevVelZ);
      stream.next(m.fINSStddevVelX);
      stream.next(m.fINSStddevVelY);
      stream.next(m.fINSStddevVelZ);
      stream.next(m.INSStddevRoll);
      stream.next(m.INSStddevPitch);
      stream.next(m.INSStddevYaw);
      stream.next(m.fINSStddevRoll);
      stream.next(m.fINSStddevPitch);
      stream.next(m.fINSStddevYaw);
      stream.next(m.AN1);
      stream.next(m.AN2);
      stream.next(m.AN3);
      stream.next(m.AN4);
      stream.next(m.fAN1);
      stream.next(m.fAN2);
      stream.next(m.fAN3);
      stream.next(m.fAN4);
      stream.next(m.KFLatStimulated);
      stream.next(m.KFLongStimulated);
      stream.next(m.KFSteadyState);
      stream.next(m.GPSReceiverError);
      stream.next(m.GPSReceiverStatus);
      stream.next(m.TimeMsec);
      stream.next(m.TimeNsec);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct Adma_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::adma_connect::Adma_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::adma_connect::Adma_<ContainerAllocator>& v)
  {
    s << indent << "GeneSysID: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::stream(s, indent + "  ", v.GeneSysID);
    s << indent << "HeaderVersion: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::stream(s, indent + "  ", v.HeaderVersion);
    s << indent << "FormatID: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.FormatID);
    s << indent << "FormatVersion: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::stream(s, indent + "  ", v.FormatVersion);
    s << indent << "SerialNo: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.SerialNo);
    s << indent << "Alias: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.Alias);
    s << indent << "ConfigID: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.ConfigID);
    s << indent << "ConfigFormat: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.ConfigFormat);
    s << indent << "ConfigVersion: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.ConfigVersion);
    s << indent << "ConfigSize: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.ConfigSize);
    s << indent << "ByteOffset: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.ByteOffset);
    s << indent << "SliceSize: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.SliceSize);
    s << indent << "StatusGPSMode: ";
    Printer<int32_t>::stream(s, indent + "  ", v.StatusGPSMode);
    s << indent << "StatusStandStill: ";
    Printer<int32_t>::stream(s, indent + "  ", v.StatusStandStill);
    s << indent << "StatusSkidding: ";
    Printer<int32_t>::stream(s, indent + "  ", v.StatusSkidding);
    s << indent << "StatusExternalVelOut: ";
    Printer<int32_t>::stream(s, indent + "  ", v.StatusExternalVelOut);
    s << indent << "StatusTrigGps: ";
    Printer<int32_t>::stream(s, indent + "  ", v.StatusTrigGps);
    s << indent << "StatusSignalIN3: ";
    Printer<int32_t>::stream(s, indent + "  ", v.StatusSignalIN3);
    s << indent << "StatusSignalIn2: ";
    Printer<int32_t>::stream(s, indent + "  ", v.StatusSignalIn2);
    s << indent << "StatusSignalIn1: ";
    Printer<int32_t>::stream(s, indent + "  ", v.StatusSignalIn1);
    s << indent << "StatusAlignment: ";
    Printer<int32_t>::stream(s, indent + "  ", v.StatusAlignment);
    s << indent << "StatusAHRSINS: ";
    Printer<int32_t>::stream(s, indent + "  ", v.StatusAHRSINS);
    s << indent << "StatusDeadReckoning: ";
    Printer<int32_t>::stream(s, indent + "  ", v.StatusDeadReckoning);
    s << indent << "StatusSyncLock: ";
    Printer<int32_t>::stream(s, indent + "  ", v.StatusSyncLock);
    s << indent << "StatusEVKActiv: ";
    Printer<int32_t>::stream(s, indent + "  ", v.StatusEVKActiv);
    s << indent << "StatusEVKEstimates: ";
    Printer<int32_t>::stream(s, indent + "  ", v.StatusEVKEstimates);
    s << indent << "StatusHeadingExecuted: ";
    Printer<int32_t>::stream(s, indent + "  ", v.StatusHeadingExecuted);
    s << indent << "StatusConfigurationChanged: ";
    Printer<int32_t>::stream(s, indent + "  ", v.StatusConfigurationChanged);
    s << indent << "StatusTilt: ";
    Printer<int32_t>::stream(s, indent + "  ", v.StatusTilt);
    s << indent << "StatusPos: ";
    Printer<int32_t>::stream(s, indent + "  ", v.StatusPos);
    s << indent << "StatusCount: ";
    Printer<int8_t>::stream(s, indent + "  ", v.StatusCount);
    s << indent << "StatusKalmanFilterSetteled: ";
    Printer<int32_t>::stream(s, indent + "  ", v.StatusKalmanFilterSetteled);
    s << indent << "StatusKFLatStimulated: ";
    Printer<int32_t>::stream(s, indent + "  ", v.StatusKFLatStimulated);
    s << indent << "StatusKFLongStimulated: ";
    Printer<int32_t>::stream(s, indent + "  ", v.StatusKFLongStimulated);
    s << indent << "StatusKFSteadyState: ";
    Printer<int32_t>::stream(s, indent + "  ", v.StatusKFSteadyState);
    s << indent << "StatusSpeed: ";
    Printer<int32_t>::stream(s, indent + "  ", v.StatusSpeed);
    s << indent << "ErrorHardware: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::stream(s, indent + "  ", v.ErrorHardware);
    s << indent << "Error_Misc1: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::stream(s, indent + "  ", v.Error_Misc1);
    s << indent << "Error_Misc2: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::stream(s, indent + "  ", v.Error_Misc2);
    s << indent << "Error_Misc3: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::stream(s, indent + "  ", v.Error_Misc3);
    s << indent << "WarnGPS: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::stream(s, indent + "  ", v.WarnGPS);
    s << indent << "WarnMisc1: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::stream(s, indent + "  ", v.WarnMisc1);
    s << indent << "ErrorHWSticky: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::stream(s, indent + "  ", v.ErrorHWSticky);
    s << indent << "AccBodyHRX: ";
    Printer<int32_t>::stream(s, indent + "  ", v.AccBodyHRX);
    s << indent << "fAccBodyHRX: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyHRX);
    s << indent << "RateBodyHRX: ";
    Printer<int32_t>::stream(s, indent + "  ", v.RateBodyHRX);
    s << indent << "fRateBodyHRX: ";
    Printer<float>::stream(s, indent + "  ", v.fRateBodyHRX);
    s << indent << "AccBodyHRY: ";
    Printer<int32_t>::stream(s, indent + "  ", v.AccBodyHRY);
    s << indent << "fAccBodyHRY: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyHRY);
    s << indent << "RateBodyHRY: ";
    Printer<int32_t>::stream(s, indent + "  ", v.RateBodyHRY);
    s << indent << "fRateBodyHRY: ";
    Printer<float>::stream(s, indent + "  ", v.fRateBodyHRY);
    s << indent << "AccBodyHRZ: ";
    Printer<int32_t>::stream(s, indent + "  ", v.AccBodyHRZ);
    s << indent << "fAccBodyHRZ: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyHRZ);
    s << indent << "RateBodyHRZ: ";
    Printer<int32_t>::stream(s, indent + "  ", v.RateBodyHRZ);
    s << indent << "fRateBodyHRZ: ";
    Printer<float>::stream(s, indent + "  ", v.fRateBodyHRZ);
    s << indent << "RateBodyX: ";
    Printer<int16_t>::stream(s, indent + "  ", v.RateBodyX);
    s << indent << "RateBodyY: ";
    Printer<int16_t>::stream(s, indent + "  ", v.RateBodyY);
    s << indent << "RateBodyZ: ";
    Printer<int16_t>::stream(s, indent + "  ", v.RateBodyZ);
    s << indent << "fRateBodyX: ";
    Printer<float>::stream(s, indent + "  ", v.fRateBodyX);
    s << indent << "fRateBodyY: ";
    Printer<float>::stream(s, indent + "  ", v.fRateBodyY);
    s << indent << "fRateBodyZ: ";
    Printer<float>::stream(s, indent + "  ", v.fRateBodyZ);
    s << indent << "RateHorX: ";
    Printer<int16_t>::stream(s, indent + "  ", v.RateHorX);
    s << indent << "RateHorY: ";
    Printer<int16_t>::stream(s, indent + "  ", v.RateHorY);
    s << indent << "RateHorZ: ";
    Printer<int16_t>::stream(s, indent + "  ", v.RateHorZ);
    s << indent << "fRateHorX: ";
    Printer<float>::stream(s, indent + "  ", v.fRateHorX);
    s << indent << "fRateHorY: ";
    Printer<float>::stream(s, indent + "  ", v.fRateHorY);
    s << indent << "fRateHorZ: ";
    Printer<float>::stream(s, indent + "  ", v.fRateHorZ);
    s << indent << "AccBodyX: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyX);
    s << indent << "AccBodyY: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyY);
    s << indent << "AccBodyZ: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyZ);
    s << indent << "fAccBodyX: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyX);
    s << indent << "fAccBodyY: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyY);
    s << indent << "fAccBodyZ: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyZ);
    s << indent << "AccHorX: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorX);
    s << indent << "AccHorY: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorY);
    s << indent << "AccHorZ: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorZ);
    s << indent << "fAccHorX: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorX);
    s << indent << "fAccHorY: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorY);
    s << indent << "fAccHorZ: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorZ);
    s << indent << "AccBodyX_1: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyX_1);
    s << indent << "AccBodyY_1: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyY_1);
    s << indent << "AccBodyZ_1: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyZ_1);
    s << indent << "fAccBodyX_1: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyX_1);
    s << indent << "fAccBodyY_1: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyY_1);
    s << indent << "fAccBodyZ_1: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyZ_1);
    s << indent << "AccBodyX_2: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyX_2);
    s << indent << "AccBodyY_2: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyY_2);
    s << indent << "AccBodyZ_2: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyZ_2);
    s << indent << "fAccBodyX_2: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyX_2);
    s << indent << "fAccBodyY_2: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyY_2);
    s << indent << "fAccBodyZ_2: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyZ_2);
    s << indent << "AccBodyX_3: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyX_3);
    s << indent << "AccBodyY_3: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyY_3);
    s << indent << "AccBodyZ_3: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyZ_3);
    s << indent << "fAccBodyX_3: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyX_3);
    s << indent << "fAccBodyY_3: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyY_3);
    s << indent << "fAccBodyZ_3: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyZ_3);
    s << indent << "AccBodyX_4: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyX_4);
    s << indent << "AccBodyY_4: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyY_4);
    s << indent << "AccBodyZ_4: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyZ_4);
    s << indent << "fAccBodyX_4: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyX_4);
    s << indent << "fAccBodyY_4: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyY_4);
    s << indent << "fAccBodyZ_4: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyZ_4);
    s << indent << "AccBodyX_5: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyX_5);
    s << indent << "AccBodyY_5: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyY_5);
    s << indent << "AccBodyZ_5: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyZ_5);
    s << indent << "fAccBodyX_5: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyX_5);
    s << indent << "fAccBodyY_5: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyY_5);
    s << indent << "fAccBodyZ_5: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyZ_5);
    s << indent << "AccBodyX_6: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyX_6);
    s << indent << "AccBodyY_6: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyY_6);
    s << indent << "AccBodyZ_6: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyZ_6);
    s << indent << "fAccBodyX_6: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyX_6);
    s << indent << "fAccBodyY_6: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyY_6);
    s << indent << "fAccBodyZ_6: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyZ_6);
    s << indent << "AccBodyX_7: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyX_7);
    s << indent << "AccBodyY_7: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyY_7);
    s << indent << "AccBodyZ_7: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyZ_7);
    s << indent << "fAccBodyX_7: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyX_7);
    s << indent << "fAccBodyY_7: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyY_7);
    s << indent << "fAccBodyZ_7: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyZ_7);
    s << indent << "AccBodyX_8: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyX_8);
    s << indent << "AccBodyY_8: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyY_8);
    s << indent << "AccBodyZ_8: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccBodyZ_8);
    s << indent << "fAccBodyX_8: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyX_8);
    s << indent << "fAccBodyY_8: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyY_8);
    s << indent << "fAccBodyZ_8: ";
    Printer<float>::stream(s, indent + "  ", v.fAccBodyZ_8);
    s << indent << "AccHorX_1: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorX_1);
    s << indent << "AccHorY_1: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorY_1);
    s << indent << "AccHorZ_1: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorZ_1);
    s << indent << "fAccHorX_1: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorX_1);
    s << indent << "fAccHorY_1: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorY_1);
    s << indent << "fAccHorZ_1: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorZ_1);
    s << indent << "AccHorX_2: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorX_2);
    s << indent << "AccHorY_2: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorY_2);
    s << indent << "AccHorZ_2: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorZ_2);
    s << indent << "fAccHorX_2: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorX_2);
    s << indent << "fAccHorY_2: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorY_2);
    s << indent << "fAccHorZ_2: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorZ_2);
    s << indent << "AccHorX_3: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorX_3);
    s << indent << "AccHorY_3: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorY_3);
    s << indent << "AccHorZ_3: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorZ_3);
    s << indent << "fAccHorX_3: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorX_3);
    s << indent << "fAccHorY_3: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorY_3);
    s << indent << "fAccHorZ_3: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorZ_3);
    s << indent << "AccHorX_4: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorX_4);
    s << indent << "AccHorY_4: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorY_4);
    s << indent << "AccHorZ_4: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorZ_4);
    s << indent << "fAccHorX_4: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorX_4);
    s << indent << "fAccHorY_4: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorY_4);
    s << indent << "fAccHorZ_4: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorZ_4);
    s << indent << "AccHorX_5: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorX_5);
    s << indent << "AccHorY_5: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorY_5);
    s << indent << "AccHorZ_5: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorZ_5);
    s << indent << "fAccHorX_5: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorX_5);
    s << indent << "fAccHorY_5: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorY_5);
    s << indent << "fAccHorZ_5: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorZ_5);
    s << indent << "AccHorX_6: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorX_6);
    s << indent << "AccHorY_6: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorY_6);
    s << indent << "AccHorZ_6: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorZ_6);
    s << indent << "fAccHorX_6: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorX_6);
    s << indent << "fAccHorY_6: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorY_6);
    s << indent << "fAccHorZ_6: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorZ_6);
    s << indent << "AccHorX_7: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorX_7);
    s << indent << "AccHorY_7: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorY_7);
    s << indent << "AccHorZ_7: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorZ_7);
    s << indent << "fAccHorX_7: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorX_7);
    s << indent << "fAccHorY_7: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorY_7);
    s << indent << "fAccHorZ_7: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorZ_7);
    s << indent << "AccHorX_8: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorX_8);
    s << indent << "AccHorY_8: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorY_8);
    s << indent << "AccHorZ_8: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AccHorZ_8);
    s << indent << "fAccHorX_8: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorX_8);
    s << indent << "fAccHorY_8: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorY_8);
    s << indent << "fAccHorZ_8: ";
    Printer<float>::stream(s, indent + "  ", v.fAccHorZ_8);
    s << indent << "ExtVelAnX: ";
    Printer<int16_t>::stream(s, indent + "  ", v.ExtVelAnX);
    s << indent << "ExtVelAnY: ";
    Printer<int16_t>::stream(s, indent + "  ", v.ExtVelAnY);
    s << indent << "fExtVelAnX: ";
    Printer<float>::stream(s, indent + "  ", v.fExtVelAnX);
    s << indent << "fExtVelAnY: ";
    Printer<float>::stream(s, indent + "  ", v.fExtVelAnY);
    s << indent << "ExtVelDigX: ";
    Printer<int16_t>::stream(s, indent + "  ", v.ExtVelDigX);
    s << indent << "ExtVelDigY: ";
    Printer<int16_t>::stream(s, indent + "  ", v.ExtVelDigY);
    s << indent << "ExtVelDigPulsesX: ";
    Printer<int16_t>::stream(s, indent + "  ", v.ExtVelDigPulsesX);
    s << indent << "ExtVelDigPulsesY: ";
    Printer<int16_t>::stream(s, indent + "  ", v.ExtVelDigPulsesY);
    s << indent << "fExtVelDigX: ";
    Printer<float>::stream(s, indent + "  ", v.fExtVelDigX);
    s << indent << "fExtVelDigY: ";
    Printer<float>::stream(s, indent + "  ", v.fExtVelDigY);
    s << indent << "ExtVelXCorrected: ";
    Printer<int16_t>::stream(s, indent + "  ", v.ExtVelXCorrected);
    s << indent << "ExtVelYCorrected: ";
    Printer<int16_t>::stream(s, indent + "  ", v.ExtVelYCorrected);
    s << indent << "fExtVelXCorrected: ";
    Printer<float>::stream(s, indent + "  ", v.fExtVelXCorrected);
    s << indent << "fExtVelYCorrected: ";
    Printer<float>::stream(s, indent + "  ", v.fExtVelYCorrected);
    s << indent << "ExtBaroPressure: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.ExtBaroPressure);
    s << indent << "fExtBaroPressure: ";
    Printer<float>::stream(s, indent + "  ", v.fExtBaroPressure);
    s << indent << "ExtBaroHeight: ";
    Printer<int32_t>::stream(s, indent + "  ", v.ExtBaroHeight);
    s << indent << "ExtBaroHeightCorrected: ";
    Printer<int32_t>::stream(s, indent + "  ", v.ExtBaroHeightCorrected);
    s << indent << "fExtBaroHeight: ";
    Printer<float>::stream(s, indent + "  ", v.fExtBaroHeight);
    s << indent << "fExtBaroHeightCorrected: ";
    Printer<float>::stream(s, indent + "  ", v.fExtBaroHeightCorrected);
    s << indent << "InvPathRadius: ";
    Printer<int16_t>::stream(s, indent + "  ", v.InvPathRadius);
    s << indent << "fInvPathRadius: ";
    Printer<float>::stream(s, indent + "  ", v.fInvPathRadius);
    s << indent << "SideSlipAngle: ";
    Printer<int16_t>::stream(s, indent + "  ", v.SideSlipAngle);
    s << indent << "fSideSlipAngle: ";
    Printer<float>::stream(s, indent + "  ", v.fSideSlipAngle);
    s << indent << "DistTrav: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.DistTrav);
    s << indent << "fDistTrav: ";
    Printer<float>::stream(s, indent + "  ", v.fDistTrav);
    s << indent << "InvPathRadius_1: ";
    Printer<int16_t>::stream(s, indent + "  ", v.InvPathRadius_1);
    s << indent << "fInvPathRadius_1: ";
    Printer<float>::stream(s, indent + "  ", v.fInvPathRadius_1);
    s << indent << "SideSlipAngle_1: ";
    Printer<int16_t>::stream(s, indent + "  ", v.SideSlipAngle_1);
    s << indent << "fSideSlipAngle_1: ";
    Printer<float>::stream(s, indent + "  ", v.fSideSlipAngle_1);
    s << indent << "DistTrav_1: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.DistTrav_1);
    s << indent << "fDistTrav_1: ";
    Printer<float>::stream(s, indent + "  ", v.fDistTrav_1);
    s << indent << "InvPathRadius_2: ";
    Printer<int16_t>::stream(s, indent + "  ", v.InvPathRadius_2);
    s << indent << "fInvPathRadius_2: ";
    Printer<float>::stream(s, indent + "  ", v.fInvPathRadius_2);
    s << indent << "SideSlipAngle_2: ";
    Printer<int16_t>::stream(s, indent + "  ", v.SideSlipAngle_2);
    s << indent << "fSideSlipAngle_2: ";
    Printer<float>::stream(s, indent + "  ", v.fSideSlipAngle_2);
    s << indent << "DistTrav_2: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.DistTrav_2);
    s << indent << "fDistTrav_2: ";
    Printer<float>::stream(s, indent + "  ", v.fDistTrav_2);
    s << indent << "InvPathRadius_3: ";
    Printer<int16_t>::stream(s, indent + "  ", v.InvPathRadius_3);
    s << indent << "fInvPathRadius_3: ";
    Printer<float>::stream(s, indent + "  ", v.fInvPathRadius_3);
    s << indent << "SideSlipAngle_3: ";
    Printer<int16_t>::stream(s, indent + "  ", v.SideSlipAngle_3);
    s << indent << "fSideSlipAngle_3: ";
    Printer<float>::stream(s, indent + "  ", v.fSideSlipAngle_3);
    s << indent << "DistTrav_3: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.DistTrav_3);
    s << indent << "fDistTrav_3: ";
    Printer<float>::stream(s, indent + "  ", v.fDistTrav_3);
    s << indent << "InvPathRadius_4: ";
    Printer<int16_t>::stream(s, indent + "  ", v.InvPathRadius_4);
    s << indent << "fInvPathRadius_4: ";
    Printer<float>::stream(s, indent + "  ", v.fInvPathRadius_4);
    s << indent << "SideSlipAngle_4: ";
    Printer<int16_t>::stream(s, indent + "  ", v.SideSlipAngle_4);
    s << indent << "fSideSlipAngle_4: ";
    Printer<float>::stream(s, indent + "  ", v.fSideSlipAngle_4);
    s << indent << "DistTrav_4: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.DistTrav_4);
    s << indent << "fDistTrav_4: ";
    Printer<float>::stream(s, indent + "  ", v.fDistTrav_4);
    s << indent << "InvPathRadius_5: ";
    Printer<int16_t>::stream(s, indent + "  ", v.InvPathRadius_5);
    s << indent << "fInvPathRadius_5: ";
    Printer<float>::stream(s, indent + "  ", v.fInvPathRadius_5);
    s << indent << "SideSlipAngle_5: ";
    Printer<int16_t>::stream(s, indent + "  ", v.SideSlipAngle_5);
    s << indent << "fSideSlipAngle_5: ";
    Printer<float>::stream(s, indent + "  ", v.fSideSlipAngle_5);
    s << indent << "DistTrav_5: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.DistTrav_5);
    s << indent << "fDistTrav_5: ";
    Printer<float>::stream(s, indent + "  ", v.fDistTrav_5);
    s << indent << "InvPathRadius_6: ";
    Printer<int16_t>::stream(s, indent + "  ", v.InvPathRadius_6);
    s << indent << "fInvPathRadius_6: ";
    Printer<float>::stream(s, indent + "  ", v.fInvPathRadius_6);
    s << indent << "SideSlipAngle_6: ";
    Printer<int16_t>::stream(s, indent + "  ", v.SideSlipAngle_6);
    s << indent << "fSideSlipAngle_6: ";
    Printer<float>::stream(s, indent + "  ", v.fSideSlipAngle_6);
    s << indent << "DistTrav_6: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.DistTrav_6);
    s << indent << "fDistTrav_6: ";
    Printer<float>::stream(s, indent + "  ", v.fDistTrav_6);
    s << indent << "InvPathRadius_7: ";
    Printer<int16_t>::stream(s, indent + "  ", v.InvPathRadius_7);
    s << indent << "fInvPathRadius_7: ";
    Printer<float>::stream(s, indent + "  ", v.fInvPathRadius_7);
    s << indent << "SideSlipAngle_7: ";
    Printer<int16_t>::stream(s, indent + "  ", v.SideSlipAngle_7);
    s << indent << "fSideSlipAngle_7: ";
    Printer<float>::stream(s, indent + "  ", v.fSideSlipAngle_7);
    s << indent << "DistTrav_7: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.DistTrav_7);
    s << indent << "fDistTrav_7: ";
    Printer<float>::stream(s, indent + "  ", v.fDistTrav_7);
    s << indent << "InvPathRadius_8: ";
    Printer<int16_t>::stream(s, indent + "  ", v.InvPathRadius_8);
    s << indent << "fInvPathRadius_8: ";
    Printer<float>::stream(s, indent + "  ", v.fInvPathRadius_8);
    s << indent << "SideSlipAngle_8: ";
    Printer<int16_t>::stream(s, indent + "  ", v.SideSlipAngle_8);
    s << indent << "fSideSlipAngle_8: ";
    Printer<float>::stream(s, indent + "  ", v.fSideSlipAngle_8);
    s << indent << "DistTrav_8: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.DistTrav_8);
    s << indent << "fDistTrav_8: ";
    Printer<float>::stream(s, indent + "  ", v.fDistTrav_8);
    s << indent << "TrigRising1: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.TrigRising1);
    s << indent << "TrigFalling1: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.TrigFalling1);
    s << indent << "TrigRising2: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.TrigRising2);
    s << indent << "TrigFalling2: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.TrigFalling2);
    s << indent << "TrigRising3: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.TrigRising3);
    s << indent << "TrigFalling3: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.TrigFalling3);
    s << indent << "TrigRising4: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.TrigRising4);
    s << indent << "TrigFalling4: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.TrigFalling4);
    s << indent << "SystemTa: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.SystemTa);
    s << indent << "SystemTemp: ";
    Printer<int16_t>::stream(s, indent + "  ", v.SystemTemp);
    s << indent << "fSystemTemp: ";
    Printer<float>::stream(s, indent + "  ", v.fSystemTemp);
    s << indent << "SystemTimeSinceInit: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.SystemTimeSinceInit);
    s << indent << "SystemDSPLoad: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.SystemDSPLoad);
    s << indent << "fSystemDSPLoad: ";
    Printer<float>::stream(s, indent + "  ", v.fSystemDSPLoad);
    s << indent << "GPSLatAbs: ";
    Printer<int32_t>::stream(s, indent + "  ", v.GPSLatAbs);
    s << indent << "GPSLonAbs: ";
    Printer<int32_t>::stream(s, indent + "  ", v.GPSLonAbs);
    s << indent << "fGPSLatAbs: ";
    Printer<float>::stream(s, indent + "  ", v.fGPSLatAbs);
    s << indent << "fGPSLonAbs: ";
    Printer<float>::stream(s, indent + "  ", v.fGPSLonAbs);
    s << indent << "GPSLatRel: ";
    Printer<int32_t>::stream(s, indent + "  ", v.GPSLatRel);
    s << indent << "GPSLonRel: ";
    Printer<int32_t>::stream(s, indent + "  ", v.GPSLonRel);
    s << indent << "fGPSLatRel: ";
    Printer<float>::stream(s, indent + "  ", v.fGPSLatRel);
    s << indent << "fGPSLonRel: ";
    Printer<float>::stream(s, indent + "  ", v.fGPSLonRel);
    s << indent << "GPSStddevLat: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.GPSStddevLat);
    s << indent << "GPSStddevLon: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.GPSStddevLon);
    s << indent << "GPSStddevHeight: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.GPSStddevHeight);
    s << indent << "fGPSStddevLat: ";
    Printer<float>::stream(s, indent + "  ", v.fGPSStddevLat);
    s << indent << "fGPSStddevLon: ";
    Printer<float>::stream(s, indent + "  ", v.fGPSStddevLon);
    s << indent << "fGPSStddevHeight: ";
    Printer<float>::stream(s, indent + "  ", v.fGPSStddevHeight);
    s << indent << "GPSVelFrameX: ";
    Printer<int16_t>::stream(s, indent + "  ", v.GPSVelFrameX);
    s << indent << "GPSVelFrameY: ";
    Printer<int16_t>::stream(s, indent + "  ", v.GPSVelFrameY);
    s << indent << "GPSVelFrameZ: ";
    Printer<int16_t>::stream(s, indent + "  ", v.GPSVelFrameZ);
    s << indent << "fGPSVelFrameX: ";
    Printer<float>::stream(s, indent + "  ", v.fGPSVelFrameX);
    s << indent << "fGPSVelFrameY: ";
    Printer<float>::stream(s, indent + "  ", v.fGPSVelFrameY);
    s << indent << "fGPSVelFrameZ: ";
    Printer<float>::stream(s, indent + "  ", v.fGPSVelFrameZ);
    s << indent << "GPSVelLatency: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.GPSVelLatency);
    s << indent << "fGPSVelLatency: ";
    Printer<float>::stream(s, indent + "  ", v.fGPSVelLatency);
    s << indent << "GPSStddevVelX: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.GPSStddevVelX);
    s << indent << "GPSStddevVelY: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.GPSStddevVelY);
    s << indent << "GPSStddevVelZ: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.GPSStddevVelZ);
    s << indent << "fGPSStddevVelX: ";
    Printer<float>::stream(s, indent + "  ", v.fGPSStddevVelX);
    s << indent << "fGPSStddevVelY: ";
    Printer<float>::stream(s, indent + "  ", v.fGPSStddevVelY);
    s << indent << "fGPSStddevVelZ: ";
    Printer<float>::stream(s, indent + "  ", v.fGPSStddevVelZ);
    s << indent << "GPSTimemsec: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.GPSTimemsec);
    s << indent << "GPSTimeWeek: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.GPSTimeWeek);
    s << indent << "GPSTrigger: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.GPSTrigger);
    s << indent << "GPSDiffAge: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.GPSDiffAge);
    s << indent << "fGPSDiffAge: ";
    Printer<float>::stream(s, indent + "  ", v.fGPSDiffAge);
    s << indent << "GPSStatsUsed: ";
    Printer<int8_t>::stream(s, indent + "  ", v.GPSStatsUsed);
    s << indent << "GPSStatsVisible: ";
    Printer<int8_t>::stream(s, indent + "  ", v.GPSStatsVisible);
    s << indent << "GPSLogDelay: ";
    Printer<int8_t>::stream(s, indent + "  ", v.GPSLogDelay);
    s << indent << "GPSReceiverLoad: ";
    Printer<int8_t>::stream(s, indent + "  ", v.GPSReceiverLoad);
    s << indent << "fGPSReceiverLoad: ";
    Printer<float>::stream(s, indent + "  ", v.fGPSReceiverLoad);
    s << indent << "GPSBaseNr: ";
    Printer<int32_t>::stream(s, indent + "  ", v.GPSBaseNr);
    s << indent << "INSRoll: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSRoll);
    s << indent << "INSPitch: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSPitch);
    s << indent << "INSYaw: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.INSYaw);
    s << indent << "GPSCOG: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.GPSCOG);
    s << indent << "fINSRoll: ";
    Printer<float>::stream(s, indent + "  ", v.fINSRoll);
    s << indent << "fINSPitch: ";
    Printer<float>::stream(s, indent + "  ", v.fINSPitch);
    s << indent << "fINSYaw: ";
    Printer<float>::stream(s, indent + "  ", v.fINSYaw);
    s << indent << "fGPSCOG: ";
    Printer<float>::stream(s, indent + "  ", v.fGPSCOG);
    s << indent << "GPSHeight: ";
    Printer<int32_t>::stream(s, indent + "  ", v.GPSHeight);
    s << indent << "Undulation: ";
    Printer<int16_t>::stream(s, indent + "  ", v.Undulation);
    s << indent << "fGPSHeight: ";
    Printer<float>::stream(s, indent + "  ", v.fGPSHeight);
    s << indent << "fUndulation: ";
    Printer<float>::stream(s, indent + "  ", v.fUndulation);
    s << indent << "GPSDualAntTimemsec: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.GPSDualAntTimemsec);
    s << indent << "GPSDualAntTimeWeek: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.GPSDualAntTimeWeek);
    s << indent << "GPSDualAntHeading: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.GPSDualAntHeading);
    s << indent << "GPSDualAntPitch: ";
    Printer<int16_t>::stream(s, indent + "  ", v.GPSDualAntPitch);
    s << indent << "fGPSDualAntHeading: ";
    Printer<float>::stream(s, indent + "  ", v.fGPSDualAntHeading);
    s << indent << "fGPSDualAntPitch: ";
    Printer<float>::stream(s, indent + "  ", v.fGPSDualAntPitch);
    s << indent << "GPSDualAntStdDevHeading: ";
    Printer<int8_t>::stream(s, indent + "  ", v.GPSDualAntStdDevHeading);
    s << indent << "GPSDualAntStdDevPitch: ";
    Printer<int8_t>::stream(s, indent + "  ", v.GPSDualAntStdDevPitch);
    s << indent << "fGPSDualAntStdDevHeading: ";
    Printer<float>::stream(s, indent + "  ", v.fGPSDualAntStdDevHeading);
    s << indent << "fGPSDualAntStdDevPitch: ";
    Printer<float>::stream(s, indent + "  ", v.fGPSDualAntStdDevPitch);
    s << indent << "INSHeight: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSHeight);
    s << indent << "fINSHeight: ";
    Printer<float>::stream(s, indent + "  ", v.fINSHeight);
    s << indent << "INSHeight_1: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSHeight_1);
    s << indent << "INSHeight_2: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSHeight_2);
    s << indent << "fINSHeight_1: ";
    Printer<float>::stream(s, indent + "  ", v.fINSHeight_1);
    s << indent << "fINSHeight_2: ";
    Printer<float>::stream(s, indent + "  ", v.fINSHeight_2);
    s << indent << "INSHeight_3: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSHeight_3);
    s << indent << "INSHeight_4: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSHeight_4);
    s << indent << "fINSHeight_3: ";
    Printer<float>::stream(s, indent + "  ", v.fINSHeight_3);
    s << indent << "fINSHeight_4: ";
    Printer<float>::stream(s, indent + "  ", v.fINSHeight_4);
    s << indent << "INSHeight_5: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSHeight_5);
    s << indent << "INSHeight_6: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSHeight_6);
    s << indent << "fINSHeight_5: ";
    Printer<float>::stream(s, indent + "  ", v.fINSHeight_5);
    s << indent << "fINSHeight_6: ";
    Printer<float>::stream(s, indent + "  ", v.fINSHeight_6);
    s << indent << "INSHeight_7: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSHeight_7);
    s << indent << "INSHeight_8: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSHeight_8);
    s << indent << "fINSHeight_7: ";
    Printer<float>::stream(s, indent + "  ", v.fINSHeight_7);
    s << indent << "fINSHeight_8: ";
    Printer<float>::stream(s, indent + "  ", v.fINSHeight_8);
    s << indent << "INSTimemsec: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.INSTimemsec);
    s << indent << "INSTimeWeek: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.INSTimeWeek);
    s << indent << "LeapSeconds: ";
    Printer<int16_t>::stream(s, indent + "  ", v.LeapSeconds);
    s << indent << "INSLatAbs: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLatAbs);
    s << indent << "INSLonAbs: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLonAbs);
    s << indent << "fINSLatAbs: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLatAbs);
    s << indent << "fINSLonAbs: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLonAbs);
    s << indent << "INSLatRel: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLatRel);
    s << indent << "INSLonRel: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLonRel);
    s << indent << "fINSLatRel: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLatRel);
    s << indent << "fINSLonRel: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLonRel);
    s << indent << "INSLatAbs_1: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLatAbs_1);
    s << indent << "INSLonAbs_1: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLonAbs_1);
    s << indent << "fINSLatAbs_1: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLatAbs_1);
    s << indent << "fINSLonAbs_1: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLonAbs_1);
    s << indent << "INSLatRel_1: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLatRel_1);
    s << indent << "INSLonRel_1: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLonRel_1);
    s << indent << "fINSLatRel_1: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLatRel_1);
    s << indent << "fINSLonRel_1: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLonRel_1);
    s << indent << "INSLatAbs_2: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLatAbs_2);
    s << indent << "INSLonAbs_2: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLonAbs_2);
    s << indent << "fINSLatAbs_2: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLatAbs_2);
    s << indent << "fINSLonAbs_2: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLonAbs_2);
    s << indent << "INSLatRel_2: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLatRel_2);
    s << indent << "INSLonRel_2: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLonRel_2);
    s << indent << "fINSLatRel_2: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLatRel_2);
    s << indent << "fINSLonRel_2: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLonRel_2);
    s << indent << "INSLatAbs_3: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLatAbs_3);
    s << indent << "INSLonAbs_3: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLonAbs_3);
    s << indent << "fINSLatAbs_3: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLatAbs_3);
    s << indent << "fINSLonAbs_3: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLonAbs_3);
    s << indent << "INSLatRel_3: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLatRel_3);
    s << indent << "INSLonRel_3: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLonRel_3);
    s << indent << "fINSLatRel_3: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLatRel_3);
    s << indent << "fINSLonRel_3: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLonRel_3);
    s << indent << "INSLatAbs_4: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLatAbs_4);
    s << indent << "INSLonAbs_4: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLonAbs_4);
    s << indent << "fINSLatAbs_4: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLatAbs_4);
    s << indent << "fINSLonAbs_4: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLonAbs_4);
    s << indent << "INSLatRel_4: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLatRel_4);
    s << indent << "INSLonRel_4: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLonRel_4);
    s << indent << "fINSLatRel_4: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLatRel_4);
    s << indent << "fINSLonRel_4: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLonRel_4);
    s << indent << "INSLatAbs_5: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLatAbs_5);
    s << indent << "INSLonAbs_5: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLonAbs_5);
    s << indent << "fINSLatAbs_5: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLatAbs_5);
    s << indent << "fINSLonAbs_5: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLonAbs_5);
    s << indent << "INSLatRel_5: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLatRel_5);
    s << indent << "INSLonRel_5: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLonRel_5);
    s << indent << "fINSLatRel_5: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLatRel_5);
    s << indent << "fINSLonRel_5: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLonRel_5);
    s << indent << "INSLatAbs_6: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLatAbs_6);
    s << indent << "INSLonAbs_6: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLonAbs_6);
    s << indent << "fINSLatAbs_6: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLatAbs_6);
    s << indent << "fINSLonAbs_6: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLonAbs_6);
    s << indent << "INSLatRel_6: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLatRel_6);
    s << indent << "INSLonRel_6: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLonRel_6);
    s << indent << "fINSLatRel_6: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLatRel_6);
    s << indent << "fINSLonRel_6: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLonRel_6);
    s << indent << "INSLatAbs_7: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLatAbs_7);
    s << indent << "INSLonAbs_7: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLonAbs_7);
    s << indent << "fINSLatAbs_7: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLatAbs_7);
    s << indent << "fINSLonAbs_7: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLonAbs_7);
    s << indent << "INSLatRel_7: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLatRel_7);
    s << indent << "INSLonRel_7: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLonRel_7);
    s << indent << "fINSLatRel_7: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLatRel_7);
    s << indent << "fINSLonRel_7: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLonRel_7);
    s << indent << "INSLatAbs_8: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLatAbs_8);
    s << indent << "INSLonAbs_8: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLonAbs_8);
    s << indent << "fINSLatAbs_8: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLatAbs_8);
    s << indent << "fINSLonAbs_8: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLonAbs_8);
    s << indent << "INSLatRel_8: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLatRel_8);
    s << indent << "INSLonRel_8: ";
    Printer<int32_t>::stream(s, indent + "  ", v.INSLonRel_8);
    s << indent << "fINSLatRel_8: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLatRel_8);
    s << indent << "fINSLonRel_8: ";
    Printer<float>::stream(s, indent + "  ", v.fINSLonRel_8);
    s << indent << "INSVelHorX: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorX);
    s << indent << "INSVelHorY: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorY);
    s << indent << "INSVelHorZ: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorZ);
    s << indent << "fINSVelHorX: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorX);
    s << indent << "fINSVelHorY: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorY);
    s << indent << "fINSVelHorZ: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorZ);
    s << indent << "INSVelFrameX: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelFrameX);
    s << indent << "INSVelFrameY: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelFrameY);
    s << indent << "INSVelFrameZ: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelFrameZ);
    s << indent << "fINSVelFrameX: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelFrameX);
    s << indent << "fINSVelFrameY: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelFrameY);
    s << indent << "fINSVelFrameZ: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelFrameZ);
    s << indent << "INSVelHorX_1: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorX_1);
    s << indent << "INSVelHorY_1: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorY_1);
    s << indent << "INSVelHorZ_1: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorZ_1);
    s << indent << "fINSVelHorX_1: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorX_1);
    s << indent << "fINSVelHorY_1: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorY_1);
    s << indent << "fINSVelHorZ_1: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorZ_1);
    s << indent << "INSVelHorX_2: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorX_2);
    s << indent << "INSVelHorY_2: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorY_2);
    s << indent << "INSVelHorZ_2: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorZ_2);
    s << indent << "fINSVelHorX_2: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorX_2);
    s << indent << "fINSVelHorY_2: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorY_2);
    s << indent << "fINSVelHorZ_2: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorZ_2);
    s << indent << "INSVelHorX_3: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorX_3);
    s << indent << "INSVelHorY_3: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorY_3);
    s << indent << "INSVelHorZ_3: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorZ_3);
    s << indent << "fINSVelHorX_3: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorX_3);
    s << indent << "fINSVelHorY_3: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorY_3);
    s << indent << "fINSVelHorZ_3: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorZ_3);
    s << indent << "INSVelHorX_4: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorX_4);
    s << indent << "INSVelHorY_4: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorY_4);
    s << indent << "INSVelHorZ_4: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorZ_4);
    s << indent << "fINSVelHorX_4: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorX_4);
    s << indent << "fINSVelHorY_4: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorY_4);
    s << indent << "fINSVelHorZ_4: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorZ_4);
    s << indent << "INSVelHorX_5: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorX_5);
    s << indent << "INSVelHorY_5: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorY_5);
    s << indent << "INSVelHorZ_5: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorZ_5);
    s << indent << "fINSVelHorX_5: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorX_5);
    s << indent << "fINSVelHorY_5: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorY_5);
    s << indent << "fINSVelHorZ_5: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorZ_5);
    s << indent << "INSVelHorX_6: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorX_6);
    s << indent << "INSVelHorY_6: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorY_6);
    s << indent << "INSVelHorZ_6: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorZ_6);
    s << indent << "fINSVelHorX_6: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorX_6);
    s << indent << "fINSVelHorY_6: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorY_6);
    s << indent << "fINSVelHorZ_6: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorZ_6);
    s << indent << "INSVelHorX_7: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorX_7);
    s << indent << "INSVelHorY_7: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorY_7);
    s << indent << "INSVelHorZ_7: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorZ_7);
    s << indent << "fINSVelHorX_7: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorX_7);
    s << indent << "fINSVelHorY_7: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorY_7);
    s << indent << "fINSVelHorZ_7: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorZ_7);
    s << indent << "INSVelHorX_8: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorX_8);
    s << indent << "INSVelHorY_8: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorY_8);
    s << indent << "INSVelHorZ_8: ";
    Printer<int16_t>::stream(s, indent + "  ", v.INSVelHorZ_8);
    s << indent << "fINSVelHorX_8: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorX_8);
    s << indent << "fINSVelHorY_8: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorY_8);
    s << indent << "fINSVelHorZ_8: ";
    Printer<float>::stream(s, indent + "  ", v.fINSVelHorZ_8);
    s << indent << "INSStddevLat: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.INSStddevLat);
    s << indent << "INSStddevLong: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.INSStddevLong);
    s << indent << "INSStddevHeight: ";
    Printer<uint16_t>::stream(s, indent + "  ", v.INSStddevHeight);
    s << indent << "fINSStddevLat: ";
    Printer<float>::stream(s, indent + "  ", v.fINSStddevLat);
    s << indent << "fINSStddevLong: ";
    Printer<float>::stream(s, indent + "  ", v.fINSStddevLong);
    s << indent << "fINSStddevHeight: ";
    Printer<float>::stream(s, indent + "  ", v.fINSStddevHeight);
    s << indent << "INSStddevVelX: ";
    Printer<int8_t>::stream(s, indent + "  ", v.INSStddevVelX);
    s << indent << "INSStddevVelY: ";
    Printer<int8_t>::stream(s, indent + "  ", v.INSStddevVelY);
    s << indent << "INSStddevVelZ: ";
    Printer<int8_t>::stream(s, indent + "  ", v.INSStddevVelZ);
    s << indent << "fINSStddevVelX: ";
    Printer<float>::stream(s, indent + "  ", v.fINSStddevVelX);
    s << indent << "fINSStddevVelY: ";
    Printer<float>::stream(s, indent + "  ", v.fINSStddevVelY);
    s << indent << "fINSStddevVelZ: ";
    Printer<float>::stream(s, indent + "  ", v.fINSStddevVelZ);
    s << indent << "INSStddevRoll: ";
    Printer<int8_t>::stream(s, indent + "  ", v.INSStddevRoll);
    s << indent << "INSStddevPitch: ";
    Printer<int8_t>::stream(s, indent + "  ", v.INSStddevPitch);
    s << indent << "INSStddevYaw: ";
    Printer<int8_t>::stream(s, indent + "  ", v.INSStddevYaw);
    s << indent << "fINSStddevRoll: ";
    Printer<float>::stream(s, indent + "  ", v.fINSStddevRoll);
    s << indent << "fINSStddevPitch: ";
    Printer<float>::stream(s, indent + "  ", v.fINSStddevPitch);
    s << indent << "fINSStddevYaw: ";
    Printer<float>::stream(s, indent + "  ", v.fINSStddevYaw);
    s << indent << "AN1: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AN1);
    s << indent << "AN2: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AN2);
    s << indent << "AN3: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AN3);
    s << indent << "AN4: ";
    Printer<int16_t>::stream(s, indent + "  ", v.AN4);
    s << indent << "fAN1: ";
    Printer<float>::stream(s, indent + "  ", v.fAN1);
    s << indent << "fAN2: ";
    Printer<float>::stream(s, indent + "  ", v.fAN2);
    s << indent << "fAN3: ";
    Printer<float>::stream(s, indent + "  ", v.fAN3);
    s << indent << "fAN4: ";
    Printer<float>::stream(s, indent + "  ", v.fAN4);
    s << indent << "KFLatStimulated: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.KFLatStimulated);
    s << indent << "KFLongStimulated: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.KFLongStimulated);
    s << indent << "KFSteadyState: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.KFSteadyState);
    s << indent << "GPSReceiverError: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.GPSReceiverError);
    s << indent << "GPSReceiverStatus: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.GPSReceiverStatus);
    s << indent << "TimeMsec: ";
    Printer<float>::stream(s, indent + "  ", v.TimeMsec);
    s << indent << "TimeNsec: ";
    Printer<float>::stream(s, indent + "  ", v.TimeNsec);
  }
};

} // namespace message_operations
} // namespace ros

#endif // ADMA_CONNECT_MESSAGE_ADMA_H
